// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Garrison.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Garrison.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Hades {
namespace Data {

namespace {

const ::google::protobuf::Descriptor* Garrison_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Garrison_reflection_ = NULL;
const ::google::protobuf::Descriptor* MD5OfGarrison_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MD5OfGarrison_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_Garrison_2eproto() {
  protobuf_AddDesc_Garrison_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Garrison.proto");
  GOOGLE_CHECK(file != NULL);
  Garrison_descriptor_ = file->message_type(0);
  static const int Garrison_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Garrison, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Garrison, clear_city_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Garrison, garrison_desc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Garrison, task_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Garrison, record_),
  };
  Garrison_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Garrison_descriptor_,
      Garrison::default_instance_,
      Garrison_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Garrison, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Garrison, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Garrison));
  MD5OfGarrison_descriptor_ = file->message_type(1);
  static const int MD5OfGarrison_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MD5OfGarrison, val_),
  };
  MD5OfGarrison_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MD5OfGarrison_descriptor_,
      MD5OfGarrison::default_instance_,
      MD5OfGarrison_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MD5OfGarrison, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MD5OfGarrison, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MD5OfGarrison));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Garrison_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Garrison_descriptor_, &Garrison::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MD5OfGarrison_descriptor_, &MD5OfGarrison::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Garrison_2eproto() {
  delete Garrison::default_instance_;
  delete Garrison_reflection_;
  delete MD5OfGarrison::default_instance_;
  delete MD5OfGarrison_reflection_;
  delete MD5OfGarrison::_default_val_;
}

void protobuf_AddDesc_Garrison_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016Garrison.proto\022\nHades.Data\"_\n\010Garrison"
    "\022\n\n\002id\030\001 \001(\005\022\022\n\nclear_city\030\002 \003(\005\022\025\n\rgarr"
    "ison_desc\030\003 \001(\t\022\014\n\004task\030\004 \001(\005\022\016\n\006record\030"
    "\005 \001(\t\">\n\rMD5OfGarrison\022-\n\003val\030\001 \001(\t: 9ED"
    "BBEAB6E21A714766A3C72AD3AA691", 189);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Garrison.proto", &protobuf_RegisterTypes);
  Garrison::default_instance_ = new Garrison();
  MD5OfGarrison::_default_val_ =
      new ::std::string("9EDBBEAB6E21A714766A3C72AD3AA691", 32);
  MD5OfGarrison::default_instance_ = new MD5OfGarrison();
  Garrison::default_instance_->InitAsDefaultInstance();
  MD5OfGarrison::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Garrison_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Garrison_2eproto {
  StaticDescriptorInitializer_Garrison_2eproto() {
    protobuf_AddDesc_Garrison_2eproto();
  }
} static_descriptor_initializer_Garrison_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int Garrison::kIdFieldNumber;
const int Garrison::kClearCityFieldNumber;
const int Garrison::kGarrisonDescFieldNumber;
const int Garrison::kTaskFieldNumber;
const int Garrison::kRecordFieldNumber;
#endif  // !_MSC_VER

Garrison::Garrison()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Garrison::InitAsDefaultInstance() {
}

Garrison::Garrison(const Garrison& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Garrison::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  garrison_desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  task_ = 0;
  record_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Garrison::~Garrison() {
  SharedDtor();
}

void Garrison::SharedDtor() {
  if (garrison_desc_ != &::google::protobuf::internal::kEmptyString) {
    delete garrison_desc_;
  }
  if (record_ != &::google::protobuf::internal::kEmptyString) {
    delete record_;
  }
  if (this != default_instance_) {
  }
}

void Garrison::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Garrison::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Garrison_descriptor_;
}

const Garrison& Garrison::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Garrison_2eproto();
  return *default_instance_;
}

Garrison* Garrison::default_instance_ = NULL;

Garrison* Garrison::New() const {
  return new Garrison;
}

void Garrison::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    if (has_garrison_desc()) {
      if (garrison_desc_ != &::google::protobuf::internal::kEmptyString) {
        garrison_desc_->clear();
      }
    }
    task_ = 0;
    if (has_record()) {
      if (record_ != &::google::protobuf::internal::kEmptyString) {
        record_->clear();
      }
    }
  }
  clear_city_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Garrison::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_clear_city;
        break;
      }

      // repeated int32 clear_city = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_clear_city:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_clear_city())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_clear_city())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_clear_city;
        if (input->ExpectTag(26)) goto parse_garrison_desc;
        break;
      }

      // optional string garrison_desc = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_garrison_desc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_garrison_desc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->garrison_desc().data(), this->garrison_desc().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_task;
        break;
      }

      // optional int32 task = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_task:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &task_)));
          set_has_task();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_record;
        break;
      }

      // optional string record = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_record:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_record()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->record().data(), this->record().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Garrison::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // repeated int32 clear_city = 2;
  for (int i = 0; i < this->clear_city_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->clear_city(i), output);
  }

  // optional string garrison_desc = 3;
  if (has_garrison_desc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->garrison_desc().data(), this->garrison_desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->garrison_desc(), output);
  }

  // optional int32 task = 4;
  if (has_task()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->task(), output);
  }

  // optional string record = 5;
  if (has_record()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->record().data(), this->record().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->record(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Garrison::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // repeated int32 clear_city = 2;
  for (int i = 0; i < this->clear_city_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->clear_city(i), target);
  }

  // optional string garrison_desc = 3;
  if (has_garrison_desc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->garrison_desc().data(), this->garrison_desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->garrison_desc(), target);
  }

  // optional int32 task = 4;
  if (has_task()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->task(), target);
  }

  // optional string record = 5;
  if (has_record()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->record().data(), this->record().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->record(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Garrison::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional string garrison_desc = 3;
    if (has_garrison_desc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->garrison_desc());
    }

    // optional int32 task = 4;
    if (has_task()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->task());
    }

    // optional string record = 5;
    if (has_record()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->record());
    }

  }
  // repeated int32 clear_city = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->clear_city_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->clear_city(i));
    }
    total_size += 1 * this->clear_city_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Garrison::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Garrison* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Garrison*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Garrison::MergeFrom(const Garrison& from) {
  GOOGLE_CHECK_NE(&from, this);
  clear_city_.MergeFrom(from.clear_city_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_garrison_desc()) {
      set_garrison_desc(from.garrison_desc());
    }
    if (from.has_task()) {
      set_task(from.task());
    }
    if (from.has_record()) {
      set_record(from.record());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Garrison::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Garrison::CopyFrom(const Garrison& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Garrison::IsInitialized() const {

  return true;
}

void Garrison::Swap(Garrison* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    clear_city_.Swap(&other->clear_city_);
    std::swap(garrison_desc_, other->garrison_desc_);
    std::swap(task_, other->task_);
    std::swap(record_, other->record_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Garrison::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Garrison_descriptor_;
  metadata.reflection = Garrison_reflection_;
  return metadata;
}


// ===================================================================

::std::string* MD5OfGarrison::_default_val_ = NULL;
#ifndef _MSC_VER
const int MD5OfGarrison::kValFieldNumber;
#endif  // !_MSC_VER

MD5OfGarrison::MD5OfGarrison()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MD5OfGarrison::InitAsDefaultInstance() {
}

MD5OfGarrison::MD5OfGarrison(const MD5OfGarrison& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MD5OfGarrison::SharedCtor() {
  _cached_size_ = 0;
  val_ = const_cast< ::std::string*>(_default_val_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MD5OfGarrison::~MD5OfGarrison() {
  SharedDtor();
}

void MD5OfGarrison::SharedDtor() {
  if (val_ != _default_val_) {
    delete val_;
  }
  if (this != default_instance_) {
  }
}

void MD5OfGarrison::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MD5OfGarrison::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MD5OfGarrison_descriptor_;
}

const MD5OfGarrison& MD5OfGarrison::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Garrison_2eproto();
  return *default_instance_;
}

MD5OfGarrison* MD5OfGarrison::default_instance_ = NULL;

MD5OfGarrison* MD5OfGarrison::New() const {
  return new MD5OfGarrison;
}

void MD5OfGarrison::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_val()) {
      if (val_ != _default_val_) {
        val_->assign(*_default_val_);
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MD5OfGarrison::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string val = 1 [default = "9EDBBEAB6E21A714766A3C72AD3AA691"];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_val()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->val().data(), this->val().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MD5OfGarrison::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string val = 1 [default = "9EDBBEAB6E21A714766A3C72AD3AA691"];
  if (has_val()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->val().data(), this->val().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->val(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MD5OfGarrison::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string val = 1 [default = "9EDBBEAB6E21A714766A3C72AD3AA691"];
  if (has_val()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->val().data(), this->val().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->val(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MD5OfGarrison::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string val = 1 [default = "9EDBBEAB6E21A714766A3C72AD3AA691"];
    if (has_val()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->val());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MD5OfGarrison::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MD5OfGarrison* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MD5OfGarrison*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MD5OfGarrison::MergeFrom(const MD5OfGarrison& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_val()) {
      set_val(from.val());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MD5OfGarrison::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MD5OfGarrison::CopyFrom(const MD5OfGarrison& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MD5OfGarrison::IsInitialized() const {

  return true;
}

void MD5OfGarrison::Swap(MD5OfGarrison* other) {
  if (other != this) {
    std::swap(val_, other->val_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MD5OfGarrison::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MD5OfGarrison_descriptor_;
  metadata.reflection = MD5OfGarrison_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Data
}  // namespace Hades

// @@protoc_insertion_point(global_scope)
