// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: log.proto

#ifndef PROTOBUF_log_2eproto__INCLUDED
#define PROTOBUF_log_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)

namespace proto {
namespace log {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_log_2eproto();
void protobuf_AssignDesc_log_2eproto();
void protobuf_ShutdownFile_log_2eproto();

class no_batch_save_logs_notify;
class go_batch_save_logs_notify;
class eo_batch_save_logs_notify;
class save_to_log;
class no_mobile_log_notify;
class no_account_log_notify;
class do_create_role_log_notify;
class go_role_login_log_notify;
class go_role_logout_log_notify;
class go_item_log_notify;
class go_money_log_notify;
class go_luck_gift_log_notify;
class go_hero_log_notify;
class go_task_log_notify;
class go_exp_log_notify;
class go_prestige_log_notify;
class go_user_times_log_notify;
class eo_country_log_notify;
class eo_family_log_notify;
class eo_friend_log_notify;
class eo_mail_log_notify;
class go_pk_log_notify;
class go_shop_log_notify;
class go_random_shop_log_notify;
class go_equip_log_notify;
class go_achieve_log_notify;
class go_lifeforce_log_notify;
class go_dungeon_log_notify;
class go_role_buff_log_notify;
class eo_goods_log_notify;
class go_role_new_guide_log_notify;
class go_role_trade_log_notify;
class go_role_recharge_log_notify;
class go_rmb_log_notify;
class go_expedition_log_notify;
class eo_scene_log_notify;
class go_combat_log_notify;
class go_hero_exp_log_notify;
class eo_redbag_log_notify;
class go_patrol_hire_log_notify;
class eo_offline_arena_rank_log_notify;

// ===================================================================

class no_batch_save_logs_notify : public ::google::protobuf::Message {
 public:
  no_batch_save_logs_notify();
  virtual ~no_batch_save_logs_notify();

  no_batch_save_logs_notify(const no_batch_save_logs_notify& from);

  inline no_batch_save_logs_notify& operator=(const no_batch_save_logs_notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const no_batch_save_logs_notify& default_instance();

  void Swap(no_batch_save_logs_notify* other);

  // implements Message ----------------------------------------------

  no_batch_save_logs_notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const no_batch_save_logs_notify& from);
  void MergeFrom(const no_batch_save_logs_notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.log.save_to_log logs = 1;
  inline int logs_size() const;
  inline void clear_logs();
  static const int kLogsFieldNumber = 1;
  inline const ::proto::log::save_to_log& logs(int index) const;
  inline ::proto::log::save_to_log* mutable_logs(int index);
  inline ::proto::log::save_to_log* add_logs();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::log::save_to_log >&
      logs() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::log::save_to_log >*
      mutable_logs();

  // @@protoc_insertion_point(class_scope:proto.log.no_batch_save_logs_notify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::log::save_to_log > logs_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();

  void InitAsDefaultInstance();
  static no_batch_save_logs_notify* default_instance_;
};
// -------------------------------------------------------------------

class go_batch_save_logs_notify : public ::google::protobuf::Message {
 public:
  go_batch_save_logs_notify();
  virtual ~go_batch_save_logs_notify();

  go_batch_save_logs_notify(const go_batch_save_logs_notify& from);

  inline go_batch_save_logs_notify& operator=(const go_batch_save_logs_notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const go_batch_save_logs_notify& default_instance();

  void Swap(go_batch_save_logs_notify* other);

  // implements Message ----------------------------------------------

  go_batch_save_logs_notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const go_batch_save_logs_notify& from);
  void MergeFrom(const go_batch_save_logs_notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.log.save_to_log logs = 1;
  inline int logs_size() const;
  inline void clear_logs();
  static const int kLogsFieldNumber = 1;
  inline const ::proto::log::save_to_log& logs(int index) const;
  inline ::proto::log::save_to_log* mutable_logs(int index);
  inline ::proto::log::save_to_log* add_logs();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::log::save_to_log >&
      logs() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::log::save_to_log >*
      mutable_logs();

  // @@protoc_insertion_point(class_scope:proto.log.go_batch_save_logs_notify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::log::save_to_log > logs_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();

  void InitAsDefaultInstance();
  static go_batch_save_logs_notify* default_instance_;
};
// -------------------------------------------------------------------

class eo_batch_save_logs_notify : public ::google::protobuf::Message {
 public:
  eo_batch_save_logs_notify();
  virtual ~eo_batch_save_logs_notify();

  eo_batch_save_logs_notify(const eo_batch_save_logs_notify& from);

  inline eo_batch_save_logs_notify& operator=(const eo_batch_save_logs_notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const eo_batch_save_logs_notify& default_instance();

  void Swap(eo_batch_save_logs_notify* other);

  // implements Message ----------------------------------------------

  eo_batch_save_logs_notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const eo_batch_save_logs_notify& from);
  void MergeFrom(const eo_batch_save_logs_notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.log.save_to_log logs = 1;
  inline int logs_size() const;
  inline void clear_logs();
  static const int kLogsFieldNumber = 1;
  inline const ::proto::log::save_to_log& logs(int index) const;
  inline ::proto::log::save_to_log* mutable_logs(int index);
  inline ::proto::log::save_to_log* add_logs();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::log::save_to_log >&
      logs() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::log::save_to_log >*
      mutable_logs();

  // @@protoc_insertion_point(class_scope:proto.log.eo_batch_save_logs_notify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::log::save_to_log > logs_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();

  void InitAsDefaultInstance();
  static eo_batch_save_logs_notify* default_instance_;
};
// -------------------------------------------------------------------

class save_to_log : public ::google::protobuf::Message {
 public:
  save_to_log();
  virtual ~save_to_log();

  save_to_log(const save_to_log& from);

  inline save_to_log& operator=(const save_to_log& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const save_to_log& default_instance();

  void Swap(save_to_log* other);

  // implements Message ----------------------------------------------

  save_to_log* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const save_to_log& from);
  void MergeFrom(const save_to_log& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cmd = 1;
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::google::protobuf::uint32 cmd() const;
  inline void set_cmd(::google::protobuf::uint32 value);

  // required bytes data = 2;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:proto.log.save_to_log)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* data_;
  ::google::protobuf::uint32 cmd_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();

  void InitAsDefaultInstance();
  static save_to_log* default_instance_;
};
// -------------------------------------------------------------------

class no_mobile_log_notify : public ::google::protobuf::Message {
 public:
  no_mobile_log_notify();
  virtual ~no_mobile_log_notify();

  no_mobile_log_notify(const no_mobile_log_notify& from);

  inline no_mobile_log_notify& operator=(const no_mobile_log_notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const no_mobile_log_notify& default_instance();

  void Swap(no_mobile_log_notify* other);

  // implements Message ----------------------------------------------

  no_mobile_log_notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const no_mobile_log_notify& from);
  void MergeFrom(const no_mobile_log_notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string uuid = 1;
  inline bool has_uuid() const;
  inline void clear_uuid();
  static const int kUuidFieldNumber = 1;
  inline const ::std::string& uuid() const;
  inline void set_uuid(const ::std::string& value);
  inline void set_uuid(const char* value);
  inline void set_uuid(const char* value, size_t size);
  inline ::std::string* mutable_uuid();
  inline ::std::string* release_uuid();
  inline void set_allocated_uuid(::std::string* uuid);

  // optional string device_model = 2;
  inline bool has_device_model() const;
  inline void clear_device_model();
  static const int kDeviceModelFieldNumber = 2;
  inline const ::std::string& device_model() const;
  inline void set_device_model(const ::std::string& value);
  inline void set_device_model(const char* value);
  inline void set_device_model(const char* value, size_t size);
  inline ::std::string* mutable_device_model();
  inline ::std::string* release_device_model();
  inline void set_allocated_device_model(::std::string* device_model);

  // optional string device_sys_version = 3;
  inline bool has_device_sys_version() const;
  inline void clear_device_sys_version();
  static const int kDeviceSysVersionFieldNumber = 3;
  inline const ::std::string& device_sys_version() const;
  inline void set_device_sys_version(const ::std::string& value);
  inline void set_device_sys_version(const char* value);
  inline void set_device_sys_version(const char* value, size_t size);
  inline ::std::string* mutable_device_sys_version();
  inline ::std::string* release_device_sys_version();
  inline void set_allocated_device_sys_version(::std::string* device_sys_version);

  // optional string cpu_type = 4;
  inline bool has_cpu_type() const;
  inline void clear_cpu_type();
  static const int kCpuTypeFieldNumber = 4;
  inline const ::std::string& cpu_type() const;
  inline void set_cpu_type(const ::std::string& value);
  inline void set_cpu_type(const char* value);
  inline void set_cpu_type(const char* value, size_t size);
  inline ::std::string* mutable_cpu_type();
  inline ::std::string* release_cpu_type();
  inline void set_allocated_cpu_type(::std::string* cpu_type);

  // optional int32 cpu_count = 5;
  inline bool has_cpu_count() const;
  inline void clear_cpu_count();
  static const int kCpuCountFieldNumber = 5;
  inline ::google::protobuf::int32 cpu_count() const;
  inline void set_cpu_count(::google::protobuf::int32 value);

  // optional int32 memory_size = 6;
  inline bool has_memory_size() const;
  inline void clear_memory_size();
  static const int kMemorySizeFieldNumber = 6;
  inline ::google::protobuf::int32 memory_size() const;
  inline void set_memory_size(::google::protobuf::int32 value);

  // optional string grph_device_name = 7;
  inline bool has_grph_device_name() const;
  inline void clear_grph_device_name();
  static const int kGrphDeviceNameFieldNumber = 7;
  inline const ::std::string& grph_device_name() const;
  inline void set_grph_device_name(const ::std::string& value);
  inline void set_grph_device_name(const char* value);
  inline void set_grph_device_name(const char* value, size_t size);
  inline ::std::string* mutable_grph_device_name();
  inline ::std::string* release_grph_device_name();
  inline void set_allocated_grph_device_name(::std::string* grph_device_name);

  // optional uint32 log_time = 8;
  inline bool has_log_time() const;
  inline void clear_log_time();
  static const int kLogTimeFieldNumber = 8;
  inline ::google::protobuf::uint32 log_time() const;
  inline void set_log_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.log.no_mobile_log_notify)
 private:
  inline void set_has_uuid();
  inline void clear_has_uuid();
  inline void set_has_device_model();
  inline void clear_has_device_model();
  inline void set_has_device_sys_version();
  inline void clear_has_device_sys_version();
  inline void set_has_cpu_type();
  inline void clear_has_cpu_type();
  inline void set_has_cpu_count();
  inline void clear_has_cpu_count();
  inline void set_has_memory_size();
  inline void clear_has_memory_size();
  inline void set_has_grph_device_name();
  inline void clear_has_grph_device_name();
  inline void set_has_log_time();
  inline void clear_has_log_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* uuid_;
  ::std::string* device_model_;
  ::std::string* device_sys_version_;
  ::std::string* cpu_type_;
  ::google::protobuf::int32 cpu_count_;
  ::google::protobuf::int32 memory_size_;
  ::std::string* grph_device_name_;
  ::google::protobuf::uint32 log_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();

  void InitAsDefaultInstance();
  static no_mobile_log_notify* default_instance_;
};
// -------------------------------------------------------------------

class no_account_log_notify : public ::google::protobuf::Message {
 public:
  no_account_log_notify();
  virtual ~no_account_log_notify();

  no_account_log_notify(const no_account_log_notify& from);

  inline no_account_log_notify& operator=(const no_account_log_notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const no_account_log_notify& default_instance();

  void Swap(no_account_log_notify* other);

  // implements Message ----------------------------------------------

  no_account_log_notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const no_account_log_notify& from);
  void MergeFrom(const no_account_log_notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 account_uid = 1;
  inline bool has_account_uid() const;
  inline void clear_account_uid();
  static const int kAccountUidFieldNumber = 1;
  inline ::google::protobuf::uint64 account_uid() const;
  inline void set_account_uid(::google::protobuf::uint64 value);

  // optional uint32 channel_id = 2;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 2;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);

  // optional uint64 role_uid = 3;
  inline bool has_role_uid() const;
  inline void clear_role_uid();
  static const int kRoleUidFieldNumber = 3;
  inline ::google::protobuf::uint64 role_uid() const;
  inline void set_role_uid(::google::protobuf::uint64 value);

  // optional string mobile_uuid = 4;
  inline bool has_mobile_uuid() const;
  inline void clear_mobile_uuid();
  static const int kMobileUuidFieldNumber = 4;
  inline const ::std::string& mobile_uuid() const;
  inline void set_mobile_uuid(const ::std::string& value);
  inline void set_mobile_uuid(const char* value);
  inline void set_mobile_uuid(const char* value, size_t size);
  inline ::std::string* mutable_mobile_uuid();
  inline ::std::string* release_mobile_uuid();
  inline void set_allocated_mobile_uuid(::std::string* mobile_uuid);

  // optional uint32 source_type = 5;
  inline bool has_source_type() const;
  inline void clear_source_type();
  static const int kSourceTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 source_type() const;
  inline void set_source_type(::google::protobuf::uint32 value);

  // optional uint32 log_time = 6;
  inline bool has_log_time() const;
  inline void clear_log_time();
  static const int kLogTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 log_time() const;
  inline void set_log_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.log.no_account_log_notify)
 private:
  inline void set_has_account_uid();
  inline void clear_has_account_uid();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_role_uid();
  inline void clear_has_role_uid();
  inline void set_has_mobile_uuid();
  inline void clear_has_mobile_uuid();
  inline void set_has_source_type();
  inline void clear_has_source_type();
  inline void set_has_log_time();
  inline void clear_has_log_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 account_uid_;
  ::google::protobuf::uint64 role_uid_;
  ::google::protobuf::uint32 channel_id_;
  ::google::protobuf::uint32 source_type_;
  ::std::string* mobile_uuid_;
  ::google::protobuf::uint32 log_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();

  void InitAsDefaultInstance();
  static no_account_log_notify* default_instance_;
};
// -------------------------------------------------------------------

class do_create_role_log_notify : public ::google::protobuf::Message {
 public:
  do_create_role_log_notify();
  virtual ~do_create_role_log_notify();

  do_create_role_log_notify(const do_create_role_log_notify& from);

  inline do_create_role_log_notify& operator=(const do_create_role_log_notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const do_create_role_log_notify& default_instance();

  void Swap(do_create_role_log_notify* other);

  // implements Message ----------------------------------------------

  do_create_role_log_notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const do_create_role_log_notify& from);
  void MergeFrom(const do_create_role_log_notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 role_uid = 1;
  inline bool has_role_uid() const;
  inline void clear_role_uid();
  static const int kRoleUidFieldNumber = 1;
  inline ::google::protobuf::uint64 role_uid() const;
  inline void set_role_uid(::google::protobuf::uint64 value);

  // required string nickname = 2;
  inline bool has_nickname() const;
  inline void clear_nickname();
  static const int kNicknameFieldNumber = 2;
  inline const ::std::string& nickname() const;
  inline void set_nickname(const ::std::string& value);
  inline void set_nickname(const char* value);
  inline void set_nickname(const char* value, size_t size);
  inline ::std::string* mutable_nickname();
  inline ::std::string* release_nickname();
  inline void set_allocated_nickname(::std::string* nickname);

  // required .proto.common.mobile_info mobile = 3;
  inline bool has_mobile() const;
  inline void clear_mobile();
  static const int kMobileFieldNumber = 3;
  inline const ::proto::common::mobile_info& mobile() const;
  inline ::proto::common::mobile_info* mutable_mobile();
  inline ::proto::common::mobile_info* release_mobile();
  inline void set_allocated_mobile(::proto::common::mobile_info* mobile);

  // required uint32 log_time = 4;
  inline bool has_log_time() const;
  inline void clear_log_time();
  static const int kLogTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 log_time() const;
  inline void set_log_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.log.do_create_role_log_notify)
 private:
  inline void set_has_role_uid();
  inline void clear_has_role_uid();
  inline void set_has_nickname();
  inline void clear_has_nickname();
  inline void set_has_mobile();
  inline void clear_has_mobile();
  inline void set_has_log_time();
  inline void clear_has_log_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 role_uid_;
  ::std::string* nickname_;
  ::proto::common::mobile_info* mobile_;
  ::google::protobuf::uint32 log_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();

  void InitAsDefaultInstance();
  static do_create_role_log_notify* default_instance_;
};
// -------------------------------------------------------------------

class go_role_login_log_notify : public ::google::protobuf::Message {
 public:
  go_role_login_log_notify();
  virtual ~go_role_login_log_notify();

  go_role_login_log_notify(const go_role_login_log_notify& from);

  inline go_role_login_log_notify& operator=(const go_role_login_log_notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const go_role_login_log_notify& default_instance();

  void Swap(go_role_login_log_notify* other);

  // implements Message ----------------------------------------------

  go_role_login_log_notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const go_role_login_log_notify& from);
  void MergeFrom(const go_role_login_log_notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 role_uid = 1;
  inline bool has_role_uid() const;
  inline void clear_role_uid();
  static const int kRoleUidFieldNumber = 1;
  inline ::google::protobuf::uint64 role_uid() const;
  inline void set_role_uid(::google::protobuf::uint64 value);

  // required uint32 gate_id = 2;
  inline bool has_gate_id() const;
  inline void clear_gate_id();
  static const int kGateIdFieldNumber = 2;
  inline ::google::protobuf::uint32 gate_id() const;
  inline void set_gate_id(::google::protobuf::uint32 value);

  // required uint32 game_id = 3;
  inline bool has_game_id() const;
  inline void clear_game_id();
  static const int kGameIdFieldNumber = 3;
  inline ::google::protobuf::uint32 game_id() const;
  inline void set_game_id(::google::protobuf::uint32 value);

  // optional .proto.common.mobile_info mobile = 4;
  inline bool has_mobile() const;
  inline void clear_mobile();
  static const int kMobileFieldNumber = 4;
  inline const ::proto::common::mobile_info& mobile() const;
  inline ::proto::common::mobile_info* mutable_mobile();
  inline ::proto::common::mobile_info* release_mobile();
  inline void set_allocated_mobile(::proto::common::mobile_info* mobile);

  // required uint32 log_time = 5;
  inline bool has_log_time() const;
  inline void clear_log_time();
  static const int kLogTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 log_time() const;
  inline void set_log_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.log.go_role_login_log_notify)
 private:
  inline void set_has_role_uid();
  inline void clear_has_role_uid();
  inline void set_has_gate_id();
  inline void clear_has_gate_id();
  inline void set_has_game_id();
  inline void clear_has_game_id();
  inline void set_has_mobile();
  inline void clear_has_mobile();
  inline void set_has_log_time();
  inline void clear_has_log_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 role_uid_;
  ::google::protobuf::uint32 gate_id_;
  ::google::protobuf::uint32 game_id_;
  ::proto::common::mobile_info* mobile_;
  ::google::protobuf::uint32 log_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();

  void InitAsDefaultInstance();
  static go_role_login_log_notify* default_instance_;
};
// -------------------------------------------------------------------

class go_role_logout_log_notify : public ::google::protobuf::Message {
 public:
  go_role_logout_log_notify();
  virtual ~go_role_logout_log_notify();

  go_role_logout_log_notify(const go_role_logout_log_notify& from);

  inline go_role_logout_log_notify& operator=(const go_role_logout_log_notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const go_role_logout_log_notify& default_instance();

  void Swap(go_role_logout_log_notify* other);

  // implements Message ----------------------------------------------

  go_role_logout_log_notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const go_role_logout_log_notify& from);
  void MergeFrom(const go_role_logout_log_notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 role_uid = 1;
  inline bool has_role_uid() const;
  inline void clear_role_uid();
  static const int kRoleUidFieldNumber = 1;
  inline ::google::protobuf::uint64 role_uid() const;
  inline void set_role_uid(::google::protobuf::uint64 value);

  // required uint32 online_time = 2;
  inline bool has_online_time() const;
  inline void clear_online_time();
  static const int kOnlineTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 online_time() const;
  inline void set_online_time(::google::protobuf::uint32 value);

  // required uint32 gate_id = 3;
  inline bool has_gate_id() const;
  inline void clear_gate_id();
  static const int kGateIdFieldNumber = 3;
  inline ::google::protobuf::uint32 gate_id() const;
  inline void set_gate_id(::google::protobuf::uint32 value);

  // required uint32 game_id = 4;
  inline bool has_game_id() const;
  inline void clear_game_id();
  static const int kGameIdFieldNumber = 4;
  inline ::google::protobuf::uint32 game_id() const;
  inline void set_game_id(::google::protobuf::uint32 value);

  // required uint32 kick_reason = 5;
  inline bool has_kick_reason() const;
  inline void clear_kick_reason();
  static const int kKickReasonFieldNumber = 5;
  inline ::google::protobuf::uint32 kick_reason() const;
  inline void set_kick_reason(::google::protobuf::uint32 value);

  // optional .proto.common.mobile_info mobile = 6;
  inline bool has_mobile() const;
  inline void clear_mobile();
  static const int kMobileFieldNumber = 6;
  inline const ::proto::common::mobile_info& mobile() const;
  inline ::proto::common::mobile_info* mutable_mobile();
  inline ::proto::common::mobile_info* release_mobile();
  inline void set_allocated_mobile(::proto::common::mobile_info* mobile);

  // required uint32 log_time = 7;
  inline bool has_log_time() const;
  inline void clear_log_time();
  static const int kLogTimeFieldNumber = 7;
  inline ::google::protobuf::uint32 log_time() const;
  inline void set_log_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.log.go_role_logout_log_notify)
 private:
  inline void set_has_role_uid();
  inline void clear_has_role_uid();
  inline void set_has_online_time();
  inline void clear_has_online_time();
  inline void set_has_gate_id();
  inline void clear_has_gate_id();
  inline void set_has_game_id();
  inline void clear_has_game_id();
  inline void set_has_kick_reason();
  inline void clear_has_kick_reason();
  inline void set_has_mobile();
  inline void clear_has_mobile();
  inline void set_has_log_time();
  inline void clear_has_log_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 role_uid_;
  ::google::protobuf::uint32 online_time_;
  ::google::protobuf::uint32 gate_id_;
  ::google::protobuf::uint32 game_id_;
  ::google::protobuf::uint32 kick_reason_;
  ::proto::common::mobile_info* mobile_;
  ::google::protobuf::uint32 log_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();

  void InitAsDefaultInstance();
  static go_role_logout_log_notify* default_instance_;
};
// -------------------------------------------------------------------

class go_item_log_notify : public ::google::protobuf::Message {
 public:
  go_item_log_notify();
  virtual ~go_item_log_notify();

  go_item_log_notify(const go_item_log_notify& from);

  inline go_item_log_notify& operator=(const go_item_log_notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const go_item_log_notify& default_instance();

  void Swap(go_item_log_notify* other);

  // implements Message ----------------------------------------------

  go_item_log_notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const go_item_log_notify& from);
  void MergeFrom(const go_item_log_notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 role_uid = 1;
  inline bool has_role_uid() const;
  inline void clear_role_uid();
  static const int kRoleUidFieldNumber = 1;
  inline ::google::protobuf::uint64 role_uid() const;
  inline void set_role_uid(::google::protobuf::uint64 value);

  // required uint32 role_level = 2;
  inline bool has_role_level() const;
  inline void clear_role_level();
  static const int kRoleLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 role_level() const;
  inline void set_role_level(::google::protobuf::uint32 value);

  // required uint64 item_uid = 3;
  inline bool has_item_uid() const;
  inline void clear_item_uid();
  static const int kItemUidFieldNumber = 3;
  inline ::google::protobuf::uint64 item_uid() const;
  inline void set_item_uid(::google::protobuf::uint64 value);

  // required uint32 item_tid = 4;
  inline bool has_item_tid() const;
  inline void clear_item_tid();
  static const int kItemTidFieldNumber = 4;
  inline ::google::protobuf::uint32 item_tid() const;
  inline void set_item_tid(::google::protobuf::uint32 value);

  // optional uint32 old_num = 5;
  inline bool has_old_num() const;
  inline void clear_old_num();
  static const int kOldNumFieldNumber = 5;
  inline ::google::protobuf::uint32 old_num() const;
  inline void set_old_num(::google::protobuf::uint32 value);

  // optional uint32 up_num = 6;
  inline bool has_up_num() const;
  inline void clear_up_num();
  static const int kUpNumFieldNumber = 6;
  inline ::google::protobuf::uint32 up_num() const;
  inline void set_up_num(::google::protobuf::uint32 value);

  // optional uint32 new_num = 7;
  inline bool has_new_num() const;
  inline void clear_new_num();
  static const int kNewNumFieldNumber = 7;
  inline ::google::protobuf::uint32 new_num() const;
  inline void set_new_num(::google::protobuf::uint32 value);

  // required uint32 op_type = 8;
  inline bool has_op_type() const;
  inline void clear_op_type();
  static const int kOpTypeFieldNumber = 8;
  inline ::google::protobuf::uint32 op_type() const;
  inline void set_op_type(::google::protobuf::uint32 value);

  // required uint32 source_type = 9;
  inline bool has_source_type() const;
  inline void clear_source_type();
  static const int kSourceTypeFieldNumber = 9;
  inline ::google::protobuf::uint32 source_type() const;
  inline void set_source_type(::google::protobuf::uint32 value);

  // optional uint32 source_param = 10;
  inline bool has_source_param() const;
  inline void clear_source_param();
  static const int kSourceParamFieldNumber = 10;
  inline ::google::protobuf::uint32 source_param() const;
  inline void set_source_param(::google::protobuf::uint32 value);

  // required uint32 log_time = 11;
  inline bool has_log_time() const;
  inline void clear_log_time();
  static const int kLogTimeFieldNumber = 11;
  inline ::google::protobuf::uint32 log_time() const;
  inline void set_log_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.log.go_item_log_notify)
 private:
  inline void set_has_role_uid();
  inline void clear_has_role_uid();
  inline void set_has_role_level();
  inline void clear_has_role_level();
  inline void set_has_item_uid();
  inline void clear_has_item_uid();
  inline void set_has_item_tid();
  inline void clear_has_item_tid();
  inline void set_has_old_num();
  inline void clear_has_old_num();
  inline void set_has_up_num();
  inline void clear_has_up_num();
  inline void set_has_new_num();
  inline void clear_has_new_num();
  inline void set_has_op_type();
  inline void clear_has_op_type();
  inline void set_has_source_type();
  inline void clear_has_source_type();
  inline void set_has_source_param();
  inline void clear_has_source_param();
  inline void set_has_log_time();
  inline void clear_has_log_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 role_uid_;
  ::google::protobuf::uint64 item_uid_;
  ::google::protobuf::uint32 role_level_;
  ::google::protobuf::uint32 item_tid_;
  ::google::protobuf::uint32 old_num_;
  ::google::protobuf::uint32 up_num_;
  ::google::protobuf::uint32 new_num_;
  ::google::protobuf::uint32 op_type_;
  ::google::protobuf::uint32 source_type_;
  ::google::protobuf::uint32 source_param_;
  ::google::protobuf::uint32 log_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();

  void InitAsDefaultInstance();
  static go_item_log_notify* default_instance_;
};
// -------------------------------------------------------------------

class go_money_log_notify : public ::google::protobuf::Message {
 public:
  go_money_log_notify();
  virtual ~go_money_log_notify();

  go_money_log_notify(const go_money_log_notify& from);

  inline go_money_log_notify& operator=(const go_money_log_notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const go_money_log_notify& default_instance();

  void Swap(go_money_log_notify* other);

  // implements Message ----------------------------------------------

  go_money_log_notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const go_money_log_notify& from);
  void MergeFrom(const go_money_log_notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 role_uid = 1;
  inline bool has_role_uid() const;
  inline void clear_role_uid();
  static const int kRoleUidFieldNumber = 1;
  inline ::google::protobuf::uint64 role_uid() const;
  inline void set_role_uid(::google::protobuf::uint64 value);

  // required uint32 role_level = 2;
  inline bool has_role_level() const;
  inline void clear_role_level();
  static const int kRoleLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 role_level() const;
  inline void set_role_level(::google::protobuf::uint32 value);

  // optional uint32 old_num = 3;
  inline bool has_old_num() const;
  inline void clear_old_num();
  static const int kOldNumFieldNumber = 3;
  inline ::google::protobuf::uint32 old_num() const;
  inline void set_old_num(::google::protobuf::uint32 value);

  // optional uint32 up_num = 4;
  inline bool has_up_num() const;
  inline void clear_up_num();
  static const int kUpNumFieldNumber = 4;
  inline ::google::protobuf::uint32 up_num() const;
  inline void set_up_num(::google::protobuf::uint32 value);

  // optional uint32 new_num = 5;
  inline bool has_new_num() const;
  inline void clear_new_num();
  static const int kNewNumFieldNumber = 5;
  inline ::google::protobuf::uint32 new_num() const;
  inline void set_new_num(::google::protobuf::uint32 value);

  // required uint32 money_type = 6;
  inline bool has_money_type() const;
  inline void clear_money_type();
  static const int kMoneyTypeFieldNumber = 6;
  inline ::google::protobuf::uint32 money_type() const;
  inline void set_money_type(::google::protobuf::uint32 value);

  // optional uint32 op_type = 7;
  inline bool has_op_type() const;
  inline void clear_op_type();
  static const int kOpTypeFieldNumber = 7;
  inline ::google::protobuf::uint32 op_type() const;
  inline void set_op_type(::google::protobuf::uint32 value);

  // required uint32 source_type = 8;
  inline bool has_source_type() const;
  inline void clear_source_type();
  static const int kSourceTypeFieldNumber = 8;
  inline ::google::protobuf::uint32 source_type() const;
  inline void set_source_type(::google::protobuf::uint32 value);

  // optional uint32 source_param = 9;
  inline bool has_source_param() const;
  inline void clear_source_param();
  static const int kSourceParamFieldNumber = 9;
  inline ::google::protobuf::uint32 source_param() const;
  inline void set_source_param(::google::protobuf::uint32 value);

  // required uint32 log_time = 10;
  inline bool has_log_time() const;
  inline void clear_log_time();
  static const int kLogTimeFieldNumber = 10;
  inline ::google::protobuf::uint32 log_time() const;
  inline void set_log_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.log.go_money_log_notify)
 private:
  inline void set_has_role_uid();
  inline void clear_has_role_uid();
  inline void set_has_role_level();
  inline void clear_has_role_level();
  inline void set_has_old_num();
  inline void clear_has_old_num();
  inline void set_has_up_num();
  inline void clear_has_up_num();
  inline void set_has_new_num();
  inline void clear_has_new_num();
  inline void set_has_money_type();
  inline void clear_has_money_type();
  inline void set_has_op_type();
  inline void clear_has_op_type();
  inline void set_has_source_type();
  inline void clear_has_source_type();
  inline void set_has_source_param();
  inline void clear_has_source_param();
  inline void set_has_log_time();
  inline void clear_has_log_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 role_uid_;
  ::google::protobuf::uint32 role_level_;
  ::google::protobuf::uint32 old_num_;
  ::google::protobuf::uint32 up_num_;
  ::google::protobuf::uint32 new_num_;
  ::google::protobuf::uint32 money_type_;
  ::google::protobuf::uint32 op_type_;
  ::google::protobuf::uint32 source_type_;
  ::google::protobuf::uint32 source_param_;
  ::google::protobuf::uint32 log_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();

  void InitAsDefaultInstance();
  static go_money_log_notify* default_instance_;
};
// -------------------------------------------------------------------

class go_luck_gift_log_notify : public ::google::protobuf::Message {
 public:
  go_luck_gift_log_notify();
  virtual ~go_luck_gift_log_notify();

  go_luck_gift_log_notify(const go_luck_gift_log_notify& from);

  inline go_luck_gift_log_notify& operator=(const go_luck_gift_log_notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const go_luck_gift_log_notify& default_instance();

  void Swap(go_luck_gift_log_notify* other);

  // implements Message ----------------------------------------------

  go_luck_gift_log_notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const go_luck_gift_log_notify& from);
  void MergeFrom(const go_luck_gift_log_notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 src_role_uid = 1;
  inline bool has_src_role_uid() const;
  inline void clear_src_role_uid();
  static const int kSrcRoleUidFieldNumber = 1;
  inline ::google::protobuf::uint64 src_role_uid() const;
  inline void set_src_role_uid(::google::protobuf::uint64 value);

  // optional uint64 grab_role_uid = 2;
  inline bool has_grab_role_uid() const;
  inline void clear_grab_role_uid();
  static const int kGrabRoleUidFieldNumber = 2;
  inline ::google::protobuf::uint64 grab_role_uid() const;
  inline void set_grab_role_uid(::google::protobuf::uint64 value);

  // required uint64 luck_gift_uid = 3;
  inline bool has_luck_gift_uid() const;
  inline void clear_luck_gift_uid();
  static const int kLuckGiftUidFieldNumber = 3;
  inline ::google::protobuf::uint64 luck_gift_uid() const;
  inline void set_luck_gift_uid(::google::protobuf::uint64 value);

  // optional uint32 old_num = 4;
  inline bool has_old_num() const;
  inline void clear_old_num();
  static const int kOldNumFieldNumber = 4;
  inline ::google::protobuf::uint32 old_num() const;
  inline void set_old_num(::google::protobuf::uint32 value);

  // optional uint32 up_num = 5;
  inline bool has_up_num() const;
  inline void clear_up_num();
  static const int kUpNumFieldNumber = 5;
  inline ::google::protobuf::uint32 up_num() const;
  inline void set_up_num(::google::protobuf::uint32 value);

  // optional uint32 new_num = 6;
  inline bool has_new_num() const;
  inline void clear_new_num();
  static const int kNewNumFieldNumber = 6;
  inline ::google::protobuf::uint32 new_num() const;
  inline void set_new_num(::google::protobuf::uint32 value);

  // required uint32 log_time = 7;
  inline bool has_log_time() const;
  inline void clear_log_time();
  static const int kLogTimeFieldNumber = 7;
  inline ::google::protobuf::uint32 log_time() const;
  inline void set_log_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.log.go_luck_gift_log_notify)
 private:
  inline void set_has_src_role_uid();
  inline void clear_has_src_role_uid();
  inline void set_has_grab_role_uid();
  inline void clear_has_grab_role_uid();
  inline void set_has_luck_gift_uid();
  inline void clear_has_luck_gift_uid();
  inline void set_has_old_num();
  inline void clear_has_old_num();
  inline void set_has_up_num();
  inline void clear_has_up_num();
  inline void set_has_new_num();
  inline void clear_has_new_num();
  inline void set_has_log_time();
  inline void clear_has_log_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 src_role_uid_;
  ::google::protobuf::uint64 grab_role_uid_;
  ::google::protobuf::uint64 luck_gift_uid_;
  ::google::protobuf::uint32 old_num_;
  ::google::protobuf::uint32 up_num_;
  ::google::protobuf::uint32 new_num_;
  ::google::protobuf::uint32 log_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();

  void InitAsDefaultInstance();
  static go_luck_gift_log_notify* default_instance_;
};
// -------------------------------------------------------------------

class go_hero_log_notify : public ::google::protobuf::Message {
 public:
  go_hero_log_notify();
  virtual ~go_hero_log_notify();

  go_hero_log_notify(const go_hero_log_notify& from);

  inline go_hero_log_notify& operator=(const go_hero_log_notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const go_hero_log_notify& default_instance();

  void Swap(go_hero_log_notify* other);

  // implements Message ----------------------------------------------

  go_hero_log_notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const go_hero_log_notify& from);
  void MergeFrom(const go_hero_log_notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 role_uid = 1;
  inline bool has_role_uid() const;
  inline void clear_role_uid();
  static const int kRoleUidFieldNumber = 1;
  inline ::google::protobuf::uint64 role_uid() const;
  inline void set_role_uid(::google::protobuf::uint64 value);

  // required uint32 role_level = 2;
  inline bool has_role_level() const;
  inline void clear_role_level();
  static const int kRoleLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 role_level() const;
  inline void set_role_level(::google::protobuf::uint32 value);

  // required uint64 hero_uid = 3;
  inline bool has_hero_uid() const;
  inline void clear_hero_uid();
  static const int kHeroUidFieldNumber = 3;
  inline ::google::protobuf::uint64 hero_uid() const;
  inline void set_hero_uid(::google::protobuf::uint64 value);

  // required uint32 hero_tid = 4;
  inline bool has_hero_tid() const;
  inline void clear_hero_tid();
  static const int kHeroTidFieldNumber = 4;
  inline ::google::protobuf::uint32 hero_tid() const;
  inline void set_hero_tid(::google::protobuf::uint32 value);

  // required uint32 op_type = 5;
  inline bool has_op_type() const;
  inline void clear_op_type();
  static const int kOpTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 op_type() const;
  inline void set_op_type(::google::protobuf::uint32 value);

  // required uint32 source_type = 6;
  inline bool has_source_type() const;
  inline void clear_source_type();
  static const int kSourceTypeFieldNumber = 6;
  inline ::google::protobuf::uint32 source_type() const;
  inline void set_source_type(::google::protobuf::uint32 value);

  // required uint32 log_time = 7;
  inline bool has_log_time() const;
  inline void clear_log_time();
  static const int kLogTimeFieldNumber = 7;
  inline ::google::protobuf::uint32 log_time() const;
  inline void set_log_time(::google::protobuf::uint32 value);

  // optional uint32 old_num = 8;
  inline bool has_old_num() const;
  inline void clear_old_num();
  static const int kOldNumFieldNumber = 8;
  inline ::google::protobuf::uint32 old_num() const;
  inline void set_old_num(::google::protobuf::uint32 value);

  // optional uint32 up_num = 9;
  inline bool has_up_num() const;
  inline void clear_up_num();
  static const int kUpNumFieldNumber = 9;
  inline ::google::protobuf::uint32 up_num() const;
  inline void set_up_num(::google::protobuf::uint32 value);

  // optional uint32 new_num = 10;
  inline bool has_new_num() const;
  inline void clear_new_num();
  static const int kNewNumFieldNumber = 10;
  inline ::google::protobuf::uint32 new_num() const;
  inline void set_new_num(::google::protobuf::uint32 value);

  // optional uint32 source_param = 11;
  inline bool has_source_param() const;
  inline void clear_source_param();
  static const int kSourceParamFieldNumber = 11;
  inline ::google::protobuf::uint32 source_param() const;
  inline void set_source_param(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.log.go_hero_log_notify)
 private:
  inline void set_has_role_uid();
  inline void clear_has_role_uid();
  inline void set_has_role_level();
  inline void clear_has_role_level();
  inline void set_has_hero_uid();
  inline void clear_has_hero_uid();
  inline void set_has_hero_tid();
  inline void clear_has_hero_tid();
  inline void set_has_op_type();
  inline void clear_has_op_type();
  inline void set_has_source_type();
  inline void clear_has_source_type();
  inline void set_has_log_time();
  inline void clear_has_log_time();
  inline void set_has_old_num();
  inline void clear_has_old_num();
  inline void set_has_up_num();
  inline void clear_has_up_num();
  inline void set_has_new_num();
  inline void clear_has_new_num();
  inline void set_has_source_param();
  inline void clear_has_source_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 role_uid_;
  ::google::protobuf::uint64 hero_uid_;
  ::google::protobuf::uint32 role_level_;
  ::google::protobuf::uint32 hero_tid_;
  ::google::protobuf::uint32 op_type_;
  ::google::protobuf::uint32 source_type_;
  ::google::protobuf::uint32 log_time_;
  ::google::protobuf::uint32 old_num_;
  ::google::protobuf::uint32 up_num_;
  ::google::protobuf::uint32 new_num_;
  ::google::protobuf::uint32 source_param_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();

  void InitAsDefaultInstance();
  static go_hero_log_notify* default_instance_;
};
// -------------------------------------------------------------------

class go_task_log_notify : public ::google::protobuf::Message {
 public:
  go_task_log_notify();
  virtual ~go_task_log_notify();

  go_task_log_notify(const go_task_log_notify& from);

  inline go_task_log_notify& operator=(const go_task_log_notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const go_task_log_notify& default_instance();

  void Swap(go_task_log_notify* other);

  // implements Message ----------------------------------------------

  go_task_log_notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const go_task_log_notify& from);
  void MergeFrom(const go_task_log_notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 role_uid = 1;
  inline bool has_role_uid() const;
  inline void clear_role_uid();
  static const int kRoleUidFieldNumber = 1;
  inline ::google::protobuf::uint64 role_uid() const;
  inline void set_role_uid(::google::protobuf::uint64 value);

  // required uint32 task_id = 2;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 2;
  inline ::google::protobuf::uint32 task_id() const;
  inline void set_task_id(::google::protobuf::uint32 value);

  // required uint32 task_state = 3;
  inline bool has_task_state() const;
  inline void clear_task_state();
  static const int kTaskStateFieldNumber = 3;
  inline ::google::protobuf::uint32 task_state() const;
  inline void set_task_state(::google::protobuf::uint32 value);

  // required string task_progress = 4;
  inline bool has_task_progress() const;
  inline void clear_task_progress();
  static const int kTaskProgressFieldNumber = 4;
  inline const ::std::string& task_progress() const;
  inline void set_task_progress(const ::std::string& value);
  inline void set_task_progress(const char* value);
  inline void set_task_progress(const char* value, size_t size);
  inline ::std::string* mutable_task_progress();
  inline ::std::string* release_task_progress();
  inline void set_allocated_task_progress(::std::string* task_progress);

  // required uint32 accept_time = 5;
  inline bool has_accept_time() const;
  inline void clear_accept_time();
  static const int kAcceptTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 accept_time() const;
  inline void set_accept_time(::google::protobuf::uint32 value);

  // required uint32 op_type = 6;
  inline bool has_op_type() const;
  inline void clear_op_type();
  static const int kOpTypeFieldNumber = 6;
  inline ::google::protobuf::uint32 op_type() const;
  inline void set_op_type(::google::protobuf::uint32 value);

  // required uint32 log_time = 7;
  inline bool has_log_time() const;
  inline void clear_log_time();
  static const int kLogTimeFieldNumber = 7;
  inline ::google::protobuf::uint32 log_time() const;
  inline void set_log_time(::google::protobuf::uint32 value);

  // required uint32 task_type = 8;
  inline bool has_task_type() const;
  inline void clear_task_type();
  static const int kTaskTypeFieldNumber = 8;
  inline ::google::protobuf::uint32 task_type() const;
  inline void set_task_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.log.go_task_log_notify)
 private:
  inline void set_has_role_uid();
  inline void clear_has_role_uid();
  inline void set_has_task_id();
  inline void clear_has_task_id();
  inline void set_has_task_state();
  inline void clear_has_task_state();
  inline void set_has_task_progress();
  inline void clear_has_task_progress();
  inline void set_has_accept_time();
  inline void clear_has_accept_time();
  inline void set_has_op_type();
  inline void clear_has_op_type();
  inline void set_has_log_time();
  inline void clear_has_log_time();
  inline void set_has_task_type();
  inline void clear_has_task_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 role_uid_;
  ::google::protobuf::uint32 task_id_;
  ::google::protobuf::uint32 task_state_;
  ::std::string* task_progress_;
  ::google::protobuf::uint32 accept_time_;
  ::google::protobuf::uint32 op_type_;
  ::google::protobuf::uint32 log_time_;
  ::google::protobuf::uint32 task_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();

  void InitAsDefaultInstance();
  static go_task_log_notify* default_instance_;
};
// -------------------------------------------------------------------

class go_exp_log_notify : public ::google::protobuf::Message {
 public:
  go_exp_log_notify();
  virtual ~go_exp_log_notify();

  go_exp_log_notify(const go_exp_log_notify& from);

  inline go_exp_log_notify& operator=(const go_exp_log_notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const go_exp_log_notify& default_instance();

  void Swap(go_exp_log_notify* other);

  // implements Message ----------------------------------------------

  go_exp_log_notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const go_exp_log_notify& from);
  void MergeFrom(const go_exp_log_notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 role_uid = 1;
  inline bool has_role_uid() const;
  inline void clear_role_uid();
  static const int kRoleUidFieldNumber = 1;
  inline ::google::protobuf::uint64 role_uid() const;
  inline void set_role_uid(::google::protobuf::uint64 value);

  // required uint32 old_level = 2;
  inline bool has_old_level() const;
  inline void clear_old_level();
  static const int kOldLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 old_level() const;
  inline void set_old_level(::google::protobuf::uint32 value);

  // required uint32 old_exp = 3;
  inline bool has_old_exp() const;
  inline void clear_old_exp();
  static const int kOldExpFieldNumber = 3;
  inline ::google::protobuf::uint32 old_exp() const;
  inline void set_old_exp(::google::protobuf::uint32 value);

  // required uint32 up_exp = 4;
  inline bool has_up_exp() const;
  inline void clear_up_exp();
  static const int kUpExpFieldNumber = 4;
  inline ::google::protobuf::uint32 up_exp() const;
  inline void set_up_exp(::google::protobuf::uint32 value);

  // required uint32 new_level = 5;
  inline bool has_new_level() const;
  inline void clear_new_level();
  static const int kNewLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 new_level() const;
  inline void set_new_level(::google::protobuf::uint32 value);

  // required uint32 new_exp = 6;
  inline bool has_new_exp() const;
  inline void clear_new_exp();
  static const int kNewExpFieldNumber = 6;
  inline ::google::protobuf::uint32 new_exp() const;
  inline void set_new_exp(::google::protobuf::uint32 value);

  // required uint32 source_type = 7;
  inline bool has_source_type() const;
  inline void clear_source_type();
  static const int kSourceTypeFieldNumber = 7;
  inline ::google::protobuf::uint32 source_type() const;
  inline void set_source_type(::google::protobuf::uint32 value);

  // optional uint32 source_param = 8;
  inline bool has_source_param() const;
  inline void clear_source_param();
  static const int kSourceParamFieldNumber = 8;
  inline ::google::protobuf::uint32 source_param() const;
  inline void set_source_param(::google::protobuf::uint32 value);

  // required uint32 log_time = 9;
  inline bool has_log_time() const;
  inline void clear_log_time();
  static const int kLogTimeFieldNumber = 9;
  inline ::google::protobuf::uint32 log_time() const;
  inline void set_log_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.log.go_exp_log_notify)
 private:
  inline void set_has_role_uid();
  inline void clear_has_role_uid();
  inline void set_has_old_level();
  inline void clear_has_old_level();
  inline void set_has_old_exp();
  inline void clear_has_old_exp();
  inline void set_has_up_exp();
  inline void clear_has_up_exp();
  inline void set_has_new_level();
  inline void clear_has_new_level();
  inline void set_has_new_exp();
  inline void clear_has_new_exp();
  inline void set_has_source_type();
  inline void clear_has_source_type();
  inline void set_has_source_param();
  inline void clear_has_source_param();
  inline void set_has_log_time();
  inline void clear_has_log_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 role_uid_;
  ::google::protobuf::uint32 old_level_;
  ::google::protobuf::uint32 old_exp_;
  ::google::protobuf::uint32 up_exp_;
  ::google::protobuf::uint32 new_level_;
  ::google::protobuf::uint32 new_exp_;
  ::google::protobuf::uint32 source_type_;
  ::google::protobuf::uint32 source_param_;
  ::google::protobuf::uint32 log_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();

  void InitAsDefaultInstance();
  static go_exp_log_notify* default_instance_;
};
// -------------------------------------------------------------------

class go_prestige_log_notify : public ::google::protobuf::Message {
 public:
  go_prestige_log_notify();
  virtual ~go_prestige_log_notify();

  go_prestige_log_notify(const go_prestige_log_notify& from);

  inline go_prestige_log_notify& operator=(const go_prestige_log_notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const go_prestige_log_notify& default_instance();

  void Swap(go_prestige_log_notify* other);

  // implements Message ----------------------------------------------

  go_prestige_log_notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const go_prestige_log_notify& from);
  void MergeFrom(const go_prestige_log_notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 role_uid = 1;
  inline bool has_role_uid() const;
  inline void clear_role_uid();
  static const int kRoleUidFieldNumber = 1;
  inline ::google::protobuf::uint64 role_uid() const;
  inline void set_role_uid(::google::protobuf::uint64 value);

  // required uint32 role_level = 2;
  inline bool has_role_level() const;
  inline void clear_role_level();
  static const int kRoleLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 role_level() const;
  inline void set_role_level(::google::protobuf::uint32 value);

  // required uint32 old_prestige = 3;
  inline bool has_old_prestige() const;
  inline void clear_old_prestige();
  static const int kOldPrestigeFieldNumber = 3;
  inline ::google::protobuf::uint32 old_prestige() const;
  inline void set_old_prestige(::google::protobuf::uint32 value);

  // required uint32 old_prestige_total = 4;
  inline bool has_old_prestige_total() const;
  inline void clear_old_prestige_total();
  static const int kOldPrestigeTotalFieldNumber = 4;
  inline ::google::protobuf::uint32 old_prestige_total() const;
  inline void set_old_prestige_total(::google::protobuf::uint32 value);

  // required uint32 old_prestige_level = 5;
  inline bool has_old_prestige_level() const;
  inline void clear_old_prestige_level();
  static const int kOldPrestigeLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 old_prestige_level() const;
  inline void set_old_prestige_level(::google::protobuf::uint32 value);

  // required uint32 up_prestige = 6;
  inline bool has_up_prestige() const;
  inline void clear_up_prestige();
  static const int kUpPrestigeFieldNumber = 6;
  inline ::google::protobuf::uint32 up_prestige() const;
  inline void set_up_prestige(::google::protobuf::uint32 value);

  // required uint32 new_prestige = 7;
  inline bool has_new_prestige() const;
  inline void clear_new_prestige();
  static const int kNewPrestigeFieldNumber = 7;
  inline ::google::protobuf::uint32 new_prestige() const;
  inline void set_new_prestige(::google::protobuf::uint32 value);

  // required uint32 new_prestige_total = 8;
  inline bool has_new_prestige_total() const;
  inline void clear_new_prestige_total();
  static const int kNewPrestigeTotalFieldNumber = 8;
  inline ::google::protobuf::uint32 new_prestige_total() const;
  inline void set_new_prestige_total(::google::protobuf::uint32 value);

  // required uint32 new_prestige_level = 9;
  inline bool has_new_prestige_level() const;
  inline void clear_new_prestige_level();
  static const int kNewPrestigeLevelFieldNumber = 9;
  inline ::google::protobuf::uint32 new_prestige_level() const;
  inline void set_new_prestige_level(::google::protobuf::uint32 value);

  // required uint32 op_type = 10;
  inline bool has_op_type() const;
  inline void clear_op_type();
  static const int kOpTypeFieldNumber = 10;
  inline ::google::protobuf::uint32 op_type() const;
  inline void set_op_type(::google::protobuf::uint32 value);

  // required uint32 source_type = 11;
  inline bool has_source_type() const;
  inline void clear_source_type();
  static const int kSourceTypeFieldNumber = 11;
  inline ::google::protobuf::uint32 source_type() const;
  inline void set_source_type(::google::protobuf::uint32 value);

  // optional uint32 source_param = 12;
  inline bool has_source_param() const;
  inline void clear_source_param();
  static const int kSourceParamFieldNumber = 12;
  inline ::google::protobuf::uint32 source_param() const;
  inline void set_source_param(::google::protobuf::uint32 value);

  // required uint32 log_time = 13;
  inline bool has_log_time() const;
  inline void clear_log_time();
  static const int kLogTimeFieldNumber = 13;
  inline ::google::protobuf::uint32 log_time() const;
  inline void set_log_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.log.go_prestige_log_notify)
 private:
  inline void set_has_role_uid();
  inline void clear_has_role_uid();
  inline void set_has_role_level();
  inline void clear_has_role_level();
  inline void set_has_old_prestige();
  inline void clear_has_old_prestige();
  inline void set_has_old_prestige_total();
  inline void clear_has_old_prestige_total();
  inline void set_has_old_prestige_level();
  inline void clear_has_old_prestige_level();
  inline void set_has_up_prestige();
  inline void clear_has_up_prestige();
  inline void set_has_new_prestige();
  inline void clear_has_new_prestige();
  inline void set_has_new_prestige_total();
  inline void clear_has_new_prestige_total();
  inline void set_has_new_prestige_level();
  inline void clear_has_new_prestige_level();
  inline void set_has_op_type();
  inline void clear_has_op_type();
  inline void set_has_source_type();
  inline void clear_has_source_type();
  inline void set_has_source_param();
  inline void clear_has_source_param();
  inline void set_has_log_time();
  inline void clear_has_log_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 role_uid_;
  ::google::protobuf::uint32 role_level_;
  ::google::protobuf::uint32 old_prestige_;
  ::google::protobuf::uint32 old_prestige_total_;
  ::google::protobuf::uint32 old_prestige_level_;
  ::google::protobuf::uint32 up_prestige_;
  ::google::protobuf::uint32 new_prestige_;
  ::google::protobuf::uint32 new_prestige_total_;
  ::google::protobuf::uint32 new_prestige_level_;
  ::google::protobuf::uint32 op_type_;
  ::google::protobuf::uint32 source_type_;
  ::google::protobuf::uint32 source_param_;
  ::google::protobuf::uint32 log_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];

  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();

  void InitAsDefaultInstance();
  static go_prestige_log_notify* default_instance_;
};
// -------------------------------------------------------------------

class go_user_times_log_notify : public ::google::protobuf::Message {
 public:
  go_user_times_log_notify();
  virtual ~go_user_times_log_notify();

  go_user_times_log_notify(const go_user_times_log_notify& from);

  inline go_user_times_log_notify& operator=(const go_user_times_log_notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const go_user_times_log_notify& default_instance();

  void Swap(go_user_times_log_notify* other);

  // implements Message ----------------------------------------------

  go_user_times_log_notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const go_user_times_log_notify& from);
  void MergeFrom(const go_user_times_log_notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 role_uid = 1;
  inline bool has_role_uid() const;
  inline void clear_role_uid();
  static const int kRoleUidFieldNumber = 1;
  inline ::google::protobuf::uint64 role_uid() const;
  inline void set_role_uid(::google::protobuf::uint64 value);

  // required uint32 role_level = 2;
  inline bool has_role_level() const;
  inline void clear_role_level();
  static const int kRoleLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 role_level() const;
  inline void set_role_level(::google::protobuf::uint32 value);

  // optional uint32 old_num = 3;
  inline bool has_old_num() const;
  inline void clear_old_num();
  static const int kOldNumFieldNumber = 3;
  inline ::google::protobuf::uint32 old_num() const;
  inline void set_old_num(::google::protobuf::uint32 value);

  // optional uint32 up_num = 4;
  inline bool has_up_num() const;
  inline void clear_up_num();
  static const int kUpNumFieldNumber = 4;
  inline ::google::protobuf::uint32 up_num() const;
  inline void set_up_num(::google::protobuf::uint32 value);

  // optional uint32 new_num = 5;
  inline bool has_new_num() const;
  inline void clear_new_num();
  static const int kNewNumFieldNumber = 5;
  inline ::google::protobuf::uint32 new_num() const;
  inline void set_new_num(::google::protobuf::uint32 value);

  // required uint32 event_id = 6;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 6;
  inline ::google::protobuf::uint32 event_id() const;
  inline void set_event_id(::google::protobuf::uint32 value);

  // required uint32 sec_event_id = 7;
  inline bool has_sec_event_id() const;
  inline void clear_sec_event_id();
  static const int kSecEventIdFieldNumber = 7;
  inline ::google::protobuf::uint32 sec_event_id() const;
  inline void set_sec_event_id(::google::protobuf::uint32 value);

  // optional uint32 op_type = 8;
  inline bool has_op_type() const;
  inline void clear_op_type();
  static const int kOpTypeFieldNumber = 8;
  inline ::google::protobuf::uint32 op_type() const;
  inline void set_op_type(::google::protobuf::uint32 value);

  // required uint32 source_type = 9;
  inline bool has_source_type() const;
  inline void clear_source_type();
  static const int kSourceTypeFieldNumber = 9;
  inline ::google::protobuf::uint32 source_type() const;
  inline void set_source_type(::google::protobuf::uint32 value);

  // optional uint32 source_param = 10;
  inline bool has_source_param() const;
  inline void clear_source_param();
  static const int kSourceParamFieldNumber = 10;
  inline ::google::protobuf::uint32 source_param() const;
  inline void set_source_param(::google::protobuf::uint32 value);

  // required uint32 log_time = 11;
  inline bool has_log_time() const;
  inline void clear_log_time();
  static const int kLogTimeFieldNumber = 11;
  inline ::google::protobuf::uint32 log_time() const;
  inline void set_log_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.log.go_user_times_log_notify)
 private:
  inline void set_has_role_uid();
  inline void clear_has_role_uid();
  inline void set_has_role_level();
  inline void clear_has_role_level();
  inline void set_has_old_num();
  inline void clear_has_old_num();
  inline void set_has_up_num();
  inline void clear_has_up_num();
  inline void set_has_new_num();
  inline void clear_has_new_num();
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_sec_event_id();
  inline void clear_has_sec_event_id();
  inline void set_has_op_type();
  inline void clear_has_op_type();
  inline void set_has_source_type();
  inline void clear_has_source_type();
  inline void set_has_source_param();
  inline void clear_has_source_param();
  inline void set_has_log_time();
  inline void clear_has_log_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 role_uid_;
  ::google::protobuf::uint32 role_level_;
  ::google::protobuf::uint32 old_num_;
  ::google::protobuf::uint32 up_num_;
  ::google::protobuf::uint32 new_num_;
  ::google::protobuf::uint32 event_id_;
  ::google::protobuf::uint32 sec_event_id_;
  ::google::protobuf::uint32 op_type_;
  ::google::protobuf::uint32 source_type_;
  ::google::protobuf::uint32 source_param_;
  ::google::protobuf::uint32 log_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();

  void InitAsDefaultInstance();
  static go_user_times_log_notify* default_instance_;
};
// -------------------------------------------------------------------

class eo_country_log_notify : public ::google::protobuf::Message {
 public:
  eo_country_log_notify();
  virtual ~eo_country_log_notify();

  eo_country_log_notify(const eo_country_log_notify& from);

  inline eo_country_log_notify& operator=(const eo_country_log_notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const eo_country_log_notify& default_instance();

  void Swap(eo_country_log_notify* other);

  // implements Message ----------------------------------------------

  eo_country_log_notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const eo_country_log_notify& from);
  void MergeFrom(const eo_country_log_notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 country_id = 1;
  inline bool has_country_id() const;
  inline void clear_country_id();
  static const int kCountryIdFieldNumber = 1;
  inline ::google::protobuf::uint32 country_id() const;
  inline void set_country_id(::google::protobuf::uint32 value);

  // optional uint32 source_type = 2;
  inline bool has_source_type() const;
  inline void clear_source_type();
  static const int kSourceTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 source_type() const;
  inline void set_source_type(::google::protobuf::uint32 value);

  // optional uint64 source_param = 3;
  inline bool has_source_param() const;
  inline void clear_source_param();
  static const int kSourceParamFieldNumber = 3;
  inline ::google::protobuf::uint64 source_param() const;
  inline void set_source_param(::google::protobuf::uint64 value);

  // optional uint32 source_param2 = 4;
  inline bool has_source_param2() const;
  inline void clear_source_param2();
  static const int kSourceParam2FieldNumber = 4;
  inline ::google::protobuf::uint32 source_param2() const;
  inline void set_source_param2(::google::protobuf::uint32 value);

  // optional uint32 source_param3 = 5;
  inline bool has_source_param3() const;
  inline void clear_source_param3();
  static const int kSourceParam3FieldNumber = 5;
  inline ::google::protobuf::uint32 source_param3() const;
  inline void set_source_param3(::google::protobuf::uint32 value);

  // optional uint32 log_time = 6;
  inline bool has_log_time() const;
  inline void clear_log_time();
  static const int kLogTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 log_time() const;
  inline void set_log_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.log.eo_country_log_notify)
 private:
  inline void set_has_country_id();
  inline void clear_has_country_id();
  inline void set_has_source_type();
  inline void clear_has_source_type();
  inline void set_has_source_param();
  inline void clear_has_source_param();
  inline void set_has_source_param2();
  inline void clear_has_source_param2();
  inline void set_has_source_param3();
  inline void clear_has_source_param3();
  inline void set_has_log_time();
  inline void clear_has_log_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 country_id_;
  ::google::protobuf::uint32 source_type_;
  ::google::protobuf::uint64 source_param_;
  ::google::protobuf::uint32 source_param2_;
  ::google::protobuf::uint32 source_param3_;
  ::google::protobuf::uint32 log_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();

  void InitAsDefaultInstance();
  static eo_country_log_notify* default_instance_;
};
// -------------------------------------------------------------------

class eo_family_log_notify : public ::google::protobuf::Message {
 public:
  eo_family_log_notify();
  virtual ~eo_family_log_notify();

  eo_family_log_notify(const eo_family_log_notify& from);

  inline eo_family_log_notify& operator=(const eo_family_log_notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const eo_family_log_notify& default_instance();

  void Swap(eo_family_log_notify* other);

  // implements Message ----------------------------------------------

  eo_family_log_notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const eo_family_log_notify& from);
  void MergeFrom(const eo_family_log_notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 family_uid = 1;
  inline bool has_family_uid() const;
  inline void clear_family_uid();
  static const int kFamilyUidFieldNumber = 1;
  inline ::google::protobuf::uint64 family_uid() const;
  inline void set_family_uid(::google::protobuf::uint64 value);

  // optional uint64 role_uid = 2;
  inline bool has_role_uid() const;
  inline void clear_role_uid();
  static const int kRoleUidFieldNumber = 2;
  inline ::google::protobuf::uint64 role_uid() const;
  inline void set_role_uid(::google::protobuf::uint64 value);

  // optional uint64 target_uid = 3;
  inline bool has_target_uid() const;
  inline void clear_target_uid();
  static const int kTargetUidFieldNumber = 3;
  inline ::google::protobuf::uint64 target_uid() const;
  inline void set_target_uid(::google::protobuf::uint64 value);

  // optional uint32 source_type = 4;
  inline bool has_source_type() const;
  inline void clear_source_type();
  static const int kSourceTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 source_type() const;
  inline void set_source_type(::google::protobuf::uint32 value);

  // optional uint32 source_param = 5;
  inline bool has_source_param() const;
  inline void clear_source_param();
  static const int kSourceParamFieldNumber = 5;
  inline ::google::protobuf::uint32 source_param() const;
  inline void set_source_param(::google::protobuf::uint32 value);

  // optional uint32 source_param2 = 6;
  inline bool has_source_param2() const;
  inline void clear_source_param2();
  static const int kSourceParam2FieldNumber = 6;
  inline ::google::protobuf::uint32 source_param2() const;
  inline void set_source_param2(::google::protobuf::uint32 value);

  // optional uint32 log_time = 7;
  inline bool has_log_time() const;
  inline void clear_log_time();
  static const int kLogTimeFieldNumber = 7;
  inline ::google::protobuf::uint32 log_time() const;
  inline void set_log_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.log.eo_family_log_notify)
 private:
  inline void set_has_family_uid();
  inline void clear_has_family_uid();
  inline void set_has_role_uid();
  inline void clear_has_role_uid();
  inline void set_has_target_uid();
  inline void clear_has_target_uid();
  inline void set_has_source_type();
  inline void clear_has_source_type();
  inline void set_has_source_param();
  inline void clear_has_source_param();
  inline void set_has_source_param2();
  inline void clear_has_source_param2();
  inline void set_has_log_time();
  inline void clear_has_log_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 family_uid_;
  ::google::protobuf::uint64 role_uid_;
  ::google::protobuf::uint64 target_uid_;
  ::google::protobuf::uint32 source_type_;
  ::google::protobuf::uint32 source_param_;
  ::google::protobuf::uint32 source_param2_;
  ::google::protobuf::uint32 log_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();

  void InitAsDefaultInstance();
  static eo_family_log_notify* default_instance_;
};
// -------------------------------------------------------------------

class eo_friend_log_notify : public ::google::protobuf::Message {
 public:
  eo_friend_log_notify();
  virtual ~eo_friend_log_notify();

  eo_friend_log_notify(const eo_friend_log_notify& from);

  inline eo_friend_log_notify& operator=(const eo_friend_log_notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const eo_friend_log_notify& default_instance();

  void Swap(eo_friend_log_notify* other);

  // implements Message ----------------------------------------------

  eo_friend_log_notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const eo_friend_log_notify& from);
  void MergeFrom(const eo_friend_log_notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 role_uid = 1;
  inline bool has_role_uid() const;
  inline void clear_role_uid();
  static const int kRoleUidFieldNumber = 1;
  inline ::google::protobuf::uint64 role_uid() const;
  inline void set_role_uid(::google::protobuf::uint64 value);

  // optional uint64 friend_uid = 2;
  inline bool has_friend_uid() const;
  inline void clear_friend_uid();
  static const int kFriendUidFieldNumber = 2;
  inline ::google::protobuf::uint64 friend_uid() const;
  inline void set_friend_uid(::google::protobuf::uint64 value);

  // optional uint32 old_type = 3;
  inline bool has_old_type() const;
  inline void clear_old_type();
  static const int kOldTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 old_type() const;
  inline void set_old_type(::google::protobuf::uint32 value);

  // optional uint32 new_type = 4;
  inline bool has_new_type() const;
  inline void clear_new_type();
  static const int kNewTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 new_type() const;
  inline void set_new_type(::google::protobuf::uint32 value);

  // optional uint32 source_type = 5;
  inline bool has_source_type() const;
  inline void clear_source_type();
  static const int kSourceTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 source_type() const;
  inline void set_source_type(::google::protobuf::uint32 value);

  // optional uint32 source_param = 6;
  inline bool has_source_param() const;
  inline void clear_source_param();
  static const int kSourceParamFieldNumber = 6;
  inline ::google::protobuf::uint32 source_param() const;
  inline void set_source_param(::google::protobuf::uint32 value);

  // optional uint32 log_time = 7;
  inline bool has_log_time() const;
  inline void clear_log_time();
  static const int kLogTimeFieldNumber = 7;
  inline ::google::protobuf::uint32 log_time() const;
  inline void set_log_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.log.eo_friend_log_notify)
 private:
  inline void set_has_role_uid();
  inline void clear_has_role_uid();
  inline void set_has_friend_uid();
  inline void clear_has_friend_uid();
  inline void set_has_old_type();
  inline void clear_has_old_type();
  inline void set_has_new_type();
  inline void clear_has_new_type();
  inline void set_has_source_type();
  inline void clear_has_source_type();
  inline void set_has_source_param();
  inline void clear_has_source_param();
  inline void set_has_log_time();
  inline void clear_has_log_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 role_uid_;
  ::google::protobuf::uint64 friend_uid_;
  ::google::protobuf::uint32 old_type_;
  ::google::protobuf::uint32 new_type_;
  ::google::protobuf::uint32 source_type_;
  ::google::protobuf::uint32 source_param_;
  ::google::protobuf::uint32 log_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();

  void InitAsDefaultInstance();
  static eo_friend_log_notify* default_instance_;
};
// -------------------------------------------------------------------

class eo_mail_log_notify : public ::google::protobuf::Message {
 public:
  eo_mail_log_notify();
  virtual ~eo_mail_log_notify();

  eo_mail_log_notify(const eo_mail_log_notify& from);

  inline eo_mail_log_notify& operator=(const eo_mail_log_notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const eo_mail_log_notify& default_instance();

  void Swap(eo_mail_log_notify* other);

  // implements Message ----------------------------------------------

  eo_mail_log_notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const eo_mail_log_notify& from);
  void MergeFrom(const eo_mail_log_notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 role_uid = 1;
  inline bool has_role_uid() const;
  inline void clear_role_uid();
  static const int kRoleUidFieldNumber = 1;
  inline ::google::protobuf::uint64 role_uid() const;
  inline void set_role_uid(::google::protobuf::uint64 value);

  // optional uint64 mail_id = 2;
  inline bool has_mail_id() const;
  inline void clear_mail_id();
  static const int kMailIdFieldNumber = 2;
  inline ::google::protobuf::uint64 mail_id() const;
  inline void set_mail_id(::google::protobuf::uint64 value);

  // optional uint32 mail_type = 3;
  inline bool has_mail_type() const;
  inline void clear_mail_type();
  static const int kMailTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 mail_type() const;
  inline void set_mail_type(::google::protobuf::uint32 value);

  // optional uint32 item_type = 4;
  inline bool has_item_type() const;
  inline void clear_item_type();
  static const int kItemTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 item_type() const;
  inline void set_item_type(::google::protobuf::uint32 value);

  // optional string items = 5;
  inline bool has_items() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 5;
  inline const ::std::string& items() const;
  inline void set_items(const ::std::string& value);
  inline void set_items(const char* value);
  inline void set_items(const char* value, size_t size);
  inline ::std::string* mutable_items();
  inline ::std::string* release_items();
  inline void set_allocated_items(::std::string* items);

  // optional uint32 item_state = 6;
  inline bool has_item_state() const;
  inline void clear_item_state();
  static const int kItemStateFieldNumber = 6;
  inline ::google::protobuf::uint32 item_state() const;
  inline void set_item_state(::google::protobuf::uint32 value);

  // optional uint32 source_type = 7;
  inline bool has_source_type() const;
  inline void clear_source_type();
  static const int kSourceTypeFieldNumber = 7;
  inline ::google::protobuf::uint32 source_type() const;
  inline void set_source_type(::google::protobuf::uint32 value);

  // optional uint32 source_param = 8;
  inline bool has_source_param() const;
  inline void clear_source_param();
  static const int kSourceParamFieldNumber = 8;
  inline ::google::protobuf::uint32 source_param() const;
  inline void set_source_param(::google::protobuf::uint32 value);

  // optional uint32 log_time = 9;
  inline bool has_log_time() const;
  inline void clear_log_time();
  static const int kLogTimeFieldNumber = 9;
  inline ::google::protobuf::uint32 log_time() const;
  inline void set_log_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.log.eo_mail_log_notify)
 private:
  inline void set_has_role_uid();
  inline void clear_has_role_uid();
  inline void set_has_mail_id();
  inline void clear_has_mail_id();
  inline void set_has_mail_type();
  inline void clear_has_mail_type();
  inline void set_has_item_type();
  inline void clear_has_item_type();
  inline void set_has_items();
  inline void clear_has_items();
  inline void set_has_item_state();
  inline void clear_has_item_state();
  inline void set_has_source_type();
  inline void clear_has_source_type();
  inline void set_has_source_param();
  inline void clear_has_source_param();
  inline void set_has_log_time();
  inline void clear_has_log_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 role_uid_;
  ::google::protobuf::uint64 mail_id_;
  ::google::protobuf::uint32 mail_type_;
  ::google::protobuf::uint32 item_type_;
  ::std::string* items_;
  ::google::protobuf::uint32 item_state_;
  ::google::protobuf::uint32 source_type_;
  ::google::protobuf::uint32 source_param_;
  ::google::protobuf::uint32 log_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();

  void InitAsDefaultInstance();
  static eo_mail_log_notify* default_instance_;
};
// -------------------------------------------------------------------

class go_pk_log_notify : public ::google::protobuf::Message {
 public:
  go_pk_log_notify();
  virtual ~go_pk_log_notify();

  go_pk_log_notify(const go_pk_log_notify& from);

  inline go_pk_log_notify& operator=(const go_pk_log_notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const go_pk_log_notify& default_instance();

  void Swap(go_pk_log_notify* other);

  // implements Message ----------------------------------------------

  go_pk_log_notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const go_pk_log_notify& from);
  void MergeFrom(const go_pk_log_notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 role_uid = 1;
  inline bool has_role_uid() const;
  inline void clear_role_uid();
  static const int kRoleUidFieldNumber = 1;
  inline ::google::protobuf::uint64 role_uid() const;
  inline void set_role_uid(::google::protobuf::uint64 value);

  // required uint32 role_level = 2;
  inline bool has_role_level() const;
  inline void clear_role_level();
  static const int kRoleLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 role_level() const;
  inline void set_role_level(::google::protobuf::uint32 value);

  // optional uint32 old_num = 3;
  inline bool has_old_num() const;
  inline void clear_old_num();
  static const int kOldNumFieldNumber = 3;
  inline ::google::protobuf::uint32 old_num() const;
  inline void set_old_num(::google::protobuf::uint32 value);

  // optional uint32 up_num = 4;
  inline bool has_up_num() const;
  inline void clear_up_num();
  static const int kUpNumFieldNumber = 4;
  inline ::google::protobuf::uint32 up_num() const;
  inline void set_up_num(::google::protobuf::uint32 value);

  // optional uint32 new_num = 5;
  inline bool has_new_num() const;
  inline void clear_new_num();
  static const int kNewNumFieldNumber = 5;
  inline ::google::protobuf::uint32 new_num() const;
  inline void set_new_num(::google::protobuf::uint32 value);

  // optional uint32 value_type = 6;
  inline bool has_value_type() const;
  inline void clear_value_type();
  static const int kValueTypeFieldNumber = 6;
  inline ::google::protobuf::uint32 value_type() const;
  inline void set_value_type(::google::protobuf::uint32 value);

  // optional uint32 op_type = 7;
  inline bool has_op_type() const;
  inline void clear_op_type();
  static const int kOpTypeFieldNumber = 7;
  inline ::google::protobuf::uint32 op_type() const;
  inline void set_op_type(::google::protobuf::uint32 value);

  // optional uint32 source_type = 8;
  inline bool has_source_type() const;
  inline void clear_source_type();
  static const int kSourceTypeFieldNumber = 8;
  inline ::google::protobuf::uint32 source_type() const;
  inline void set_source_type(::google::protobuf::uint32 value);

  // optional uint32 source_param = 9;
  inline bool has_source_param() const;
  inline void clear_source_param();
  static const int kSourceParamFieldNumber = 9;
  inline ::google::protobuf::uint32 source_param() const;
  inline void set_source_param(::google::protobuf::uint32 value);

  // optional uint32 log_time = 10;
  inline bool has_log_time() const;
  inline void clear_log_time();
  static const int kLogTimeFieldNumber = 10;
  inline ::google::protobuf::uint32 log_time() const;
  inline void set_log_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.log.go_pk_log_notify)
 private:
  inline void set_has_role_uid();
  inline void clear_has_role_uid();
  inline void set_has_role_level();
  inline void clear_has_role_level();
  inline void set_has_old_num();
  inline void clear_has_old_num();
  inline void set_has_up_num();
  inline void clear_has_up_num();
  inline void set_has_new_num();
  inline void clear_has_new_num();
  inline void set_has_value_type();
  inline void clear_has_value_type();
  inline void set_has_op_type();
  inline void clear_has_op_type();
  inline void set_has_source_type();
  inline void clear_has_source_type();
  inline void set_has_source_param();
  inline void clear_has_source_param();
  inline void set_has_log_time();
  inline void clear_has_log_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 role_uid_;
  ::google::protobuf::uint32 role_level_;
  ::google::protobuf::uint32 old_num_;
  ::google::protobuf::uint32 up_num_;
  ::google::protobuf::uint32 new_num_;
  ::google::protobuf::uint32 value_type_;
  ::google::protobuf::uint32 op_type_;
  ::google::protobuf::uint32 source_type_;
  ::google::protobuf::uint32 source_param_;
  ::google::protobuf::uint32 log_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();

  void InitAsDefaultInstance();
  static go_pk_log_notify* default_instance_;
};
// -------------------------------------------------------------------

class go_shop_log_notify : public ::google::protobuf::Message {
 public:
  go_shop_log_notify();
  virtual ~go_shop_log_notify();

  go_shop_log_notify(const go_shop_log_notify& from);

  inline go_shop_log_notify& operator=(const go_shop_log_notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const go_shop_log_notify& default_instance();

  void Swap(go_shop_log_notify* other);

  // implements Message ----------------------------------------------

  go_shop_log_notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const go_shop_log_notify& from);
  void MergeFrom(const go_shop_log_notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 role_uid = 1;
  inline bool has_role_uid() const;
  inline void clear_role_uid();
  static const int kRoleUidFieldNumber = 1;
  inline ::google::protobuf::uint64 role_uid() const;
  inline void set_role_uid(::google::protobuf::uint64 value);

  // optional uint32 goods_tid = 2;
  inline bool has_goods_tid() const;
  inline void clear_goods_tid();
  static const int kGoodsTidFieldNumber = 2;
  inline ::google::protobuf::uint32 goods_tid() const;
  inline void set_goods_tid(::google::protobuf::uint32 value);

  // optional uint32 goods_num = 3;
  inline bool has_goods_num() const;
  inline void clear_goods_num();
  static const int kGoodsNumFieldNumber = 3;
  inline ::google::protobuf::uint32 goods_num() const;
  inline void set_goods_num(::google::protobuf::uint32 value);

  // optional uint32 cost_type = 4;
  inline bool has_cost_type() const;
  inline void clear_cost_type();
  static const int kCostTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 cost_type() const;
  inline void set_cost_type(::google::protobuf::uint32 value);

  // optional uint32 cost_value = 5;
  inline bool has_cost_value() const;
  inline void clear_cost_value();
  static const int kCostValueFieldNumber = 5;
  inline ::google::protobuf::uint32 cost_value() const;
  inline void set_cost_value(::google::protobuf::uint32 value);

  // optional uint32 item_id = 6;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 6;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);

  // optional uint32 item_num = 7;
  inline bool has_item_num() const;
  inline void clear_item_num();
  static const int kItemNumFieldNumber = 7;
  inline ::google::protobuf::uint32 item_num() const;
  inline void set_item_num(::google::protobuf::uint32 value);

  // optional uint32 source_type = 8;
  inline bool has_source_type() const;
  inline void clear_source_type();
  static const int kSourceTypeFieldNumber = 8;
  inline ::google::protobuf::uint32 source_type() const;
  inline void set_source_type(::google::protobuf::uint32 value);

  // optional uint32 source_param = 9;
  inline bool has_source_param() const;
  inline void clear_source_param();
  static const int kSourceParamFieldNumber = 9;
  inline ::google::protobuf::uint32 source_param() const;
  inline void set_source_param(::google::protobuf::uint32 value);

  // optional uint32 log_time = 10;
  inline bool has_log_time() const;
  inline void clear_log_time();
  static const int kLogTimeFieldNumber = 10;
  inline ::google::protobuf::uint32 log_time() const;
  inline void set_log_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.log.go_shop_log_notify)
 private:
  inline void set_has_role_uid();
  inline void clear_has_role_uid();
  inline void set_has_goods_tid();
  inline void clear_has_goods_tid();
  inline void set_has_goods_num();
  inline void clear_has_goods_num();
  inline void set_has_cost_type();
  inline void clear_has_cost_type();
  inline void set_has_cost_value();
  inline void clear_has_cost_value();
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_item_num();
  inline void clear_has_item_num();
  inline void set_has_source_type();
  inline void clear_has_source_type();
  inline void set_has_source_param();
  inline void clear_has_source_param();
  inline void set_has_log_time();
  inline void clear_has_log_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 role_uid_;
  ::google::protobuf::uint32 goods_tid_;
  ::google::protobuf::uint32 goods_num_;
  ::google::protobuf::uint32 cost_type_;
  ::google::protobuf::uint32 cost_value_;
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 item_num_;
  ::google::protobuf::uint32 source_type_;
  ::google::protobuf::uint32 source_param_;
  ::google::protobuf::uint32 log_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();

  void InitAsDefaultInstance();
  static go_shop_log_notify* default_instance_;
};
// -------------------------------------------------------------------

class go_random_shop_log_notify : public ::google::protobuf::Message {
 public:
  go_random_shop_log_notify();
  virtual ~go_random_shop_log_notify();

  go_random_shop_log_notify(const go_random_shop_log_notify& from);

  inline go_random_shop_log_notify& operator=(const go_random_shop_log_notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const go_random_shop_log_notify& default_instance();

  void Swap(go_random_shop_log_notify* other);

  // implements Message ----------------------------------------------

  go_random_shop_log_notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const go_random_shop_log_notify& from);
  void MergeFrom(const go_random_shop_log_notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 role_uid = 1;
  inline bool has_role_uid() const;
  inline void clear_role_uid();
  static const int kRoleUidFieldNumber = 1;
  inline ::google::protobuf::uint64 role_uid() const;
  inline void set_role_uid(::google::protobuf::uint64 value);

  // optional uint32 shop_tid = 2;
  inline bool has_shop_tid() const;
  inline void clear_shop_tid();
  static const int kShopTidFieldNumber = 2;
  inline ::google::protobuf::uint32 shop_tid() const;
  inline void set_shop_tid(::google::protobuf::uint32 value);

  // optional uint32 goods_tid = 3;
  inline bool has_goods_tid() const;
  inline void clear_goods_tid();
  static const int kGoodsTidFieldNumber = 3;
  inline ::google::protobuf::uint32 goods_tid() const;
  inline void set_goods_tid(::google::protobuf::uint32 value);

  // optional uint32 cost_type = 4;
  inline bool has_cost_type() const;
  inline void clear_cost_type();
  static const int kCostTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 cost_type() const;
  inline void set_cost_type(::google::protobuf::uint32 value);

  // optional uint32 cost_value = 5;
  inline bool has_cost_value() const;
  inline void clear_cost_value();
  static const int kCostValueFieldNumber = 5;
  inline ::google::protobuf::uint32 cost_value() const;
  inline void set_cost_value(::google::protobuf::uint32 value);

  // optional uint32 cost_item = 6;
  inline bool has_cost_item() const;
  inline void clear_cost_item();
  static const int kCostItemFieldNumber = 6;
  inline ::google::protobuf::uint32 cost_item() const;
  inline void set_cost_item(::google::protobuf::uint32 value);

  // optional uint32 cost_item_value = 7;
  inline bool has_cost_item_value() const;
  inline void clear_cost_item_value();
  static const int kCostItemValueFieldNumber = 7;
  inline ::google::protobuf::uint32 cost_item_value() const;
  inline void set_cost_item_value(::google::protobuf::uint32 value);

  // optional uint32 old_num = 8;
  inline bool has_old_num() const;
  inline void clear_old_num();
  static const int kOldNumFieldNumber = 8;
  inline ::google::protobuf::uint32 old_num() const;
  inline void set_old_num(::google::protobuf::uint32 value);

  // optional uint32 new_num = 9;
  inline bool has_new_num() const;
  inline void clear_new_num();
  static const int kNewNumFieldNumber = 9;
  inline ::google::protobuf::uint32 new_num() const;
  inline void set_new_num(::google::protobuf::uint32 value);

  // optional uint32 source_type = 10;
  inline bool has_source_type() const;
  inline void clear_source_type();
  static const int kSourceTypeFieldNumber = 10;
  inline ::google::protobuf::uint32 source_type() const;
  inline void set_source_type(::google::protobuf::uint32 value);

  // optional uint32 log_time = 11;
  inline bool has_log_time() const;
  inline void clear_log_time();
  static const int kLogTimeFieldNumber = 11;
  inline ::google::protobuf::uint32 log_time() const;
  inline void set_log_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.log.go_random_shop_log_notify)
 private:
  inline void set_has_role_uid();
  inline void clear_has_role_uid();
  inline void set_has_shop_tid();
  inline void clear_has_shop_tid();
  inline void set_has_goods_tid();
  inline void clear_has_goods_tid();
  inline void set_has_cost_type();
  inline void clear_has_cost_type();
  inline void set_has_cost_value();
  inline void clear_has_cost_value();
  inline void set_has_cost_item();
  inline void clear_has_cost_item();
  inline void set_has_cost_item_value();
  inline void clear_has_cost_item_value();
  inline void set_has_old_num();
  inline void clear_has_old_num();
  inline void set_has_new_num();
  inline void clear_has_new_num();
  inline void set_has_source_type();
  inline void clear_has_source_type();
  inline void set_has_log_time();
  inline void clear_has_log_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 role_uid_;
  ::google::protobuf::uint32 shop_tid_;
  ::google::protobuf::uint32 goods_tid_;
  ::google::protobuf::uint32 cost_type_;
  ::google::protobuf::uint32 cost_value_;
  ::google::protobuf::uint32 cost_item_;
  ::google::protobuf::uint32 cost_item_value_;
  ::google::protobuf::uint32 old_num_;
  ::google::protobuf::uint32 new_num_;
  ::google::protobuf::uint32 source_type_;
  ::google::protobuf::uint32 log_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();

  void InitAsDefaultInstance();
  static go_random_shop_log_notify* default_instance_;
};
// -------------------------------------------------------------------

class go_equip_log_notify : public ::google::protobuf::Message {
 public:
  go_equip_log_notify();
  virtual ~go_equip_log_notify();

  go_equip_log_notify(const go_equip_log_notify& from);

  inline go_equip_log_notify& operator=(const go_equip_log_notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const go_equip_log_notify& default_instance();

  void Swap(go_equip_log_notify* other);

  // implements Message ----------------------------------------------

  go_equip_log_notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const go_equip_log_notify& from);
  void MergeFrom(const go_equip_log_notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 role_uid = 1;
  inline bool has_role_uid() const;
  inline void clear_role_uid();
  static const int kRoleUidFieldNumber = 1;
  inline ::google::protobuf::uint64 role_uid() const;
  inline void set_role_uid(::google::protobuf::uint64 value);

  // required uint32 role_level = 2;
  inline bool has_role_level() const;
  inline void clear_role_level();
  static const int kRoleLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 role_level() const;
  inline void set_role_level(::google::protobuf::uint32 value);

  // required uint64 item_uid = 3;
  inline bool has_item_uid() const;
  inline void clear_item_uid();
  static const int kItemUidFieldNumber = 3;
  inline ::google::protobuf::uint64 item_uid() const;
  inline void set_item_uid(::google::protobuf::uint64 value);

  // required uint32 item_tid = 4;
  inline bool has_item_tid() const;
  inline void clear_item_tid();
  static const int kItemTidFieldNumber = 4;
  inline ::google::protobuf::uint32 item_tid() const;
  inline void set_item_tid(::google::protobuf::uint32 value);

  // optional uint64 hero_uid = 5;
  inline bool has_hero_uid() const;
  inline void clear_hero_uid();
  static const int kHeroUidFieldNumber = 5;
  inline ::google::protobuf::uint64 hero_uid() const;
  inline void set_hero_uid(::google::protobuf::uint64 value);

  // repeated .proto.common.equip_attr attr = 6;
  inline int attr_size() const;
  inline void clear_attr();
  static const int kAttrFieldNumber = 6;
  inline const ::proto::common::equip_attr& attr(int index) const;
  inline ::proto::common::equip_attr* mutable_attr(int index);
  inline ::proto::common::equip_attr* add_attr();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::common::equip_attr >&
      attr() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::common::equip_attr >*
      mutable_attr();

  // repeated uint32 exattr = 7;
  inline int exattr_size() const;
  inline void clear_exattr();
  static const int kExattrFieldNumber = 7;
  inline ::google::protobuf::uint32 exattr(int index) const;
  inline void set_exattr(int index, ::google::protobuf::uint32 value);
  inline void add_exattr(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      exattr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_exattr();

  // repeated uint32 remake_exattr = 8;
  inline int remake_exattr_size() const;
  inline void clear_remake_exattr();
  static const int kRemakeExattrFieldNumber = 8;
  inline ::google::protobuf::uint32 remake_exattr(int index) const;
  inline void set_remake_exattr(int index, ::google::protobuf::uint32 value);
  inline void add_remake_exattr(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      remake_exattr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_remake_exattr();

  // required uint32 op_type = 9;
  inline bool has_op_type() const;
  inline void clear_op_type();
  static const int kOpTypeFieldNumber = 9;
  inline ::google::protobuf::uint32 op_type() const;
  inline void set_op_type(::google::protobuf::uint32 value);

  // required uint32 source_type = 11;
  inline bool has_source_type() const;
  inline void clear_source_type();
  static const int kSourceTypeFieldNumber = 11;
  inline ::google::protobuf::uint32 source_type() const;
  inline void set_source_type(::google::protobuf::uint32 value);

  // optional uint32 source_param = 12;
  inline bool has_source_param() const;
  inline void clear_source_param();
  static const int kSourceParamFieldNumber = 12;
  inline ::google::protobuf::uint32 source_param() const;
  inline void set_source_param(::google::protobuf::uint32 value);

  // required uint32 log_time = 13;
  inline bool has_log_time() const;
  inline void clear_log_time();
  static const int kLogTimeFieldNumber = 13;
  inline ::google::protobuf::uint32 log_time() const;
  inline void set_log_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.log.go_equip_log_notify)
 private:
  inline void set_has_role_uid();
  inline void clear_has_role_uid();
  inline void set_has_role_level();
  inline void clear_has_role_level();
  inline void set_has_item_uid();
  inline void clear_has_item_uid();
  inline void set_has_item_tid();
  inline void clear_has_item_tid();
  inline void set_has_hero_uid();
  inline void clear_has_hero_uid();
  inline void set_has_op_type();
  inline void clear_has_op_type();
  inline void set_has_source_type();
  inline void clear_has_source_type();
  inline void set_has_source_param();
  inline void clear_has_source_param();
  inline void set_has_log_time();
  inline void clear_has_log_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 role_uid_;
  ::google::protobuf::uint64 item_uid_;
  ::google::protobuf::uint32 role_level_;
  ::google::protobuf::uint32 item_tid_;
  ::google::protobuf::uint64 hero_uid_;
  ::google::protobuf::RepeatedPtrField< ::proto::common::equip_attr > attr_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > exattr_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > remake_exattr_;
  ::google::protobuf::uint32 op_type_;
  ::google::protobuf::uint32 source_type_;
  ::google::protobuf::uint32 source_param_;
  ::google::protobuf::uint32 log_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();

  void InitAsDefaultInstance();
  static go_equip_log_notify* default_instance_;
};
// -------------------------------------------------------------------

class go_achieve_log_notify : public ::google::protobuf::Message {
 public:
  go_achieve_log_notify();
  virtual ~go_achieve_log_notify();

  go_achieve_log_notify(const go_achieve_log_notify& from);

  inline go_achieve_log_notify& operator=(const go_achieve_log_notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const go_achieve_log_notify& default_instance();

  void Swap(go_achieve_log_notify* other);

  // implements Message ----------------------------------------------

  go_achieve_log_notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const go_achieve_log_notify& from);
  void MergeFrom(const go_achieve_log_notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 role_uid = 1;
  inline bool has_role_uid() const;
  inline void clear_role_uid();
  static const int kRoleUidFieldNumber = 1;
  inline ::google::protobuf::uint64 role_uid() const;
  inline void set_role_uid(::google::protobuf::uint64 value);

  // required uint32 achieve_id = 2;
  inline bool has_achieve_id() const;
  inline void clear_achieve_id();
  static const int kAchieveIdFieldNumber = 2;
  inline ::google::protobuf::uint32 achieve_id() const;
  inline void set_achieve_id(::google::protobuf::uint32 value);

  // required uint32 old_level = 3;
  inline bool has_old_level() const;
  inline void clear_old_level();
  static const int kOldLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 old_level() const;
  inline void set_old_level(::google::protobuf::uint32 value);

  // required uint32 up_level = 4;
  inline bool has_up_level() const;
  inline void clear_up_level();
  static const int kUpLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 up_level() const;
  inline void set_up_level(::google::protobuf::uint32 value);

  // required uint32 new_level = 5;
  inline bool has_new_level() const;
  inline void clear_new_level();
  static const int kNewLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 new_level() const;
  inline void set_new_level(::google::protobuf::uint32 value);

  // required uint32 old_count = 6;
  inline bool has_old_count() const;
  inline void clear_old_count();
  static const int kOldCountFieldNumber = 6;
  inline ::google::protobuf::uint32 old_count() const;
  inline void set_old_count(::google::protobuf::uint32 value);

  // required uint32 up_count = 7;
  inline bool has_up_count() const;
  inline void clear_up_count();
  static const int kUpCountFieldNumber = 7;
  inline ::google::protobuf::uint32 up_count() const;
  inline void set_up_count(::google::protobuf::uint32 value);

  // required uint32 new_count = 8;
  inline bool has_new_count() const;
  inline void clear_new_count();
  static const int kNewCountFieldNumber = 8;
  inline ::google::protobuf::uint32 new_count() const;
  inline void set_new_count(::google::protobuf::uint32 value);

  // required uint32 old_achieve_point = 9;
  inline bool has_old_achieve_point() const;
  inline void clear_old_achieve_point();
  static const int kOldAchievePointFieldNumber = 9;
  inline ::google::protobuf::uint32 old_achieve_point() const;
  inline void set_old_achieve_point(::google::protobuf::uint32 value);

  // required uint32 add_achieve_point = 10;
  inline bool has_add_achieve_point() const;
  inline void clear_add_achieve_point();
  static const int kAddAchievePointFieldNumber = 10;
  inline ::google::protobuf::uint32 add_achieve_point() const;
  inline void set_add_achieve_point(::google::protobuf::uint32 value);

  // required uint32 new_achieve_point = 11;
  inline bool has_new_achieve_point() const;
  inline void clear_new_achieve_point();
  static const int kNewAchievePointFieldNumber = 11;
  inline ::google::protobuf::uint32 new_achieve_point() const;
  inline void set_new_achieve_point(::google::protobuf::uint32 value);

  // required uint32 old_achieve_level = 12;
  inline bool has_old_achieve_level() const;
  inline void clear_old_achieve_level();
  static const int kOldAchieveLevelFieldNumber = 12;
  inline ::google::protobuf::uint32 old_achieve_level() const;
  inline void set_old_achieve_level(::google::protobuf::uint32 value);

  // required uint32 up_achieve_level = 13;
  inline bool has_up_achieve_level() const;
  inline void clear_up_achieve_level();
  static const int kUpAchieveLevelFieldNumber = 13;
  inline ::google::protobuf::uint32 up_achieve_level() const;
  inline void set_up_achieve_level(::google::protobuf::uint32 value);

  // required uint32 new_achieve_level = 14;
  inline bool has_new_achieve_level() const;
  inline void clear_new_achieve_level();
  static const int kNewAchieveLevelFieldNumber = 14;
  inline ::google::protobuf::uint32 new_achieve_level() const;
  inline void set_new_achieve_level(::google::protobuf::uint32 value);

  // required uint32 old_reward_get_level = 15;
  inline bool has_old_reward_get_level() const;
  inline void clear_old_reward_get_level();
  static const int kOldRewardGetLevelFieldNumber = 15;
  inline ::google::protobuf::uint32 old_reward_get_level() const;
  inline void set_old_reward_get_level(::google::protobuf::uint32 value);

  // required uint32 new_reward_get_level = 16;
  inline bool has_new_reward_get_level() const;
  inline void clear_new_reward_get_level();
  static const int kNewRewardGetLevelFieldNumber = 16;
  inline ::google::protobuf::uint32 new_reward_get_level() const;
  inline void set_new_reward_get_level(::google::protobuf::uint32 value);

  // required uint32 source_type = 17;
  inline bool has_source_type() const;
  inline void clear_source_type();
  static const int kSourceTypeFieldNumber = 17;
  inline ::google::protobuf::uint32 source_type() const;
  inline void set_source_type(::google::protobuf::uint32 value);

  // optional uint32 source_param = 18;
  inline bool has_source_param() const;
  inline void clear_source_param();
  static const int kSourceParamFieldNumber = 18;
  inline ::google::protobuf::uint32 source_param() const;
  inline void set_source_param(::google::protobuf::uint32 value);

  // required uint32 log_time = 19;
  inline bool has_log_time() const;
  inline void clear_log_time();
  static const int kLogTimeFieldNumber = 19;
  inline ::google::protobuf::uint32 log_time() const;
  inline void set_log_time(::google::protobuf::uint32 value);

  // optional string sourec_type_str = 20;
  inline bool has_sourec_type_str() const;
  inline void clear_sourec_type_str();
  static const int kSourecTypeStrFieldNumber = 20;
  inline const ::std::string& sourec_type_str() const;
  inline void set_sourec_type_str(const ::std::string& value);
  inline void set_sourec_type_str(const char* value);
  inline void set_sourec_type_str(const char* value, size_t size);
  inline ::std::string* mutable_sourec_type_str();
  inline ::std::string* release_sourec_type_str();
  inline void set_allocated_sourec_type_str(::std::string* sourec_type_str);

  // @@protoc_insertion_point(class_scope:proto.log.go_achieve_log_notify)
 private:
  inline void set_has_role_uid();
  inline void clear_has_role_uid();
  inline void set_has_achieve_id();
  inline void clear_has_achieve_id();
  inline void set_has_old_level();
  inline void clear_has_old_level();
  inline void set_has_up_level();
  inline void clear_has_up_level();
  inline void set_has_new_level();
  inline void clear_has_new_level();
  inline void set_has_old_count();
  inline void clear_has_old_count();
  inline void set_has_up_count();
  inline void clear_has_up_count();
  inline void set_has_new_count();
  inline void clear_has_new_count();
  inline void set_has_old_achieve_point();
  inline void clear_has_old_achieve_point();
  inline void set_has_add_achieve_point();
  inline void clear_has_add_achieve_point();
  inline void set_has_new_achieve_point();
  inline void clear_has_new_achieve_point();
  inline void set_has_old_achieve_level();
  inline void clear_has_old_achieve_level();
  inline void set_has_up_achieve_level();
  inline void clear_has_up_achieve_level();
  inline void set_has_new_achieve_level();
  inline void clear_has_new_achieve_level();
  inline void set_has_old_reward_get_level();
  inline void clear_has_old_reward_get_level();
  inline void set_has_new_reward_get_level();
  inline void clear_has_new_reward_get_level();
  inline void set_has_source_type();
  inline void clear_has_source_type();
  inline void set_has_source_param();
  inline void clear_has_source_param();
  inline void set_has_log_time();
  inline void clear_has_log_time();
  inline void set_has_sourec_type_str();
  inline void clear_has_sourec_type_str();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 role_uid_;
  ::google::protobuf::uint32 achieve_id_;
  ::google::protobuf::uint32 old_level_;
  ::google::protobuf::uint32 up_level_;
  ::google::protobuf::uint32 new_level_;
  ::google::protobuf::uint32 old_count_;
  ::google::protobuf::uint32 up_count_;
  ::google::protobuf::uint32 new_count_;
  ::google::protobuf::uint32 old_achieve_point_;
  ::google::protobuf::uint32 add_achieve_point_;
  ::google::protobuf::uint32 new_achieve_point_;
  ::google::protobuf::uint32 old_achieve_level_;
  ::google::protobuf::uint32 up_achieve_level_;
  ::google::protobuf::uint32 new_achieve_level_;
  ::google::protobuf::uint32 old_reward_get_level_;
  ::google::protobuf::uint32 new_reward_get_level_;
  ::google::protobuf::uint32 source_type_;
  ::google::protobuf::uint32 source_param_;
  ::google::protobuf::uint32 log_time_;
  ::std::string* sourec_type_str_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(20 + 31) / 32];

  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();

  void InitAsDefaultInstance();
  static go_achieve_log_notify* default_instance_;
};
// -------------------------------------------------------------------

class go_lifeforce_log_notify : public ::google::protobuf::Message {
 public:
  go_lifeforce_log_notify();
  virtual ~go_lifeforce_log_notify();

  go_lifeforce_log_notify(const go_lifeforce_log_notify& from);

  inline go_lifeforce_log_notify& operator=(const go_lifeforce_log_notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const go_lifeforce_log_notify& default_instance();

  void Swap(go_lifeforce_log_notify* other);

  // implements Message ----------------------------------------------

  go_lifeforce_log_notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const go_lifeforce_log_notify& from);
  void MergeFrom(const go_lifeforce_log_notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 role_uid = 1;
  inline bool has_role_uid() const;
  inline void clear_role_uid();
  static const int kRoleUidFieldNumber = 1;
  inline ::google::protobuf::uint64 role_uid() const;
  inline void set_role_uid(::google::protobuf::uint64 value);

  // required uint32 old_lifestate_level = 2;
  inline bool has_old_lifestate_level() const;
  inline void clear_old_lifestate_level();
  static const int kOldLifestateLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 old_lifestate_level() const;
  inline void set_old_lifestate_level(::google::protobuf::uint32 value);

  // required uint32 old_lifestar_level = 3;
  inline bool has_old_lifestar_level() const;
  inline void clear_old_lifestar_level();
  static const int kOldLifestarLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 old_lifestar_level() const;
  inline void set_old_lifestar_level(::google::protobuf::uint32 value);

  // required uint32 up_lifestate = 4;
  inline bool has_up_lifestate() const;
  inline void clear_up_lifestate();
  static const int kUpLifestateFieldNumber = 4;
  inline ::google::protobuf::uint32 up_lifestate() const;
  inline void set_up_lifestate(::google::protobuf::uint32 value);

  // required uint32 up_lifestar = 5;
  inline bool has_up_lifestar() const;
  inline void clear_up_lifestar();
  static const int kUpLifestarFieldNumber = 5;
  inline ::google::protobuf::uint32 up_lifestar() const;
  inline void set_up_lifestar(::google::protobuf::uint32 value);

  // required uint32 new_lifestate_level = 6;
  inline bool has_new_lifestate_level() const;
  inline void clear_new_lifestate_level();
  static const int kNewLifestateLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 new_lifestate_level() const;
  inline void set_new_lifestate_level(::google::protobuf::uint32 value);

  // required uint32 new_lifestar_level = 7;
  inline bool has_new_lifestar_level() const;
  inline void clear_new_lifestar_level();
  static const int kNewLifestarLevelFieldNumber = 7;
  inline ::google::protobuf::uint32 new_lifestar_level() const;
  inline void set_new_lifestar_level(::google::protobuf::uint32 value);

  // optional uint32 source_type = 8;
  inline bool has_source_type() const;
  inline void clear_source_type();
  static const int kSourceTypeFieldNumber = 8;
  inline ::google::protobuf::uint32 source_type() const;
  inline void set_source_type(::google::protobuf::uint32 value);

  // optional uint32 source_param = 9;
  inline bool has_source_param() const;
  inline void clear_source_param();
  static const int kSourceParamFieldNumber = 9;
  inline ::google::protobuf::uint32 source_param() const;
  inline void set_source_param(::google::protobuf::uint32 value);

  // required uint32 log_time = 10;
  inline bool has_log_time() const;
  inline void clear_log_time();
  static const int kLogTimeFieldNumber = 10;
  inline ::google::protobuf::uint32 log_time() const;
  inline void set_log_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.log.go_lifeforce_log_notify)
 private:
  inline void set_has_role_uid();
  inline void clear_has_role_uid();
  inline void set_has_old_lifestate_level();
  inline void clear_has_old_lifestate_level();
  inline void set_has_old_lifestar_level();
  inline void clear_has_old_lifestar_level();
  inline void set_has_up_lifestate();
  inline void clear_has_up_lifestate();
  inline void set_has_up_lifestar();
  inline void clear_has_up_lifestar();
  inline void set_has_new_lifestate_level();
  inline void clear_has_new_lifestate_level();
  inline void set_has_new_lifestar_level();
  inline void clear_has_new_lifestar_level();
  inline void set_has_source_type();
  inline void clear_has_source_type();
  inline void set_has_source_param();
  inline void clear_has_source_param();
  inline void set_has_log_time();
  inline void clear_has_log_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 role_uid_;
  ::google::protobuf::uint32 old_lifestate_level_;
  ::google::protobuf::uint32 old_lifestar_level_;
  ::google::protobuf::uint32 up_lifestate_;
  ::google::protobuf::uint32 up_lifestar_;
  ::google::protobuf::uint32 new_lifestate_level_;
  ::google::protobuf::uint32 new_lifestar_level_;
  ::google::protobuf::uint32 source_type_;
  ::google::protobuf::uint32 source_param_;
  ::google::protobuf::uint32 log_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();

  void InitAsDefaultInstance();
  static go_lifeforce_log_notify* default_instance_;
};
// -------------------------------------------------------------------

class go_dungeon_log_notify : public ::google::protobuf::Message {
 public:
  go_dungeon_log_notify();
  virtual ~go_dungeon_log_notify();

  go_dungeon_log_notify(const go_dungeon_log_notify& from);

  inline go_dungeon_log_notify& operator=(const go_dungeon_log_notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const go_dungeon_log_notify& default_instance();

  void Swap(go_dungeon_log_notify* other);

  // implements Message ----------------------------------------------

  go_dungeon_log_notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const go_dungeon_log_notify& from);
  void MergeFrom(const go_dungeon_log_notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 role_uid = 1;
  inline bool has_role_uid() const;
  inline void clear_role_uid();
  static const int kRoleUidFieldNumber = 1;
  inline ::google::protobuf::uint64 role_uid() const;
  inline void set_role_uid(::google::protobuf::uint64 value);

  // optional uint32 dungeon_id = 2;
  inline bool has_dungeon_id() const;
  inline void clear_dungeon_id();
  static const int kDungeonIdFieldNumber = 2;
  inline ::google::protobuf::uint32 dungeon_id() const;
  inline void set_dungeon_id(::google::protobuf::uint32 value);

  // optional uint32 create_type = 3;
  inline bool has_create_type() const;
  inline void clear_create_type();
  static const int kCreateTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 create_type() const;
  inline void set_create_type(::google::protobuf::uint32 value);

  // optional uint64 create_id = 4;
  inline bool has_create_id() const;
  inline void clear_create_id();
  static const int kCreateIdFieldNumber = 4;
  inline ::google::protobuf::uint64 create_id() const;
  inline void set_create_id(::google::protobuf::uint64 value);

  // optional uint32 source_type = 5;
  inline bool has_source_type() const;
  inline void clear_source_type();
  static const int kSourceTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 source_type() const;
  inline void set_source_type(::google::protobuf::uint32 value);

  // optional uint32 source_param = 6;
  inline bool has_source_param() const;
  inline void clear_source_param();
  static const int kSourceParamFieldNumber = 6;
  inline ::google::protobuf::uint32 source_param() const;
  inline void set_source_param(::google::protobuf::uint32 value);

  // optional uint32 log_time = 7;
  inline bool has_log_time() const;
  inline void clear_log_time();
  static const int kLogTimeFieldNumber = 7;
  inline ::google::protobuf::uint32 log_time() const;
  inline void set_log_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.log.go_dungeon_log_notify)
 private:
  inline void set_has_role_uid();
  inline void clear_has_role_uid();
  inline void set_has_dungeon_id();
  inline void clear_has_dungeon_id();
  inline void set_has_create_type();
  inline void clear_has_create_type();
  inline void set_has_create_id();
  inline void clear_has_create_id();
  inline void set_has_source_type();
  inline void clear_has_source_type();
  inline void set_has_source_param();
  inline void clear_has_source_param();
  inline void set_has_log_time();
  inline void clear_has_log_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 role_uid_;
  ::google::protobuf::uint32 dungeon_id_;
  ::google::protobuf::uint32 create_type_;
  ::google::protobuf::uint64 create_id_;
  ::google::protobuf::uint32 source_type_;
  ::google::protobuf::uint32 source_param_;
  ::google::protobuf::uint32 log_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();

  void InitAsDefaultInstance();
  static go_dungeon_log_notify* default_instance_;
};
// -------------------------------------------------------------------

class go_role_buff_log_notify : public ::google::protobuf::Message {
 public:
  go_role_buff_log_notify();
  virtual ~go_role_buff_log_notify();

  go_role_buff_log_notify(const go_role_buff_log_notify& from);

  inline go_role_buff_log_notify& operator=(const go_role_buff_log_notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const go_role_buff_log_notify& default_instance();

  void Swap(go_role_buff_log_notify* other);

  // implements Message ----------------------------------------------

  go_role_buff_log_notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const go_role_buff_log_notify& from);
  void MergeFrom(const go_role_buff_log_notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 role_uid = 1;
  inline bool has_role_uid() const;
  inline void clear_role_uid();
  static const int kRoleUidFieldNumber = 1;
  inline ::google::protobuf::uint64 role_uid() const;
  inline void set_role_uid(::google::protobuf::uint64 value);

  // optional uint32 buff_id = 2;
  inline bool has_buff_id() const;
  inline void clear_buff_id();
  static const int kBuffIdFieldNumber = 2;
  inline ::google::protobuf::uint32 buff_id() const;
  inline void set_buff_id(::google::protobuf::uint32 value);

  // optional uint32 op_type = 3;
  inline bool has_op_type() const;
  inline void clear_op_type();
  static const int kOpTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 op_type() const;
  inline void set_op_type(::google::protobuf::uint32 value);

  // optional uint32 speed = 4;
  inline bool has_speed() const;
  inline void clear_speed();
  static const int kSpeedFieldNumber = 4;
  inline ::google::protobuf::uint32 speed() const;
  inline void set_speed(::google::protobuf::uint32 value);

  // optional uint32 source_type = 5;
  inline bool has_source_type() const;
  inline void clear_source_type();
  static const int kSourceTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 source_type() const;
  inline void set_source_type(::google::protobuf::uint32 value);

  // optional uint32 source_param = 6;
  inline bool has_source_param() const;
  inline void clear_source_param();
  static const int kSourceParamFieldNumber = 6;
  inline ::google::protobuf::uint32 source_param() const;
  inline void set_source_param(::google::protobuf::uint32 value);

  // optional uint32 log_time = 7;
  inline bool has_log_time() const;
  inline void clear_log_time();
  static const int kLogTimeFieldNumber = 7;
  inline ::google::protobuf::uint32 log_time() const;
  inline void set_log_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.log.go_role_buff_log_notify)
 private:
  inline void set_has_role_uid();
  inline void clear_has_role_uid();
  inline void set_has_buff_id();
  inline void clear_has_buff_id();
  inline void set_has_op_type();
  inline void clear_has_op_type();
  inline void set_has_speed();
  inline void clear_has_speed();
  inline void set_has_source_type();
  inline void clear_has_source_type();
  inline void set_has_source_param();
  inline void clear_has_source_param();
  inline void set_has_log_time();
  inline void clear_has_log_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 role_uid_;
  ::google::protobuf::uint32 buff_id_;
  ::google::protobuf::uint32 op_type_;
  ::google::protobuf::uint32 speed_;
  ::google::protobuf::uint32 source_type_;
  ::google::protobuf::uint32 source_param_;
  ::google::protobuf::uint32 log_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();

  void InitAsDefaultInstance();
  static go_role_buff_log_notify* default_instance_;
};
// -------------------------------------------------------------------

class eo_goods_log_notify : public ::google::protobuf::Message {
 public:
  eo_goods_log_notify();
  virtual ~eo_goods_log_notify();

  eo_goods_log_notify(const eo_goods_log_notify& from);

  inline eo_goods_log_notify& operator=(const eo_goods_log_notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const eo_goods_log_notify& default_instance();

  void Swap(eo_goods_log_notify* other);

  // implements Message ----------------------------------------------

  eo_goods_log_notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const eo_goods_log_notify& from);
  void MergeFrom(const eo_goods_log_notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 role_uid = 1;
  inline bool has_role_uid() const;
  inline void clear_role_uid();
  static const int kRoleUidFieldNumber = 1;
  inline ::google::protobuf::uint64 role_uid() const;
  inline void set_role_uid(::google::protobuf::uint64 value);

  // optional string role_name = 2;
  inline bool has_role_name() const;
  inline void clear_role_name();
  static const int kRoleNameFieldNumber = 2;
  inline const ::std::string& role_name() const;
  inline void set_role_name(const ::std::string& value);
  inline void set_role_name(const char* value);
  inline void set_role_name(const char* value, size_t size);
  inline ::std::string* mutable_role_name();
  inline ::std::string* release_role_name();
  inline void set_allocated_role_name(::std::string* role_name);

  // optional uint64 goods_uid = 3;
  inline bool has_goods_uid() const;
  inline void clear_goods_uid();
  static const int kGoodsUidFieldNumber = 3;
  inline ::google::protobuf::uint64 goods_uid() const;
  inline void set_goods_uid(::google::protobuf::uint64 value);

  // optional uint32 item_tid = 4;
  inline bool has_item_tid() const;
  inline void clear_item_tid();
  static const int kItemTidFieldNumber = 4;
  inline ::google::protobuf::uint32 item_tid() const;
  inline void set_item_tid(::google::protobuf::uint32 value);

  // optional uint32 item_num = 5;
  inline bool has_item_num() const;
  inline void clear_item_num();
  static const int kItemNumFieldNumber = 5;
  inline ::google::protobuf::uint32 item_num() const;
  inline void set_item_num(::google::protobuf::uint32 value);

  // optional uint32 price = 6;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 6;
  inline ::google::protobuf::uint32 price() const;
  inline void set_price(::google::protobuf::uint32 value);

  // optional uint32 selled_num = 7;
  inline bool has_selled_num() const;
  inline void clear_selled_num();
  static const int kSelledNumFieldNumber = 7;
  inline ::google::protobuf::uint32 selled_num() const;
  inline void set_selled_num(::google::protobuf::uint32 value);

  // optional uint32 profit = 8;
  inline bool has_profit() const;
  inline void clear_profit();
  static const int kProfitFieldNumber = 8;
  inline ::google::protobuf::uint32 profit() const;
  inline void set_profit(::google::protobuf::uint32 value);

  // optional uint32 state = 9;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 9;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // optional uint32 source_type = 11;
  inline bool has_source_type() const;
  inline void clear_source_type();
  static const int kSourceTypeFieldNumber = 11;
  inline ::google::protobuf::uint32 source_type() const;
  inline void set_source_type(::google::protobuf::uint32 value);

  // optional uint32 log_time = 13;
  inline bool has_log_time() const;
  inline void clear_log_time();
  static const int kLogTimeFieldNumber = 13;
  inline ::google::protobuf::uint32 log_time() const;
  inline void set_log_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.log.eo_goods_log_notify)
 private:
  inline void set_has_role_uid();
  inline void clear_has_role_uid();
  inline void set_has_role_name();
  inline void clear_has_role_name();
  inline void set_has_goods_uid();
  inline void clear_has_goods_uid();
  inline void set_has_item_tid();
  inline void clear_has_item_tid();
  inline void set_has_item_num();
  inline void clear_has_item_num();
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_selled_num();
  inline void clear_has_selled_num();
  inline void set_has_profit();
  inline void clear_has_profit();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_source_type();
  inline void clear_has_source_type();
  inline void set_has_log_time();
  inline void clear_has_log_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 role_uid_;
  ::std::string* role_name_;
  ::google::protobuf::uint64 goods_uid_;
  ::google::protobuf::uint32 item_tid_;
  ::google::protobuf::uint32 item_num_;
  ::google::protobuf::uint32 price_;
  ::google::protobuf::uint32 selled_num_;
  ::google::protobuf::uint32 profit_;
  ::google::protobuf::uint32 state_;
  ::google::protobuf::uint32 source_type_;
  ::google::protobuf::uint32 log_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();

  void InitAsDefaultInstance();
  static eo_goods_log_notify* default_instance_;
};
// -------------------------------------------------------------------

class go_role_new_guide_log_notify : public ::google::protobuf::Message {
 public:
  go_role_new_guide_log_notify();
  virtual ~go_role_new_guide_log_notify();

  go_role_new_guide_log_notify(const go_role_new_guide_log_notify& from);

  inline go_role_new_guide_log_notify& operator=(const go_role_new_guide_log_notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const go_role_new_guide_log_notify& default_instance();

  void Swap(go_role_new_guide_log_notify* other);

  // implements Message ----------------------------------------------

  go_role_new_guide_log_notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const go_role_new_guide_log_notify& from);
  void MergeFrom(const go_role_new_guide_log_notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 role_uid = 1;
  inline bool has_role_uid() const;
  inline void clear_role_uid();
  static const int kRoleUidFieldNumber = 1;
  inline ::google::protobuf::uint64 role_uid() const;
  inline void set_role_uid(::google::protobuf::uint64 value);

  // optional uint32 new_guide_id = 2;
  inline bool has_new_guide_id() const;
  inline void clear_new_guide_id();
  static const int kNewGuideIdFieldNumber = 2;
  inline ::google::protobuf::uint32 new_guide_id() const;
  inline void set_new_guide_id(::google::protobuf::uint32 value);

  // optional uint32 source_type = 3;
  inline bool has_source_type() const;
  inline void clear_source_type();
  static const int kSourceTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 source_type() const;
  inline void set_source_type(::google::protobuf::uint32 value);

  // optional uint32 source_param = 4;
  inline bool has_source_param() const;
  inline void clear_source_param();
  static const int kSourceParamFieldNumber = 4;
  inline ::google::protobuf::uint32 source_param() const;
  inline void set_source_param(::google::protobuf::uint32 value);

  // optional uint32 log_time = 5;
  inline bool has_log_time() const;
  inline void clear_log_time();
  static const int kLogTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 log_time() const;
  inline void set_log_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.log.go_role_new_guide_log_notify)
 private:
  inline void set_has_role_uid();
  inline void clear_has_role_uid();
  inline void set_has_new_guide_id();
  inline void clear_has_new_guide_id();
  inline void set_has_source_type();
  inline void clear_has_source_type();
  inline void set_has_source_param();
  inline void clear_has_source_param();
  inline void set_has_log_time();
  inline void clear_has_log_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 role_uid_;
  ::google::protobuf::uint32 new_guide_id_;
  ::google::protobuf::uint32 source_type_;
  ::google::protobuf::uint32 source_param_;
  ::google::protobuf::uint32 log_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();

  void InitAsDefaultInstance();
  static go_role_new_guide_log_notify* default_instance_;
};
// -------------------------------------------------------------------

class go_role_trade_log_notify : public ::google::protobuf::Message {
 public:
  go_role_trade_log_notify();
  virtual ~go_role_trade_log_notify();

  go_role_trade_log_notify(const go_role_trade_log_notify& from);

  inline go_role_trade_log_notify& operator=(const go_role_trade_log_notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const go_role_trade_log_notify& default_instance();

  void Swap(go_role_trade_log_notify* other);

  // implements Message ----------------------------------------------

  go_role_trade_log_notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const go_role_trade_log_notify& from);
  void MergeFrom(const go_role_trade_log_notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 role_uid = 1;
  inline bool has_role_uid() const;
  inline void clear_role_uid();
  static const int kRoleUidFieldNumber = 1;
  inline ::google::protobuf::uint64 role_uid() const;
  inline void set_role_uid(::google::protobuf::uint64 value);

  // optional uint32 item_tid = 2;
  inline bool has_item_tid() const;
  inline void clear_item_tid();
  static const int kItemTidFieldNumber = 2;
  inline ::google::protobuf::uint32 item_tid() const;
  inline void set_item_tid(::google::protobuf::uint32 value);

  // optional uint32 price = 3;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 3;
  inline ::google::protobuf::uint32 price() const;
  inline void set_price(::google::protobuf::uint32 value);

  // optional uint32 num = 4;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 4;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // optional uint32 tax = 5;
  inline bool has_tax() const;
  inline void clear_tax();
  static const int kTaxFieldNumber = 5;
  inline ::google::protobuf::uint32 tax() const;
  inline void set_tax(::google::protobuf::uint32 value);

  // optional uint32 total_num = 6;
  inline bool has_total_num() const;
  inline void clear_total_num();
  static const int kTotalNumFieldNumber = 6;
  inline ::google::protobuf::uint32 total_num() const;
  inline void set_total_num(::google::protobuf::uint32 value);

  // optional uint32 total_cost = 7;
  inline bool has_total_cost() const;
  inline void clear_total_cost();
  static const int kTotalCostFieldNumber = 7;
  inline ::google::protobuf::uint32 total_cost() const;
  inline void set_total_cost(::google::protobuf::uint32 value);

  // optional uint32 gain = 8;
  inline bool has_gain() const;
  inline void clear_gain();
  static const int kGainFieldNumber = 8;
  inline ::google::protobuf::uint32 gain() const;
  inline void set_gain(::google::protobuf::uint32 value);

  // optional uint32 trade_id = 9;
  inline bool has_trade_id() const;
  inline void clear_trade_id();
  static const int kTradeIdFieldNumber = 9;
  inline ::google::protobuf::uint32 trade_id() const;
  inline void set_trade_id(::google::protobuf::uint32 value);

  // optional uint32 op_type = 10;
  inline bool has_op_type() const;
  inline void clear_op_type();
  static const int kOpTypeFieldNumber = 10;
  inline ::google::protobuf::uint32 op_type() const;
  inline void set_op_type(::google::protobuf::uint32 value);

  // optional uint32 source_type = 11;
  inline bool has_source_type() const;
  inline void clear_source_type();
  static const int kSourceTypeFieldNumber = 11;
  inline ::google::protobuf::uint32 source_type() const;
  inline void set_source_type(::google::protobuf::uint32 value);

  // optional uint32 log_time = 12;
  inline bool has_log_time() const;
  inline void clear_log_time();
  static const int kLogTimeFieldNumber = 12;
  inline ::google::protobuf::uint32 log_time() const;
  inline void set_log_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.log.go_role_trade_log_notify)
 private:
  inline void set_has_role_uid();
  inline void clear_has_role_uid();
  inline void set_has_item_tid();
  inline void clear_has_item_tid();
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_tax();
  inline void clear_has_tax();
  inline void set_has_total_num();
  inline void clear_has_total_num();
  inline void set_has_total_cost();
  inline void clear_has_total_cost();
  inline void set_has_gain();
  inline void clear_has_gain();
  inline void set_has_trade_id();
  inline void clear_has_trade_id();
  inline void set_has_op_type();
  inline void clear_has_op_type();
  inline void set_has_source_type();
  inline void clear_has_source_type();
  inline void set_has_log_time();
  inline void clear_has_log_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 role_uid_;
  ::google::protobuf::uint32 item_tid_;
  ::google::protobuf::uint32 price_;
  ::google::protobuf::uint32 num_;
  ::google::protobuf::uint32 tax_;
  ::google::protobuf::uint32 total_num_;
  ::google::protobuf::uint32 total_cost_;
  ::google::protobuf::uint32 gain_;
  ::google::protobuf::uint32 trade_id_;
  ::google::protobuf::uint32 op_type_;
  ::google::protobuf::uint32 source_type_;
  ::google::protobuf::uint32 log_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();

  void InitAsDefaultInstance();
  static go_role_trade_log_notify* default_instance_;
};
// -------------------------------------------------------------------

class go_role_recharge_log_notify : public ::google::protobuf::Message {
 public:
  go_role_recharge_log_notify();
  virtual ~go_role_recharge_log_notify();

  go_role_recharge_log_notify(const go_role_recharge_log_notify& from);

  inline go_role_recharge_log_notify& operator=(const go_role_recharge_log_notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const go_role_recharge_log_notify& default_instance();

  void Swap(go_role_recharge_log_notify* other);

  // implements Message ----------------------------------------------

  go_role_recharge_log_notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const go_role_recharge_log_notify& from);
  void MergeFrom(const go_role_recharge_log_notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 role_uid = 1;
  inline bool has_role_uid() const;
  inline void clear_role_uid();
  static const int kRoleUidFieldNumber = 1;
  inline ::google::protobuf::uint64 role_uid() const;
  inline void set_role_uid(::google::protobuf::uint64 value);

  // optional string order_id = 2;
  inline bool has_order_id() const;
  inline void clear_order_id();
  static const int kOrderIdFieldNumber = 2;
  inline const ::std::string& order_id() const;
  inline void set_order_id(const ::std::string& value);
  inline void set_order_id(const char* value);
  inline void set_order_id(const char* value, size_t size);
  inline ::std::string* mutable_order_id();
  inline ::std::string* release_order_id();
  inline void set_allocated_order_id(::std::string* order_id);

  // optional uint32 recharge_tid = 3;
  inline bool has_recharge_tid() const;
  inline void clear_recharge_tid();
  static const int kRechargeTidFieldNumber = 3;
  inline ::google::protobuf::uint32 recharge_tid() const;
  inline void set_recharge_tid(::google::protobuf::uint32 value);

  // optional uint32 recharge_rmb = 4;
  inline bool has_recharge_rmb() const;
  inline void clear_recharge_rmb();
  static const int kRechargeRmbFieldNumber = 4;
  inline ::google::protobuf::uint32 recharge_rmb() const;
  inline void set_recharge_rmb(::google::protobuf::uint32 value);

  // optional uint32 channel_id = 5;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 5;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);

  // optional uint32 log_time = 6;
  inline bool has_log_time() const;
  inline void clear_log_time();
  static const int kLogTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 log_time() const;
  inline void set_log_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.log.go_role_recharge_log_notify)
 private:
  inline void set_has_role_uid();
  inline void clear_has_role_uid();
  inline void set_has_order_id();
  inline void clear_has_order_id();
  inline void set_has_recharge_tid();
  inline void clear_has_recharge_tid();
  inline void set_has_recharge_rmb();
  inline void clear_has_recharge_rmb();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_log_time();
  inline void clear_has_log_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 role_uid_;
  ::std::string* order_id_;
  ::google::protobuf::uint32 recharge_tid_;
  ::google::protobuf::uint32 recharge_rmb_;
  ::google::protobuf::uint32 channel_id_;
  ::google::protobuf::uint32 log_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();

  void InitAsDefaultInstance();
  static go_role_recharge_log_notify* default_instance_;
};
// -------------------------------------------------------------------

class go_rmb_log_notify : public ::google::protobuf::Message {
 public:
  go_rmb_log_notify();
  virtual ~go_rmb_log_notify();

  go_rmb_log_notify(const go_rmb_log_notify& from);

  inline go_rmb_log_notify& operator=(const go_rmb_log_notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const go_rmb_log_notify& default_instance();

  void Swap(go_rmb_log_notify* other);

  // implements Message ----------------------------------------------

  go_rmb_log_notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const go_rmb_log_notify& from);
  void MergeFrom(const go_rmb_log_notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 role_uid = 1;
  inline bool has_role_uid() const;
  inline void clear_role_uid();
  static const int kRoleUidFieldNumber = 1;
  inline ::google::protobuf::uint64 role_uid() const;
  inline void set_role_uid(::google::protobuf::uint64 value);

  // optional uint32 role_level = 2;
  inline bool has_role_level() const;
  inline void clear_role_level();
  static const int kRoleLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 role_level() const;
  inline void set_role_level(::google::protobuf::uint32 value);

  // optional uint32 old_num = 3;
  inline bool has_old_num() const;
  inline void clear_old_num();
  static const int kOldNumFieldNumber = 3;
  inline ::google::protobuf::uint32 old_num() const;
  inline void set_old_num(::google::protobuf::uint32 value);

  // optional uint32 up_num = 4;
  inline bool has_up_num() const;
  inline void clear_up_num();
  static const int kUpNumFieldNumber = 4;
  inline ::google::protobuf::uint32 up_num() const;
  inline void set_up_num(::google::protobuf::uint32 value);

  // optional uint32 new_num = 5;
  inline bool has_new_num() const;
  inline void clear_new_num();
  static const int kNewNumFieldNumber = 5;
  inline ::google::protobuf::uint32 new_num() const;
  inline void set_new_num(::google::protobuf::uint32 value);

  // optional uint32 op_type = 6;
  inline bool has_op_type() const;
  inline void clear_op_type();
  static const int kOpTypeFieldNumber = 6;
  inline ::google::protobuf::uint32 op_type() const;
  inline void set_op_type(::google::protobuf::uint32 value);

  // optional uint32 source_type = 7;
  inline bool has_source_type() const;
  inline void clear_source_type();
  static const int kSourceTypeFieldNumber = 7;
  inline ::google::protobuf::uint32 source_type() const;
  inline void set_source_type(::google::protobuf::uint32 value);

  // optional uint32 source_param = 8;
  inline bool has_source_param() const;
  inline void clear_source_param();
  static const int kSourceParamFieldNumber = 8;
  inline ::google::protobuf::uint32 source_param() const;
  inline void set_source_param(::google::protobuf::uint32 value);

  // optional uint32 log_time = 9;
  inline bool has_log_time() const;
  inline void clear_log_time();
  static const int kLogTimeFieldNumber = 9;
  inline ::google::protobuf::uint32 log_time() const;
  inline void set_log_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.log.go_rmb_log_notify)
 private:
  inline void set_has_role_uid();
  inline void clear_has_role_uid();
  inline void set_has_role_level();
  inline void clear_has_role_level();
  inline void set_has_old_num();
  inline void clear_has_old_num();
  inline void set_has_up_num();
  inline void clear_has_up_num();
  inline void set_has_new_num();
  inline void clear_has_new_num();
  inline void set_has_op_type();
  inline void clear_has_op_type();
  inline void set_has_source_type();
  inline void clear_has_source_type();
  inline void set_has_source_param();
  inline void clear_has_source_param();
  inline void set_has_log_time();
  inline void clear_has_log_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 role_uid_;
  ::google::protobuf::uint32 role_level_;
  ::google::protobuf::uint32 old_num_;
  ::google::protobuf::uint32 up_num_;
  ::google::protobuf::uint32 new_num_;
  ::google::protobuf::uint32 op_type_;
  ::google::protobuf::uint32 source_type_;
  ::google::protobuf::uint32 source_param_;
  ::google::protobuf::uint32 log_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();

  void InitAsDefaultInstance();
  static go_rmb_log_notify* default_instance_;
};
// -------------------------------------------------------------------

class go_expedition_log_notify : public ::google::protobuf::Message {
 public:
  go_expedition_log_notify();
  virtual ~go_expedition_log_notify();

  go_expedition_log_notify(const go_expedition_log_notify& from);

  inline go_expedition_log_notify& operator=(const go_expedition_log_notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const go_expedition_log_notify& default_instance();

  void Swap(go_expedition_log_notify* other);

  // implements Message ----------------------------------------------

  go_expedition_log_notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const go_expedition_log_notify& from);
  void MergeFrom(const go_expedition_log_notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 role_uid = 1;
  inline bool has_role_uid() const;
  inline void clear_role_uid();
  static const int kRoleUidFieldNumber = 1;
  inline ::google::protobuf::uint64 role_uid() const;
  inline void set_role_uid(::google::protobuf::uint64 value);

  // required uint32 role_level = 2;
  inline bool has_role_level() const;
  inline void clear_role_level();
  static const int kRoleLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 role_level() const;
  inline void set_role_level(::google::protobuf::uint32 value);

  // required uint32 source_type = 3;
  inline bool has_source_type() const;
  inline void clear_source_type();
  static const int kSourceTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 source_type() const;
  inline void set_source_type(::google::protobuf::uint32 value);

  // required uint32 source_param = 4;
  inline bool has_source_param() const;
  inline void clear_source_param();
  static const int kSourceParamFieldNumber = 4;
  inline ::google::protobuf::uint32 source_param() const;
  inline void set_source_param(::google::protobuf::uint32 value);

  // required uint32 log_time = 5;
  inline bool has_log_time() const;
  inline void clear_log_time();
  static const int kLogTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 log_time() const;
  inline void set_log_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.log.go_expedition_log_notify)
 private:
  inline void set_has_role_uid();
  inline void clear_has_role_uid();
  inline void set_has_role_level();
  inline void clear_has_role_level();
  inline void set_has_source_type();
  inline void clear_has_source_type();
  inline void set_has_source_param();
  inline void clear_has_source_param();
  inline void set_has_log_time();
  inline void clear_has_log_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 role_uid_;
  ::google::protobuf::uint32 role_level_;
  ::google::protobuf::uint32 source_type_;
  ::google::protobuf::uint32 source_param_;
  ::google::protobuf::uint32 log_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();

  void InitAsDefaultInstance();
  static go_expedition_log_notify* default_instance_;
};
// -------------------------------------------------------------------

class eo_scene_log_notify : public ::google::protobuf::Message {
 public:
  eo_scene_log_notify();
  virtual ~eo_scene_log_notify();

  eo_scene_log_notify(const eo_scene_log_notify& from);

  inline eo_scene_log_notify& operator=(const eo_scene_log_notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const eo_scene_log_notify& default_instance();

  void Swap(eo_scene_log_notify* other);

  // implements Message ----------------------------------------------

  eo_scene_log_notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const eo_scene_log_notify& from);
  void MergeFrom(const eo_scene_log_notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 role_uid = 1;
  inline bool has_role_uid() const;
  inline void clear_role_uid();
  static const int kRoleUidFieldNumber = 1;
  inline ::google::protobuf::uint64 role_uid() const;
  inline void set_role_uid(::google::protobuf::uint64 value);

  // optional uint32 old_map_tid = 2;
  inline bool has_old_map_tid() const;
  inline void clear_old_map_tid();
  static const int kOldMapTidFieldNumber = 2;
  inline ::google::protobuf::uint32 old_map_tid() const;
  inline void set_old_map_tid(::google::protobuf::uint32 value);

  // optional uint32 new_map_tid = 3;
  inline bool has_new_map_tid() const;
  inline void clear_new_map_tid();
  static const int kNewMapTidFieldNumber = 3;
  inline ::google::protobuf::uint32 new_map_tid() const;
  inline void set_new_map_tid(::google::protobuf::uint32 value);

  // optional uint32 source_type = 4;
  inline bool has_source_type() const;
  inline void clear_source_type();
  static const int kSourceTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 source_type() const;
  inline void set_source_type(::google::protobuf::uint32 value);

  // optional uint32 log_time = 5;
  inline bool has_log_time() const;
  inline void clear_log_time();
  static const int kLogTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 log_time() const;
  inline void set_log_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.log.eo_scene_log_notify)
 private:
  inline void set_has_role_uid();
  inline void clear_has_role_uid();
  inline void set_has_old_map_tid();
  inline void clear_has_old_map_tid();
  inline void set_has_new_map_tid();
  inline void clear_has_new_map_tid();
  inline void set_has_source_type();
  inline void clear_has_source_type();
  inline void set_has_log_time();
  inline void clear_has_log_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 role_uid_;
  ::google::protobuf::uint32 old_map_tid_;
  ::google::protobuf::uint32 new_map_tid_;
  ::google::protobuf::uint32 source_type_;
  ::google::protobuf::uint32 log_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();

  void InitAsDefaultInstance();
  static eo_scene_log_notify* default_instance_;
};
// -------------------------------------------------------------------

class go_combat_log_notify : public ::google::protobuf::Message {
 public:
  go_combat_log_notify();
  virtual ~go_combat_log_notify();

  go_combat_log_notify(const go_combat_log_notify& from);

  inline go_combat_log_notify& operator=(const go_combat_log_notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const go_combat_log_notify& default_instance();

  void Swap(go_combat_log_notify* other);

  // implements Message ----------------------------------------------

  go_combat_log_notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const go_combat_log_notify& from);
  void MergeFrom(const go_combat_log_notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 role_uid = 1;
  inline bool has_role_uid() const;
  inline void clear_role_uid();
  static const int kRoleUidFieldNumber = 1;
  inline ::google::protobuf::uint64 role_uid() const;
  inline void set_role_uid(::google::protobuf::uint64 value);

  // optional uint32 role_level = 2;
  inline bool has_role_level() const;
  inline void clear_role_level();
  static const int kRoleLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 role_level() const;
  inline void set_role_level(::google::protobuf::uint32 value);

  // optional uint32 fight_type = 3;
  inline bool has_fight_type() const;
  inline void clear_fight_type();
  static const int kFightTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 fight_type() const;
  inline void set_fight_type(::google::protobuf::uint32 value);

  // optional uint32 combat_type = 4;
  inline bool has_combat_type() const;
  inline void clear_combat_type();
  static const int kCombatTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 combat_type() const;
  inline void set_combat_type(::google::protobuf::uint32 value);

  // repeated uint64 team_members = 5;
  inline int team_members_size() const;
  inline void clear_team_members();
  static const int kTeamMembersFieldNumber = 5;
  inline ::google::protobuf::uint64 team_members(int index) const;
  inline void set_team_members(int index, ::google::protobuf::uint64 value);
  inline void add_team_members(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      team_members() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_team_members();

  // repeated uint64 targets = 6;
  inline int targets_size() const;
  inline void clear_targets();
  static const int kTargetsFieldNumber = 6;
  inline ::google::protobuf::uint64 targets(int index) const;
  inline void set_targets(int index, ::google::protobuf::uint64 value);
  inline void add_targets(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      targets() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_targets();

  // optional uint64 fight_uid = 7;
  inline bool has_fight_uid() const;
  inline void clear_fight_uid();
  static const int kFightUidFieldNumber = 7;
  inline ::google::protobuf::uint64 fight_uid() const;
  inline void set_fight_uid(::google::protobuf::uint64 value);

  // optional uint32 is_win = 8;
  inline bool has_is_win() const;
  inline void clear_is_win();
  static const int kIsWinFieldNumber = 8;
  inline ::google::protobuf::uint32 is_win() const;
  inline void set_is_win(::google::protobuf::uint32 value);

  // optional uint32 start_time = 9;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 9;
  inline ::google::protobuf::uint32 start_time() const;
  inline void set_start_time(::google::protobuf::uint32 value);

  // optional uint32 fight_time = 10;
  inline bool has_fight_time() const;
  inline void clear_fight_time();
  static const int kFightTimeFieldNumber = 10;
  inline ::google::protobuf::uint32 fight_time() const;
  inline void set_fight_time(::google::protobuf::uint32 value);

  // optional uint32 finish_time = 11;
  inline bool has_finish_time() const;
  inline void clear_finish_time();
  static const int kFinishTimeFieldNumber = 11;
  inline ::google::protobuf::uint32 finish_time() const;
  inline void set_finish_time(::google::protobuf::uint32 value);

  // optional uint32 log_time = 12;
  inline bool has_log_time() const;
  inline void clear_log_time();
  static const int kLogTimeFieldNumber = 12;
  inline ::google::protobuf::uint32 log_time() const;
  inline void set_log_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.log.go_combat_log_notify)
 private:
  inline void set_has_role_uid();
  inline void clear_has_role_uid();
  inline void set_has_role_level();
  inline void clear_has_role_level();
  inline void set_has_fight_type();
  inline void clear_has_fight_type();
  inline void set_has_combat_type();
  inline void clear_has_combat_type();
  inline void set_has_fight_uid();
  inline void clear_has_fight_uid();
  inline void set_has_is_win();
  inline void clear_has_is_win();
  inline void set_has_start_time();
  inline void clear_has_start_time();
  inline void set_has_fight_time();
  inline void clear_has_fight_time();
  inline void set_has_finish_time();
  inline void clear_has_finish_time();
  inline void set_has_log_time();
  inline void clear_has_log_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 role_uid_;
  ::google::protobuf::uint32 role_level_;
  ::google::protobuf::uint32 fight_type_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > team_members_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > targets_;
  ::google::protobuf::uint32 combat_type_;
  ::google::protobuf::uint32 is_win_;
  ::google::protobuf::uint64 fight_uid_;
  ::google::protobuf::uint32 start_time_;
  ::google::protobuf::uint32 fight_time_;
  ::google::protobuf::uint32 finish_time_;
  ::google::protobuf::uint32 log_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();

  void InitAsDefaultInstance();
  static go_combat_log_notify* default_instance_;
};
// -------------------------------------------------------------------

class go_hero_exp_log_notify : public ::google::protobuf::Message {
 public:
  go_hero_exp_log_notify();
  virtual ~go_hero_exp_log_notify();

  go_hero_exp_log_notify(const go_hero_exp_log_notify& from);

  inline go_hero_exp_log_notify& operator=(const go_hero_exp_log_notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const go_hero_exp_log_notify& default_instance();

  void Swap(go_hero_exp_log_notify* other);

  // implements Message ----------------------------------------------

  go_hero_exp_log_notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const go_hero_exp_log_notify& from);
  void MergeFrom(const go_hero_exp_log_notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 role_uid = 1;
  inline bool has_role_uid() const;
  inline void clear_role_uid();
  static const int kRoleUidFieldNumber = 1;
  inline ::google::protobuf::uint64 role_uid() const;
  inline void set_role_uid(::google::protobuf::uint64 value);

  // required uint32 role_level = 2;
  inline bool has_role_level() const;
  inline void clear_role_level();
  static const int kRoleLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 role_level() const;
  inline void set_role_level(::google::protobuf::uint32 value);

  // required uint64 hero_uid = 3;
  inline bool has_hero_uid() const;
  inline void clear_hero_uid();
  static const int kHeroUidFieldNumber = 3;
  inline ::google::protobuf::uint64 hero_uid() const;
  inline void set_hero_uid(::google::protobuf::uint64 value);

  // required uint32 hero_tid = 4;
  inline bool has_hero_tid() const;
  inline void clear_hero_tid();
  static const int kHeroTidFieldNumber = 4;
  inline ::google::protobuf::uint32 hero_tid() const;
  inline void set_hero_tid(::google::protobuf::uint32 value);

  // required uint32 old_level = 5;
  inline bool has_old_level() const;
  inline void clear_old_level();
  static const int kOldLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 old_level() const;
  inline void set_old_level(::google::protobuf::uint32 value);

  // required uint32 old_exp = 6;
  inline bool has_old_exp() const;
  inline void clear_old_exp();
  static const int kOldExpFieldNumber = 6;
  inline ::google::protobuf::uint32 old_exp() const;
  inline void set_old_exp(::google::protobuf::uint32 value);

  // required uint32 up_exp = 7;
  inline bool has_up_exp() const;
  inline void clear_up_exp();
  static const int kUpExpFieldNumber = 7;
  inline ::google::protobuf::uint32 up_exp() const;
  inline void set_up_exp(::google::protobuf::uint32 value);

  // required uint32 new_level = 8;
  inline bool has_new_level() const;
  inline void clear_new_level();
  static const int kNewLevelFieldNumber = 8;
  inline ::google::protobuf::uint32 new_level() const;
  inline void set_new_level(::google::protobuf::uint32 value);

  // required uint32 new_exp = 9;
  inline bool has_new_exp() const;
  inline void clear_new_exp();
  static const int kNewExpFieldNumber = 9;
  inline ::google::protobuf::uint32 new_exp() const;
  inline void set_new_exp(::google::protobuf::uint32 value);

  // required uint32 source_type = 10;
  inline bool has_source_type() const;
  inline void clear_source_type();
  static const int kSourceTypeFieldNumber = 10;
  inline ::google::protobuf::uint32 source_type() const;
  inline void set_source_type(::google::protobuf::uint32 value);

  // optional uint32 source_param = 11;
  inline bool has_source_param() const;
  inline void clear_source_param();
  static const int kSourceParamFieldNumber = 11;
  inline ::google::protobuf::uint32 source_param() const;
  inline void set_source_param(::google::protobuf::uint32 value);

  // required uint32 log_time = 12;
  inline bool has_log_time() const;
  inline void clear_log_time();
  static const int kLogTimeFieldNumber = 12;
  inline ::google::protobuf::uint32 log_time() const;
  inline void set_log_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.log.go_hero_exp_log_notify)
 private:
  inline void set_has_role_uid();
  inline void clear_has_role_uid();
  inline void set_has_role_level();
  inline void clear_has_role_level();
  inline void set_has_hero_uid();
  inline void clear_has_hero_uid();
  inline void set_has_hero_tid();
  inline void clear_has_hero_tid();
  inline void set_has_old_level();
  inline void clear_has_old_level();
  inline void set_has_old_exp();
  inline void clear_has_old_exp();
  inline void set_has_up_exp();
  inline void clear_has_up_exp();
  inline void set_has_new_level();
  inline void clear_has_new_level();
  inline void set_has_new_exp();
  inline void clear_has_new_exp();
  inline void set_has_source_type();
  inline void clear_has_source_type();
  inline void set_has_source_param();
  inline void clear_has_source_param();
  inline void set_has_log_time();
  inline void clear_has_log_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 role_uid_;
  ::google::protobuf::uint64 hero_uid_;
  ::google::protobuf::uint32 role_level_;
  ::google::protobuf::uint32 hero_tid_;
  ::google::protobuf::uint32 old_level_;
  ::google::protobuf::uint32 old_exp_;
  ::google::protobuf::uint32 up_exp_;
  ::google::protobuf::uint32 new_level_;
  ::google::protobuf::uint32 new_exp_;
  ::google::protobuf::uint32 source_type_;
  ::google::protobuf::uint32 source_param_;
  ::google::protobuf::uint32 log_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();

  void InitAsDefaultInstance();
  static go_hero_exp_log_notify* default_instance_;
};
// -------------------------------------------------------------------

class eo_redbag_log_notify : public ::google::protobuf::Message {
 public:
  eo_redbag_log_notify();
  virtual ~eo_redbag_log_notify();

  eo_redbag_log_notify(const eo_redbag_log_notify& from);

  inline eo_redbag_log_notify& operator=(const eo_redbag_log_notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const eo_redbag_log_notify& default_instance();

  void Swap(eo_redbag_log_notify* other);

  // implements Message ----------------------------------------------

  eo_redbag_log_notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const eo_redbag_log_notify& from);
  void MergeFrom(const eo_redbag_log_notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 role_uid = 1;
  inline bool has_role_uid() const;
  inline void clear_role_uid();
  static const int kRoleUidFieldNumber = 1;
  inline ::google::protobuf::uint64 role_uid() const;
  inline void set_role_uid(::google::protobuf::uint64 value);

  // optional string role_name = 2;
  inline bool has_role_name() const;
  inline void clear_role_name();
  static const int kRoleNameFieldNumber = 2;
  inline const ::std::string& role_name() const;
  inline void set_role_name(const ::std::string& value);
  inline void set_role_name(const char* value);
  inline void set_role_name(const char* value, size_t size);
  inline ::std::string* mutable_role_name();
  inline ::std::string* release_role_name();
  inline void set_allocated_role_name(::std::string* role_name);

  // optional uint64 redbag_uid = 3;
  inline bool has_redbag_uid() const;
  inline void clear_redbag_uid();
  static const int kRedbagUidFieldNumber = 3;
  inline ::google::protobuf::uint64 redbag_uid() const;
  inline void set_redbag_uid(::google::protobuf::uint64 value);

  // optional uint32 total_count = 4;
  inline bool has_total_count() const;
  inline void clear_total_count();
  static const int kTotalCountFieldNumber = 4;
  inline ::google::protobuf::uint32 total_count() const;
  inline void set_total_count(::google::protobuf::uint32 value);

  // optional uint32 total_money = 5;
  inline bool has_total_money() const;
  inline void clear_total_money();
  static const int kTotalMoneyFieldNumber = 5;
  inline ::google::protobuf::uint32 total_money() const;
  inline void set_total_money(::google::protobuf::uint32 value);

  // optional uint32 draw_money = 6;
  inline bool has_draw_money() const;
  inline void clear_draw_money();
  static const int kDrawMoneyFieldNumber = 6;
  inline ::google::protobuf::uint32 draw_money() const;
  inline void set_draw_money(::google::protobuf::uint32 value);

  // optional uint32 rest_count = 7;
  inline bool has_rest_count() const;
  inline void clear_rest_count();
  static const int kRestCountFieldNumber = 7;
  inline ::google::protobuf::uint32 rest_count() const;
  inline void set_rest_count(::google::protobuf::uint32 value);

  // optional uint32 rest_money = 8;
  inline bool has_rest_money() const;
  inline void clear_rest_money();
  static const int kRestMoneyFieldNumber = 8;
  inline ::google::protobuf::uint32 rest_money() const;
  inline void set_rest_money(::google::protobuf::uint32 value);

  // optional uint32 source_type = 9;
  inline bool has_source_type() const;
  inline void clear_source_type();
  static const int kSourceTypeFieldNumber = 9;
  inline ::google::protobuf::uint32 source_type() const;
  inline void set_source_type(::google::protobuf::uint32 value);

  // optional uint32 log_time = 10;
  inline bool has_log_time() const;
  inline void clear_log_time();
  static const int kLogTimeFieldNumber = 10;
  inline ::google::protobuf::uint32 log_time() const;
  inline void set_log_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.log.eo_redbag_log_notify)
 private:
  inline void set_has_role_uid();
  inline void clear_has_role_uid();
  inline void set_has_role_name();
  inline void clear_has_role_name();
  inline void set_has_redbag_uid();
  inline void clear_has_redbag_uid();
  inline void set_has_total_count();
  inline void clear_has_total_count();
  inline void set_has_total_money();
  inline void clear_has_total_money();
  inline void set_has_draw_money();
  inline void clear_has_draw_money();
  inline void set_has_rest_count();
  inline void clear_has_rest_count();
  inline void set_has_rest_money();
  inline void clear_has_rest_money();
  inline void set_has_source_type();
  inline void clear_has_source_type();
  inline void set_has_log_time();
  inline void clear_has_log_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 role_uid_;
  ::std::string* role_name_;
  ::google::protobuf::uint64 redbag_uid_;
  ::google::protobuf::uint32 total_count_;
  ::google::protobuf::uint32 total_money_;
  ::google::protobuf::uint32 draw_money_;
  ::google::protobuf::uint32 rest_count_;
  ::google::protobuf::uint32 rest_money_;
  ::google::protobuf::uint32 source_type_;
  ::google::protobuf::uint32 log_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();

  void InitAsDefaultInstance();
  static eo_redbag_log_notify* default_instance_;
};
// -------------------------------------------------------------------

class go_patrol_hire_log_notify : public ::google::protobuf::Message {
 public:
  go_patrol_hire_log_notify();
  virtual ~go_patrol_hire_log_notify();

  go_patrol_hire_log_notify(const go_patrol_hire_log_notify& from);

  inline go_patrol_hire_log_notify& operator=(const go_patrol_hire_log_notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const go_patrol_hire_log_notify& default_instance();

  void Swap(go_patrol_hire_log_notify* other);

  // implements Message ----------------------------------------------

  go_patrol_hire_log_notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const go_patrol_hire_log_notify& from);
  void MergeFrom(const go_patrol_hire_log_notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 role_uid = 1;
  inline bool has_role_uid() const;
  inline void clear_role_uid();
  static const int kRoleUidFieldNumber = 1;
  inline ::google::protobuf::uint64 role_uid() const;
  inline void set_role_uid(::google::protobuf::uint64 value);

  // optional uint32 begin_time = 2;
  inline bool has_begin_time() const;
  inline void clear_begin_time();
  static const int kBeginTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 begin_time() const;
  inline void set_begin_time(::google::protobuf::uint32 value);

  // optional uint32 end_time = 3;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 end_time() const;
  inline void set_end_time(::google::protobuf::uint32 value);

  // optional uint32 count = 4;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 4;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // optional uint32 total_exp = 5;
  inline bool has_total_exp() const;
  inline void clear_total_exp();
  static const int kTotalExpFieldNumber = 5;
  inline ::google::protobuf::uint32 total_exp() const;
  inline void set_total_exp(::google::protobuf::uint32 value);

  // optional uint32 use_multi_point = 6;
  inline bool has_use_multi_point() const;
  inline void clear_use_multi_point();
  static const int kUseMultiPointFieldNumber = 6;
  inline ::google::protobuf::uint32 use_multi_point() const;
  inline void set_use_multi_point(::google::protobuf::uint32 value);

  // optional uint32 map_id = 7;
  inline bool has_map_id() const;
  inline void clear_map_id();
  static const int kMapIdFieldNumber = 7;
  inline ::google::protobuf::uint32 map_id() const;
  inline void set_map_id(::google::protobuf::uint32 value);

  // optional uint32 source_type = 8;
  inline bool has_source_type() const;
  inline void clear_source_type();
  static const int kSourceTypeFieldNumber = 8;
  inline ::google::protobuf::uint32 source_type() const;
  inline void set_source_type(::google::protobuf::uint32 value);

  // optional uint32 log_time = 9;
  inline bool has_log_time() const;
  inline void clear_log_time();
  static const int kLogTimeFieldNumber = 9;
  inline ::google::protobuf::uint32 log_time() const;
  inline void set_log_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.log.go_patrol_hire_log_notify)
 private:
  inline void set_has_role_uid();
  inline void clear_has_role_uid();
  inline void set_has_begin_time();
  inline void clear_has_begin_time();
  inline void set_has_end_time();
  inline void clear_has_end_time();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_total_exp();
  inline void clear_has_total_exp();
  inline void set_has_use_multi_point();
  inline void clear_has_use_multi_point();
  inline void set_has_map_id();
  inline void clear_has_map_id();
  inline void set_has_source_type();
  inline void clear_has_source_type();
  inline void set_has_log_time();
  inline void clear_has_log_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 role_uid_;
  ::google::protobuf::uint32 begin_time_;
  ::google::protobuf::uint32 end_time_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 total_exp_;
  ::google::protobuf::uint32 use_multi_point_;
  ::google::protobuf::uint32 map_id_;
  ::google::protobuf::uint32 source_type_;
  ::google::protobuf::uint32 log_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();

  void InitAsDefaultInstance();
  static go_patrol_hire_log_notify* default_instance_;
};
// -------------------------------------------------------------------

class eo_offline_arena_rank_log_notify : public ::google::protobuf::Message {
 public:
  eo_offline_arena_rank_log_notify();
  virtual ~eo_offline_arena_rank_log_notify();

  eo_offline_arena_rank_log_notify(const eo_offline_arena_rank_log_notify& from);

  inline eo_offline_arena_rank_log_notify& operator=(const eo_offline_arena_rank_log_notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const eo_offline_arena_rank_log_notify& default_instance();

  void Swap(eo_offline_arena_rank_log_notify* other);

  // implements Message ----------------------------------------------

  eo_offline_arena_rank_log_notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const eo_offline_arena_rank_log_notify& from);
  void MergeFrom(const eo_offline_arena_rank_log_notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 role_uid = 1;
  inline bool has_role_uid() const;
  inline void clear_role_uid();
  static const int kRoleUidFieldNumber = 1;
  inline ::google::protobuf::uint64 role_uid() const;
  inline void set_role_uid(::google::protobuf::uint64 value);

  // optional string role_name = 2;
  inline bool has_role_name() const;
  inline void clear_role_name();
  static const int kRoleNameFieldNumber = 2;
  inline const ::std::string& role_name() const;
  inline void set_role_name(const ::std::string& value);
  inline void set_role_name(const char* value);
  inline void set_role_name(const char* value, size_t size);
  inline ::std::string* mutable_role_name();
  inline ::std::string* release_role_name();
  inline void set_allocated_role_name(::std::string* role_name);

  // optional uint32 role_level = 3;
  inline bool has_role_level() const;
  inline void clear_role_level();
  static const int kRoleLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 role_level() const;
  inline void set_role_level(::google::protobuf::uint32 value);

  // optional uint32 op_type = 4;
  inline bool has_op_type() const;
  inline void clear_op_type();
  static const int kOpTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 op_type() const;
  inline void set_op_type(::google::protobuf::uint32 value);

  // optional uint32 old_class = 5;
  inline bool has_old_class() const;
  inline void clear_old_class();
  static const int kOldClassFieldNumber = 5;
  inline ::google::protobuf::uint32 old_class() const;
  inline void set_old_class(::google::protobuf::uint32 value);

  // optional uint32 old_rank = 6;
  inline bool has_old_rank() const;
  inline void clear_old_rank();
  static const int kOldRankFieldNumber = 6;
  inline ::google::protobuf::uint32 old_rank() const;
  inline void set_old_rank(::google::protobuf::uint32 value);

  // optional uint32 new_class = 7;
  inline bool has_new_class() const;
  inline void clear_new_class();
  static const int kNewClassFieldNumber = 7;
  inline ::google::protobuf::uint32 new_class() const;
  inline void set_new_class(::google::protobuf::uint32 value);

  // optional uint32 new_rank = 8;
  inline bool has_new_rank() const;
  inline void clear_new_rank();
  static const int kNewRankFieldNumber = 8;
  inline ::google::protobuf::uint32 new_rank() const;
  inline void set_new_rank(::google::protobuf::uint32 value);

  // optional uint32 log_time = 9;
  inline bool has_log_time() const;
  inline void clear_log_time();
  static const int kLogTimeFieldNumber = 9;
  inline ::google::protobuf::uint32 log_time() const;
  inline void set_log_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.log.eo_offline_arena_rank_log_notify)
 private:
  inline void set_has_role_uid();
  inline void clear_has_role_uid();
  inline void set_has_role_name();
  inline void clear_has_role_name();
  inline void set_has_role_level();
  inline void clear_has_role_level();
  inline void set_has_op_type();
  inline void clear_has_op_type();
  inline void set_has_old_class();
  inline void clear_has_old_class();
  inline void set_has_old_rank();
  inline void clear_has_old_rank();
  inline void set_has_new_class();
  inline void clear_has_new_class();
  inline void set_has_new_rank();
  inline void clear_has_new_rank();
  inline void set_has_log_time();
  inline void clear_has_log_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 role_uid_;
  ::std::string* role_name_;
  ::google::protobuf::uint32 role_level_;
  ::google::protobuf::uint32 op_type_;
  ::google::protobuf::uint32 old_class_;
  ::google::protobuf::uint32 old_rank_;
  ::google::protobuf::uint32 new_class_;
  ::google::protobuf::uint32 new_rank_;
  ::google::protobuf::uint32 log_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();

  void InitAsDefaultInstance();
  static eo_offline_arena_rank_log_notify* default_instance_;
};
// ===================================================================


// ===================================================================

// no_batch_save_logs_notify

// repeated .proto.log.save_to_log logs = 1;
inline int no_batch_save_logs_notify::logs_size() const {
  return logs_.size();
}
inline void no_batch_save_logs_notify::clear_logs() {
  logs_.Clear();
}
inline const ::proto::log::save_to_log& no_batch_save_logs_notify::logs(int index) const {
  return logs_.Get(index);
}
inline ::proto::log::save_to_log* no_batch_save_logs_notify::mutable_logs(int index) {
  return logs_.Mutable(index);
}
inline ::proto::log::save_to_log* no_batch_save_logs_notify::add_logs() {
  return logs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::log::save_to_log >&
no_batch_save_logs_notify::logs() const {
  return logs_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::log::save_to_log >*
no_batch_save_logs_notify::mutable_logs() {
  return &logs_;
}

// -------------------------------------------------------------------

// go_batch_save_logs_notify

// repeated .proto.log.save_to_log logs = 1;
inline int go_batch_save_logs_notify::logs_size() const {
  return logs_.size();
}
inline void go_batch_save_logs_notify::clear_logs() {
  logs_.Clear();
}
inline const ::proto::log::save_to_log& go_batch_save_logs_notify::logs(int index) const {
  return logs_.Get(index);
}
inline ::proto::log::save_to_log* go_batch_save_logs_notify::mutable_logs(int index) {
  return logs_.Mutable(index);
}
inline ::proto::log::save_to_log* go_batch_save_logs_notify::add_logs() {
  return logs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::log::save_to_log >&
go_batch_save_logs_notify::logs() const {
  return logs_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::log::save_to_log >*
go_batch_save_logs_notify::mutable_logs() {
  return &logs_;
}

// -------------------------------------------------------------------

// eo_batch_save_logs_notify

// repeated .proto.log.save_to_log logs = 1;
inline int eo_batch_save_logs_notify::logs_size() const {
  return logs_.size();
}
inline void eo_batch_save_logs_notify::clear_logs() {
  logs_.Clear();
}
inline const ::proto::log::save_to_log& eo_batch_save_logs_notify::logs(int index) const {
  return logs_.Get(index);
}
inline ::proto::log::save_to_log* eo_batch_save_logs_notify::mutable_logs(int index) {
  return logs_.Mutable(index);
}
inline ::proto::log::save_to_log* eo_batch_save_logs_notify::add_logs() {
  return logs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::log::save_to_log >&
eo_batch_save_logs_notify::logs() const {
  return logs_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::log::save_to_log >*
eo_batch_save_logs_notify::mutable_logs() {
  return &logs_;
}

// -------------------------------------------------------------------

// save_to_log

// required uint32 cmd = 1;
inline bool save_to_log::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void save_to_log::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void save_to_log::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void save_to_log::clear_cmd() {
  cmd_ = 0u;
  clear_has_cmd();
}
inline ::google::protobuf::uint32 save_to_log::cmd() const {
  return cmd_;
}
inline void save_to_log::set_cmd(::google::protobuf::uint32 value) {
  set_has_cmd();
  cmd_ = value;
}

// required bytes data = 2;
inline bool save_to_log::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void save_to_log::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void save_to_log::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void save_to_log::clear_data() {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& save_to_log::data() const {
  return *data_;
}
inline void save_to_log::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void save_to_log::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void save_to_log::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* save_to_log::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  return data_;
}
inline ::std::string* save_to_log::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void save_to_log::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// no_mobile_log_notify

// optional string uuid = 1;
inline bool no_mobile_log_notify::has_uuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void no_mobile_log_notify::set_has_uuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void no_mobile_log_notify::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void no_mobile_log_notify::clear_uuid() {
  if (uuid_ != &::google::protobuf::internal::kEmptyString) {
    uuid_->clear();
  }
  clear_has_uuid();
}
inline const ::std::string& no_mobile_log_notify::uuid() const {
  return *uuid_;
}
inline void no_mobile_log_notify::set_uuid(const ::std::string& value) {
  set_has_uuid();
  if (uuid_ == &::google::protobuf::internal::kEmptyString) {
    uuid_ = new ::std::string;
  }
  uuid_->assign(value);
}
inline void no_mobile_log_notify::set_uuid(const char* value) {
  set_has_uuid();
  if (uuid_ == &::google::protobuf::internal::kEmptyString) {
    uuid_ = new ::std::string;
  }
  uuid_->assign(value);
}
inline void no_mobile_log_notify::set_uuid(const char* value, size_t size) {
  set_has_uuid();
  if (uuid_ == &::google::protobuf::internal::kEmptyString) {
    uuid_ = new ::std::string;
  }
  uuid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* no_mobile_log_notify::mutable_uuid() {
  set_has_uuid();
  if (uuid_ == &::google::protobuf::internal::kEmptyString) {
    uuid_ = new ::std::string;
  }
  return uuid_;
}
inline ::std::string* no_mobile_log_notify::release_uuid() {
  clear_has_uuid();
  if (uuid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = uuid_;
    uuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void no_mobile_log_notify::set_allocated_uuid(::std::string* uuid) {
  if (uuid_ != &::google::protobuf::internal::kEmptyString) {
    delete uuid_;
  }
  if (uuid) {
    set_has_uuid();
    uuid_ = uuid;
  } else {
    clear_has_uuid();
    uuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string device_model = 2;
inline bool no_mobile_log_notify::has_device_model() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void no_mobile_log_notify::set_has_device_model() {
  _has_bits_[0] |= 0x00000002u;
}
inline void no_mobile_log_notify::clear_has_device_model() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void no_mobile_log_notify::clear_device_model() {
  if (device_model_ != &::google::protobuf::internal::kEmptyString) {
    device_model_->clear();
  }
  clear_has_device_model();
}
inline const ::std::string& no_mobile_log_notify::device_model() const {
  return *device_model_;
}
inline void no_mobile_log_notify::set_device_model(const ::std::string& value) {
  set_has_device_model();
  if (device_model_ == &::google::protobuf::internal::kEmptyString) {
    device_model_ = new ::std::string;
  }
  device_model_->assign(value);
}
inline void no_mobile_log_notify::set_device_model(const char* value) {
  set_has_device_model();
  if (device_model_ == &::google::protobuf::internal::kEmptyString) {
    device_model_ = new ::std::string;
  }
  device_model_->assign(value);
}
inline void no_mobile_log_notify::set_device_model(const char* value, size_t size) {
  set_has_device_model();
  if (device_model_ == &::google::protobuf::internal::kEmptyString) {
    device_model_ = new ::std::string;
  }
  device_model_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* no_mobile_log_notify::mutable_device_model() {
  set_has_device_model();
  if (device_model_ == &::google::protobuf::internal::kEmptyString) {
    device_model_ = new ::std::string;
  }
  return device_model_;
}
inline ::std::string* no_mobile_log_notify::release_device_model() {
  clear_has_device_model();
  if (device_model_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = device_model_;
    device_model_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void no_mobile_log_notify::set_allocated_device_model(::std::string* device_model) {
  if (device_model_ != &::google::protobuf::internal::kEmptyString) {
    delete device_model_;
  }
  if (device_model) {
    set_has_device_model();
    device_model_ = device_model;
  } else {
    clear_has_device_model();
    device_model_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string device_sys_version = 3;
inline bool no_mobile_log_notify::has_device_sys_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void no_mobile_log_notify::set_has_device_sys_version() {
  _has_bits_[0] |= 0x00000004u;
}
inline void no_mobile_log_notify::clear_has_device_sys_version() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void no_mobile_log_notify::clear_device_sys_version() {
  if (device_sys_version_ != &::google::protobuf::internal::kEmptyString) {
    device_sys_version_->clear();
  }
  clear_has_device_sys_version();
}
inline const ::std::string& no_mobile_log_notify::device_sys_version() const {
  return *device_sys_version_;
}
inline void no_mobile_log_notify::set_device_sys_version(const ::std::string& value) {
  set_has_device_sys_version();
  if (device_sys_version_ == &::google::protobuf::internal::kEmptyString) {
    device_sys_version_ = new ::std::string;
  }
  device_sys_version_->assign(value);
}
inline void no_mobile_log_notify::set_device_sys_version(const char* value) {
  set_has_device_sys_version();
  if (device_sys_version_ == &::google::protobuf::internal::kEmptyString) {
    device_sys_version_ = new ::std::string;
  }
  device_sys_version_->assign(value);
}
inline void no_mobile_log_notify::set_device_sys_version(const char* value, size_t size) {
  set_has_device_sys_version();
  if (device_sys_version_ == &::google::protobuf::internal::kEmptyString) {
    device_sys_version_ = new ::std::string;
  }
  device_sys_version_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* no_mobile_log_notify::mutable_device_sys_version() {
  set_has_device_sys_version();
  if (device_sys_version_ == &::google::protobuf::internal::kEmptyString) {
    device_sys_version_ = new ::std::string;
  }
  return device_sys_version_;
}
inline ::std::string* no_mobile_log_notify::release_device_sys_version() {
  clear_has_device_sys_version();
  if (device_sys_version_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = device_sys_version_;
    device_sys_version_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void no_mobile_log_notify::set_allocated_device_sys_version(::std::string* device_sys_version) {
  if (device_sys_version_ != &::google::protobuf::internal::kEmptyString) {
    delete device_sys_version_;
  }
  if (device_sys_version) {
    set_has_device_sys_version();
    device_sys_version_ = device_sys_version;
  } else {
    clear_has_device_sys_version();
    device_sys_version_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string cpu_type = 4;
inline bool no_mobile_log_notify::has_cpu_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void no_mobile_log_notify::set_has_cpu_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void no_mobile_log_notify::clear_has_cpu_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void no_mobile_log_notify::clear_cpu_type() {
  if (cpu_type_ != &::google::protobuf::internal::kEmptyString) {
    cpu_type_->clear();
  }
  clear_has_cpu_type();
}
inline const ::std::string& no_mobile_log_notify::cpu_type() const {
  return *cpu_type_;
}
inline void no_mobile_log_notify::set_cpu_type(const ::std::string& value) {
  set_has_cpu_type();
  if (cpu_type_ == &::google::protobuf::internal::kEmptyString) {
    cpu_type_ = new ::std::string;
  }
  cpu_type_->assign(value);
}
inline void no_mobile_log_notify::set_cpu_type(const char* value) {
  set_has_cpu_type();
  if (cpu_type_ == &::google::protobuf::internal::kEmptyString) {
    cpu_type_ = new ::std::string;
  }
  cpu_type_->assign(value);
}
inline void no_mobile_log_notify::set_cpu_type(const char* value, size_t size) {
  set_has_cpu_type();
  if (cpu_type_ == &::google::protobuf::internal::kEmptyString) {
    cpu_type_ = new ::std::string;
  }
  cpu_type_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* no_mobile_log_notify::mutable_cpu_type() {
  set_has_cpu_type();
  if (cpu_type_ == &::google::protobuf::internal::kEmptyString) {
    cpu_type_ = new ::std::string;
  }
  return cpu_type_;
}
inline ::std::string* no_mobile_log_notify::release_cpu_type() {
  clear_has_cpu_type();
  if (cpu_type_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = cpu_type_;
    cpu_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void no_mobile_log_notify::set_allocated_cpu_type(::std::string* cpu_type) {
  if (cpu_type_ != &::google::protobuf::internal::kEmptyString) {
    delete cpu_type_;
  }
  if (cpu_type) {
    set_has_cpu_type();
    cpu_type_ = cpu_type;
  } else {
    clear_has_cpu_type();
    cpu_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 cpu_count = 5;
inline bool no_mobile_log_notify::has_cpu_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void no_mobile_log_notify::set_has_cpu_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void no_mobile_log_notify::clear_has_cpu_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void no_mobile_log_notify::clear_cpu_count() {
  cpu_count_ = 0;
  clear_has_cpu_count();
}
inline ::google::protobuf::int32 no_mobile_log_notify::cpu_count() const {
  return cpu_count_;
}
inline void no_mobile_log_notify::set_cpu_count(::google::protobuf::int32 value) {
  set_has_cpu_count();
  cpu_count_ = value;
}

// optional int32 memory_size = 6;
inline bool no_mobile_log_notify::has_memory_size() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void no_mobile_log_notify::set_has_memory_size() {
  _has_bits_[0] |= 0x00000020u;
}
inline void no_mobile_log_notify::clear_has_memory_size() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void no_mobile_log_notify::clear_memory_size() {
  memory_size_ = 0;
  clear_has_memory_size();
}
inline ::google::protobuf::int32 no_mobile_log_notify::memory_size() const {
  return memory_size_;
}
inline void no_mobile_log_notify::set_memory_size(::google::protobuf::int32 value) {
  set_has_memory_size();
  memory_size_ = value;
}

// optional string grph_device_name = 7;
inline bool no_mobile_log_notify::has_grph_device_name() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void no_mobile_log_notify::set_has_grph_device_name() {
  _has_bits_[0] |= 0x00000040u;
}
inline void no_mobile_log_notify::clear_has_grph_device_name() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void no_mobile_log_notify::clear_grph_device_name() {
  if (grph_device_name_ != &::google::protobuf::internal::kEmptyString) {
    grph_device_name_->clear();
  }
  clear_has_grph_device_name();
}
inline const ::std::string& no_mobile_log_notify::grph_device_name() const {
  return *grph_device_name_;
}
inline void no_mobile_log_notify::set_grph_device_name(const ::std::string& value) {
  set_has_grph_device_name();
  if (grph_device_name_ == &::google::protobuf::internal::kEmptyString) {
    grph_device_name_ = new ::std::string;
  }
  grph_device_name_->assign(value);
}
inline void no_mobile_log_notify::set_grph_device_name(const char* value) {
  set_has_grph_device_name();
  if (grph_device_name_ == &::google::protobuf::internal::kEmptyString) {
    grph_device_name_ = new ::std::string;
  }
  grph_device_name_->assign(value);
}
inline void no_mobile_log_notify::set_grph_device_name(const char* value, size_t size) {
  set_has_grph_device_name();
  if (grph_device_name_ == &::google::protobuf::internal::kEmptyString) {
    grph_device_name_ = new ::std::string;
  }
  grph_device_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* no_mobile_log_notify::mutable_grph_device_name() {
  set_has_grph_device_name();
  if (grph_device_name_ == &::google::protobuf::internal::kEmptyString) {
    grph_device_name_ = new ::std::string;
  }
  return grph_device_name_;
}
inline ::std::string* no_mobile_log_notify::release_grph_device_name() {
  clear_has_grph_device_name();
  if (grph_device_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = grph_device_name_;
    grph_device_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void no_mobile_log_notify::set_allocated_grph_device_name(::std::string* grph_device_name) {
  if (grph_device_name_ != &::google::protobuf::internal::kEmptyString) {
    delete grph_device_name_;
  }
  if (grph_device_name) {
    set_has_grph_device_name();
    grph_device_name_ = grph_device_name;
  } else {
    clear_has_grph_device_name();
    grph_device_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 log_time = 8;
inline bool no_mobile_log_notify::has_log_time() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void no_mobile_log_notify::set_has_log_time() {
  _has_bits_[0] |= 0x00000080u;
}
inline void no_mobile_log_notify::clear_has_log_time() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void no_mobile_log_notify::clear_log_time() {
  log_time_ = 0u;
  clear_has_log_time();
}
inline ::google::protobuf::uint32 no_mobile_log_notify::log_time() const {
  return log_time_;
}
inline void no_mobile_log_notify::set_log_time(::google::protobuf::uint32 value) {
  set_has_log_time();
  log_time_ = value;
}

// -------------------------------------------------------------------

// no_account_log_notify

// optional uint64 account_uid = 1;
inline bool no_account_log_notify::has_account_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void no_account_log_notify::set_has_account_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void no_account_log_notify::clear_has_account_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void no_account_log_notify::clear_account_uid() {
  account_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_account_uid();
}
inline ::google::protobuf::uint64 no_account_log_notify::account_uid() const {
  return account_uid_;
}
inline void no_account_log_notify::set_account_uid(::google::protobuf::uint64 value) {
  set_has_account_uid();
  account_uid_ = value;
}

// optional uint32 channel_id = 2;
inline bool no_account_log_notify::has_channel_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void no_account_log_notify::set_has_channel_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void no_account_log_notify::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void no_account_log_notify::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 no_account_log_notify::channel_id() const {
  return channel_id_;
}
inline void no_account_log_notify::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// optional uint64 role_uid = 3;
inline bool no_account_log_notify::has_role_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void no_account_log_notify::set_has_role_uid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void no_account_log_notify::clear_has_role_uid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void no_account_log_notify::clear_role_uid() {
  role_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_role_uid();
}
inline ::google::protobuf::uint64 no_account_log_notify::role_uid() const {
  return role_uid_;
}
inline void no_account_log_notify::set_role_uid(::google::protobuf::uint64 value) {
  set_has_role_uid();
  role_uid_ = value;
}

// optional string mobile_uuid = 4;
inline bool no_account_log_notify::has_mobile_uuid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void no_account_log_notify::set_has_mobile_uuid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void no_account_log_notify::clear_has_mobile_uuid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void no_account_log_notify::clear_mobile_uuid() {
  if (mobile_uuid_ != &::google::protobuf::internal::kEmptyString) {
    mobile_uuid_->clear();
  }
  clear_has_mobile_uuid();
}
inline const ::std::string& no_account_log_notify::mobile_uuid() const {
  return *mobile_uuid_;
}
inline void no_account_log_notify::set_mobile_uuid(const ::std::string& value) {
  set_has_mobile_uuid();
  if (mobile_uuid_ == &::google::protobuf::internal::kEmptyString) {
    mobile_uuid_ = new ::std::string;
  }
  mobile_uuid_->assign(value);
}
inline void no_account_log_notify::set_mobile_uuid(const char* value) {
  set_has_mobile_uuid();
  if (mobile_uuid_ == &::google::protobuf::internal::kEmptyString) {
    mobile_uuid_ = new ::std::string;
  }
  mobile_uuid_->assign(value);
}
inline void no_account_log_notify::set_mobile_uuid(const char* value, size_t size) {
  set_has_mobile_uuid();
  if (mobile_uuid_ == &::google::protobuf::internal::kEmptyString) {
    mobile_uuid_ = new ::std::string;
  }
  mobile_uuid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* no_account_log_notify::mutable_mobile_uuid() {
  set_has_mobile_uuid();
  if (mobile_uuid_ == &::google::protobuf::internal::kEmptyString) {
    mobile_uuid_ = new ::std::string;
  }
  return mobile_uuid_;
}
inline ::std::string* no_account_log_notify::release_mobile_uuid() {
  clear_has_mobile_uuid();
  if (mobile_uuid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = mobile_uuid_;
    mobile_uuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void no_account_log_notify::set_allocated_mobile_uuid(::std::string* mobile_uuid) {
  if (mobile_uuid_ != &::google::protobuf::internal::kEmptyString) {
    delete mobile_uuid_;
  }
  if (mobile_uuid) {
    set_has_mobile_uuid();
    mobile_uuid_ = mobile_uuid;
  } else {
    clear_has_mobile_uuid();
    mobile_uuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 source_type = 5;
inline bool no_account_log_notify::has_source_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void no_account_log_notify::set_has_source_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void no_account_log_notify::clear_has_source_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void no_account_log_notify::clear_source_type() {
  source_type_ = 0u;
  clear_has_source_type();
}
inline ::google::protobuf::uint32 no_account_log_notify::source_type() const {
  return source_type_;
}
inline void no_account_log_notify::set_source_type(::google::protobuf::uint32 value) {
  set_has_source_type();
  source_type_ = value;
}

// optional uint32 log_time = 6;
inline bool no_account_log_notify::has_log_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void no_account_log_notify::set_has_log_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void no_account_log_notify::clear_has_log_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void no_account_log_notify::clear_log_time() {
  log_time_ = 0u;
  clear_has_log_time();
}
inline ::google::protobuf::uint32 no_account_log_notify::log_time() const {
  return log_time_;
}
inline void no_account_log_notify::set_log_time(::google::protobuf::uint32 value) {
  set_has_log_time();
  log_time_ = value;
}

// -------------------------------------------------------------------

// do_create_role_log_notify

// required uint64 role_uid = 1;
inline bool do_create_role_log_notify::has_role_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void do_create_role_log_notify::set_has_role_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void do_create_role_log_notify::clear_has_role_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void do_create_role_log_notify::clear_role_uid() {
  role_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_role_uid();
}
inline ::google::protobuf::uint64 do_create_role_log_notify::role_uid() const {
  return role_uid_;
}
inline void do_create_role_log_notify::set_role_uid(::google::protobuf::uint64 value) {
  set_has_role_uid();
  role_uid_ = value;
}

// required string nickname = 2;
inline bool do_create_role_log_notify::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void do_create_role_log_notify::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void do_create_role_log_notify::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void do_create_role_log_notify::clear_nickname() {
  if (nickname_ != &::google::protobuf::internal::kEmptyString) {
    nickname_->clear();
  }
  clear_has_nickname();
}
inline const ::std::string& do_create_role_log_notify::nickname() const {
  return *nickname_;
}
inline void do_create_role_log_notify::set_nickname(const ::std::string& value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::kEmptyString) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
}
inline void do_create_role_log_notify::set_nickname(const char* value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::kEmptyString) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
}
inline void do_create_role_log_notify::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::kEmptyString) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* do_create_role_log_notify::mutable_nickname() {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::kEmptyString) {
    nickname_ = new ::std::string;
  }
  return nickname_;
}
inline ::std::string* do_create_role_log_notify::release_nickname() {
  clear_has_nickname();
  if (nickname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = nickname_;
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void do_create_role_log_notify::set_allocated_nickname(::std::string* nickname) {
  if (nickname_ != &::google::protobuf::internal::kEmptyString) {
    delete nickname_;
  }
  if (nickname) {
    set_has_nickname();
    nickname_ = nickname;
  } else {
    clear_has_nickname();
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required .proto.common.mobile_info mobile = 3;
inline bool do_create_role_log_notify::has_mobile() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void do_create_role_log_notify::set_has_mobile() {
  _has_bits_[0] |= 0x00000004u;
}
inline void do_create_role_log_notify::clear_has_mobile() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void do_create_role_log_notify::clear_mobile() {
  if (mobile_ != NULL) mobile_->::proto::common::mobile_info::Clear();
  clear_has_mobile();
}
inline const ::proto::common::mobile_info& do_create_role_log_notify::mobile() const {
  return mobile_ != NULL ? *mobile_ : *default_instance_->mobile_;
}
inline ::proto::common::mobile_info* do_create_role_log_notify::mutable_mobile() {
  set_has_mobile();
  if (mobile_ == NULL) mobile_ = new ::proto::common::mobile_info;
  return mobile_;
}
inline ::proto::common::mobile_info* do_create_role_log_notify::release_mobile() {
  clear_has_mobile();
  ::proto::common::mobile_info* temp = mobile_;
  mobile_ = NULL;
  return temp;
}
inline void do_create_role_log_notify::set_allocated_mobile(::proto::common::mobile_info* mobile) {
  delete mobile_;
  mobile_ = mobile;
  if (mobile) {
    set_has_mobile();
  } else {
    clear_has_mobile();
  }
}

// required uint32 log_time = 4;
inline bool do_create_role_log_notify::has_log_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void do_create_role_log_notify::set_has_log_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void do_create_role_log_notify::clear_has_log_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void do_create_role_log_notify::clear_log_time() {
  log_time_ = 0u;
  clear_has_log_time();
}
inline ::google::protobuf::uint32 do_create_role_log_notify::log_time() const {
  return log_time_;
}
inline void do_create_role_log_notify::set_log_time(::google::protobuf::uint32 value) {
  set_has_log_time();
  log_time_ = value;
}

// -------------------------------------------------------------------

// go_role_login_log_notify

// required uint64 role_uid = 1;
inline bool go_role_login_log_notify::has_role_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void go_role_login_log_notify::set_has_role_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void go_role_login_log_notify::clear_has_role_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void go_role_login_log_notify::clear_role_uid() {
  role_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_role_uid();
}
inline ::google::protobuf::uint64 go_role_login_log_notify::role_uid() const {
  return role_uid_;
}
inline void go_role_login_log_notify::set_role_uid(::google::protobuf::uint64 value) {
  set_has_role_uid();
  role_uid_ = value;
}

// required uint32 gate_id = 2;
inline bool go_role_login_log_notify::has_gate_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void go_role_login_log_notify::set_has_gate_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void go_role_login_log_notify::clear_has_gate_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void go_role_login_log_notify::clear_gate_id() {
  gate_id_ = 0u;
  clear_has_gate_id();
}
inline ::google::protobuf::uint32 go_role_login_log_notify::gate_id() const {
  return gate_id_;
}
inline void go_role_login_log_notify::set_gate_id(::google::protobuf::uint32 value) {
  set_has_gate_id();
  gate_id_ = value;
}

// required uint32 game_id = 3;
inline bool go_role_login_log_notify::has_game_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void go_role_login_log_notify::set_has_game_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void go_role_login_log_notify::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void go_role_login_log_notify::clear_game_id() {
  game_id_ = 0u;
  clear_has_game_id();
}
inline ::google::protobuf::uint32 go_role_login_log_notify::game_id() const {
  return game_id_;
}
inline void go_role_login_log_notify::set_game_id(::google::protobuf::uint32 value) {
  set_has_game_id();
  game_id_ = value;
}

// optional .proto.common.mobile_info mobile = 4;
inline bool go_role_login_log_notify::has_mobile() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void go_role_login_log_notify::set_has_mobile() {
  _has_bits_[0] |= 0x00000008u;
}
inline void go_role_login_log_notify::clear_has_mobile() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void go_role_login_log_notify::clear_mobile() {
  if (mobile_ != NULL) mobile_->::proto::common::mobile_info::Clear();
  clear_has_mobile();
}
inline const ::proto::common::mobile_info& go_role_login_log_notify::mobile() const {
  return mobile_ != NULL ? *mobile_ : *default_instance_->mobile_;
}
inline ::proto::common::mobile_info* go_role_login_log_notify::mutable_mobile() {
  set_has_mobile();
  if (mobile_ == NULL) mobile_ = new ::proto::common::mobile_info;
  return mobile_;
}
inline ::proto::common::mobile_info* go_role_login_log_notify::release_mobile() {
  clear_has_mobile();
  ::proto::common::mobile_info* temp = mobile_;
  mobile_ = NULL;
  return temp;
}
inline void go_role_login_log_notify::set_allocated_mobile(::proto::common::mobile_info* mobile) {
  delete mobile_;
  mobile_ = mobile;
  if (mobile) {
    set_has_mobile();
  } else {
    clear_has_mobile();
  }
}

// required uint32 log_time = 5;
inline bool go_role_login_log_notify::has_log_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void go_role_login_log_notify::set_has_log_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void go_role_login_log_notify::clear_has_log_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void go_role_login_log_notify::clear_log_time() {
  log_time_ = 0u;
  clear_has_log_time();
}
inline ::google::protobuf::uint32 go_role_login_log_notify::log_time() const {
  return log_time_;
}
inline void go_role_login_log_notify::set_log_time(::google::protobuf::uint32 value) {
  set_has_log_time();
  log_time_ = value;
}

// -------------------------------------------------------------------

// go_role_logout_log_notify

// required uint64 role_uid = 1;
inline bool go_role_logout_log_notify::has_role_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void go_role_logout_log_notify::set_has_role_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void go_role_logout_log_notify::clear_has_role_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void go_role_logout_log_notify::clear_role_uid() {
  role_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_role_uid();
}
inline ::google::protobuf::uint64 go_role_logout_log_notify::role_uid() const {
  return role_uid_;
}
inline void go_role_logout_log_notify::set_role_uid(::google::protobuf::uint64 value) {
  set_has_role_uid();
  role_uid_ = value;
}

// required uint32 online_time = 2;
inline bool go_role_logout_log_notify::has_online_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void go_role_logout_log_notify::set_has_online_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void go_role_logout_log_notify::clear_has_online_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void go_role_logout_log_notify::clear_online_time() {
  online_time_ = 0u;
  clear_has_online_time();
}
inline ::google::protobuf::uint32 go_role_logout_log_notify::online_time() const {
  return online_time_;
}
inline void go_role_logout_log_notify::set_online_time(::google::protobuf::uint32 value) {
  set_has_online_time();
  online_time_ = value;
}

// required uint32 gate_id = 3;
inline bool go_role_logout_log_notify::has_gate_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void go_role_logout_log_notify::set_has_gate_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void go_role_logout_log_notify::clear_has_gate_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void go_role_logout_log_notify::clear_gate_id() {
  gate_id_ = 0u;
  clear_has_gate_id();
}
inline ::google::protobuf::uint32 go_role_logout_log_notify::gate_id() const {
  return gate_id_;
}
inline void go_role_logout_log_notify::set_gate_id(::google::protobuf::uint32 value) {
  set_has_gate_id();
  gate_id_ = value;
}

// required uint32 game_id = 4;
inline bool go_role_logout_log_notify::has_game_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void go_role_logout_log_notify::set_has_game_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void go_role_logout_log_notify::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void go_role_logout_log_notify::clear_game_id() {
  game_id_ = 0u;
  clear_has_game_id();
}
inline ::google::protobuf::uint32 go_role_logout_log_notify::game_id() const {
  return game_id_;
}
inline void go_role_logout_log_notify::set_game_id(::google::protobuf::uint32 value) {
  set_has_game_id();
  game_id_ = value;
}

// required uint32 kick_reason = 5;
inline bool go_role_logout_log_notify::has_kick_reason() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void go_role_logout_log_notify::set_has_kick_reason() {
  _has_bits_[0] |= 0x00000010u;
}
inline void go_role_logout_log_notify::clear_has_kick_reason() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void go_role_logout_log_notify::clear_kick_reason() {
  kick_reason_ = 0u;
  clear_has_kick_reason();
}
inline ::google::protobuf::uint32 go_role_logout_log_notify::kick_reason() const {
  return kick_reason_;
}
inline void go_role_logout_log_notify::set_kick_reason(::google::protobuf::uint32 value) {
  set_has_kick_reason();
  kick_reason_ = value;
}

// optional .proto.common.mobile_info mobile = 6;
inline bool go_role_logout_log_notify::has_mobile() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void go_role_logout_log_notify::set_has_mobile() {
  _has_bits_[0] |= 0x00000020u;
}
inline void go_role_logout_log_notify::clear_has_mobile() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void go_role_logout_log_notify::clear_mobile() {
  if (mobile_ != NULL) mobile_->::proto::common::mobile_info::Clear();
  clear_has_mobile();
}
inline const ::proto::common::mobile_info& go_role_logout_log_notify::mobile() const {
  return mobile_ != NULL ? *mobile_ : *default_instance_->mobile_;
}
inline ::proto::common::mobile_info* go_role_logout_log_notify::mutable_mobile() {
  set_has_mobile();
  if (mobile_ == NULL) mobile_ = new ::proto::common::mobile_info;
  return mobile_;
}
inline ::proto::common::mobile_info* go_role_logout_log_notify::release_mobile() {
  clear_has_mobile();
  ::proto::common::mobile_info* temp = mobile_;
  mobile_ = NULL;
  return temp;
}
inline void go_role_logout_log_notify::set_allocated_mobile(::proto::common::mobile_info* mobile) {
  delete mobile_;
  mobile_ = mobile;
  if (mobile) {
    set_has_mobile();
  } else {
    clear_has_mobile();
  }
}

// required uint32 log_time = 7;
inline bool go_role_logout_log_notify::has_log_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void go_role_logout_log_notify::set_has_log_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void go_role_logout_log_notify::clear_has_log_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void go_role_logout_log_notify::clear_log_time() {
  log_time_ = 0u;
  clear_has_log_time();
}
inline ::google::protobuf::uint32 go_role_logout_log_notify::log_time() const {
  return log_time_;
}
inline void go_role_logout_log_notify::set_log_time(::google::protobuf::uint32 value) {
  set_has_log_time();
  log_time_ = value;
}

// -------------------------------------------------------------------

// go_item_log_notify

// required uint64 role_uid = 1;
inline bool go_item_log_notify::has_role_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void go_item_log_notify::set_has_role_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void go_item_log_notify::clear_has_role_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void go_item_log_notify::clear_role_uid() {
  role_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_role_uid();
}
inline ::google::protobuf::uint64 go_item_log_notify::role_uid() const {
  return role_uid_;
}
inline void go_item_log_notify::set_role_uid(::google::protobuf::uint64 value) {
  set_has_role_uid();
  role_uid_ = value;
}

// required uint32 role_level = 2;
inline bool go_item_log_notify::has_role_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void go_item_log_notify::set_has_role_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void go_item_log_notify::clear_has_role_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void go_item_log_notify::clear_role_level() {
  role_level_ = 0u;
  clear_has_role_level();
}
inline ::google::protobuf::uint32 go_item_log_notify::role_level() const {
  return role_level_;
}
inline void go_item_log_notify::set_role_level(::google::protobuf::uint32 value) {
  set_has_role_level();
  role_level_ = value;
}

// required uint64 item_uid = 3;
inline bool go_item_log_notify::has_item_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void go_item_log_notify::set_has_item_uid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void go_item_log_notify::clear_has_item_uid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void go_item_log_notify::clear_item_uid() {
  item_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_item_uid();
}
inline ::google::protobuf::uint64 go_item_log_notify::item_uid() const {
  return item_uid_;
}
inline void go_item_log_notify::set_item_uid(::google::protobuf::uint64 value) {
  set_has_item_uid();
  item_uid_ = value;
}

// required uint32 item_tid = 4;
inline bool go_item_log_notify::has_item_tid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void go_item_log_notify::set_has_item_tid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void go_item_log_notify::clear_has_item_tid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void go_item_log_notify::clear_item_tid() {
  item_tid_ = 0u;
  clear_has_item_tid();
}
inline ::google::protobuf::uint32 go_item_log_notify::item_tid() const {
  return item_tid_;
}
inline void go_item_log_notify::set_item_tid(::google::protobuf::uint32 value) {
  set_has_item_tid();
  item_tid_ = value;
}

// optional uint32 old_num = 5;
inline bool go_item_log_notify::has_old_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void go_item_log_notify::set_has_old_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void go_item_log_notify::clear_has_old_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void go_item_log_notify::clear_old_num() {
  old_num_ = 0u;
  clear_has_old_num();
}
inline ::google::protobuf::uint32 go_item_log_notify::old_num() const {
  return old_num_;
}
inline void go_item_log_notify::set_old_num(::google::protobuf::uint32 value) {
  set_has_old_num();
  old_num_ = value;
}

// optional uint32 up_num = 6;
inline bool go_item_log_notify::has_up_num() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void go_item_log_notify::set_has_up_num() {
  _has_bits_[0] |= 0x00000020u;
}
inline void go_item_log_notify::clear_has_up_num() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void go_item_log_notify::clear_up_num() {
  up_num_ = 0u;
  clear_has_up_num();
}
inline ::google::protobuf::uint32 go_item_log_notify::up_num() const {
  return up_num_;
}
inline void go_item_log_notify::set_up_num(::google::protobuf::uint32 value) {
  set_has_up_num();
  up_num_ = value;
}

// optional uint32 new_num = 7;
inline bool go_item_log_notify::has_new_num() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void go_item_log_notify::set_has_new_num() {
  _has_bits_[0] |= 0x00000040u;
}
inline void go_item_log_notify::clear_has_new_num() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void go_item_log_notify::clear_new_num() {
  new_num_ = 0u;
  clear_has_new_num();
}
inline ::google::protobuf::uint32 go_item_log_notify::new_num() const {
  return new_num_;
}
inline void go_item_log_notify::set_new_num(::google::protobuf::uint32 value) {
  set_has_new_num();
  new_num_ = value;
}

// required uint32 op_type = 8;
inline bool go_item_log_notify::has_op_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void go_item_log_notify::set_has_op_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void go_item_log_notify::clear_has_op_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void go_item_log_notify::clear_op_type() {
  op_type_ = 0u;
  clear_has_op_type();
}
inline ::google::protobuf::uint32 go_item_log_notify::op_type() const {
  return op_type_;
}
inline void go_item_log_notify::set_op_type(::google::protobuf::uint32 value) {
  set_has_op_type();
  op_type_ = value;
}

// required uint32 source_type = 9;
inline bool go_item_log_notify::has_source_type() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void go_item_log_notify::set_has_source_type() {
  _has_bits_[0] |= 0x00000100u;
}
inline void go_item_log_notify::clear_has_source_type() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void go_item_log_notify::clear_source_type() {
  source_type_ = 0u;
  clear_has_source_type();
}
inline ::google::protobuf::uint32 go_item_log_notify::source_type() const {
  return source_type_;
}
inline void go_item_log_notify::set_source_type(::google::protobuf::uint32 value) {
  set_has_source_type();
  source_type_ = value;
}

// optional uint32 source_param = 10;
inline bool go_item_log_notify::has_source_param() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void go_item_log_notify::set_has_source_param() {
  _has_bits_[0] |= 0x00000200u;
}
inline void go_item_log_notify::clear_has_source_param() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void go_item_log_notify::clear_source_param() {
  source_param_ = 0u;
  clear_has_source_param();
}
inline ::google::protobuf::uint32 go_item_log_notify::source_param() const {
  return source_param_;
}
inline void go_item_log_notify::set_source_param(::google::protobuf::uint32 value) {
  set_has_source_param();
  source_param_ = value;
}

// required uint32 log_time = 11;
inline bool go_item_log_notify::has_log_time() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void go_item_log_notify::set_has_log_time() {
  _has_bits_[0] |= 0x00000400u;
}
inline void go_item_log_notify::clear_has_log_time() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void go_item_log_notify::clear_log_time() {
  log_time_ = 0u;
  clear_has_log_time();
}
inline ::google::protobuf::uint32 go_item_log_notify::log_time() const {
  return log_time_;
}
inline void go_item_log_notify::set_log_time(::google::protobuf::uint32 value) {
  set_has_log_time();
  log_time_ = value;
}

// -------------------------------------------------------------------

// go_money_log_notify

// required uint64 role_uid = 1;
inline bool go_money_log_notify::has_role_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void go_money_log_notify::set_has_role_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void go_money_log_notify::clear_has_role_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void go_money_log_notify::clear_role_uid() {
  role_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_role_uid();
}
inline ::google::protobuf::uint64 go_money_log_notify::role_uid() const {
  return role_uid_;
}
inline void go_money_log_notify::set_role_uid(::google::protobuf::uint64 value) {
  set_has_role_uid();
  role_uid_ = value;
}

// required uint32 role_level = 2;
inline bool go_money_log_notify::has_role_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void go_money_log_notify::set_has_role_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void go_money_log_notify::clear_has_role_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void go_money_log_notify::clear_role_level() {
  role_level_ = 0u;
  clear_has_role_level();
}
inline ::google::protobuf::uint32 go_money_log_notify::role_level() const {
  return role_level_;
}
inline void go_money_log_notify::set_role_level(::google::protobuf::uint32 value) {
  set_has_role_level();
  role_level_ = value;
}

// optional uint32 old_num = 3;
inline bool go_money_log_notify::has_old_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void go_money_log_notify::set_has_old_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void go_money_log_notify::clear_has_old_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void go_money_log_notify::clear_old_num() {
  old_num_ = 0u;
  clear_has_old_num();
}
inline ::google::protobuf::uint32 go_money_log_notify::old_num() const {
  return old_num_;
}
inline void go_money_log_notify::set_old_num(::google::protobuf::uint32 value) {
  set_has_old_num();
  old_num_ = value;
}

// optional uint32 up_num = 4;
inline bool go_money_log_notify::has_up_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void go_money_log_notify::set_has_up_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void go_money_log_notify::clear_has_up_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void go_money_log_notify::clear_up_num() {
  up_num_ = 0u;
  clear_has_up_num();
}
inline ::google::protobuf::uint32 go_money_log_notify::up_num() const {
  return up_num_;
}
inline void go_money_log_notify::set_up_num(::google::protobuf::uint32 value) {
  set_has_up_num();
  up_num_ = value;
}

// optional uint32 new_num = 5;
inline bool go_money_log_notify::has_new_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void go_money_log_notify::set_has_new_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void go_money_log_notify::clear_has_new_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void go_money_log_notify::clear_new_num() {
  new_num_ = 0u;
  clear_has_new_num();
}
inline ::google::protobuf::uint32 go_money_log_notify::new_num() const {
  return new_num_;
}
inline void go_money_log_notify::set_new_num(::google::protobuf::uint32 value) {
  set_has_new_num();
  new_num_ = value;
}

// required uint32 money_type = 6;
inline bool go_money_log_notify::has_money_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void go_money_log_notify::set_has_money_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void go_money_log_notify::clear_has_money_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void go_money_log_notify::clear_money_type() {
  money_type_ = 0u;
  clear_has_money_type();
}
inline ::google::protobuf::uint32 go_money_log_notify::money_type() const {
  return money_type_;
}
inline void go_money_log_notify::set_money_type(::google::protobuf::uint32 value) {
  set_has_money_type();
  money_type_ = value;
}

// optional uint32 op_type = 7;
inline bool go_money_log_notify::has_op_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void go_money_log_notify::set_has_op_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void go_money_log_notify::clear_has_op_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void go_money_log_notify::clear_op_type() {
  op_type_ = 0u;
  clear_has_op_type();
}
inline ::google::protobuf::uint32 go_money_log_notify::op_type() const {
  return op_type_;
}
inline void go_money_log_notify::set_op_type(::google::protobuf::uint32 value) {
  set_has_op_type();
  op_type_ = value;
}

// required uint32 source_type = 8;
inline bool go_money_log_notify::has_source_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void go_money_log_notify::set_has_source_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void go_money_log_notify::clear_has_source_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void go_money_log_notify::clear_source_type() {
  source_type_ = 0u;
  clear_has_source_type();
}
inline ::google::protobuf::uint32 go_money_log_notify::source_type() const {
  return source_type_;
}
inline void go_money_log_notify::set_source_type(::google::protobuf::uint32 value) {
  set_has_source_type();
  source_type_ = value;
}

// optional uint32 source_param = 9;
inline bool go_money_log_notify::has_source_param() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void go_money_log_notify::set_has_source_param() {
  _has_bits_[0] |= 0x00000100u;
}
inline void go_money_log_notify::clear_has_source_param() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void go_money_log_notify::clear_source_param() {
  source_param_ = 0u;
  clear_has_source_param();
}
inline ::google::protobuf::uint32 go_money_log_notify::source_param() const {
  return source_param_;
}
inline void go_money_log_notify::set_source_param(::google::protobuf::uint32 value) {
  set_has_source_param();
  source_param_ = value;
}

// required uint32 log_time = 10;
inline bool go_money_log_notify::has_log_time() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void go_money_log_notify::set_has_log_time() {
  _has_bits_[0] |= 0x00000200u;
}
inline void go_money_log_notify::clear_has_log_time() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void go_money_log_notify::clear_log_time() {
  log_time_ = 0u;
  clear_has_log_time();
}
inline ::google::protobuf::uint32 go_money_log_notify::log_time() const {
  return log_time_;
}
inline void go_money_log_notify::set_log_time(::google::protobuf::uint32 value) {
  set_has_log_time();
  log_time_ = value;
}

// -------------------------------------------------------------------

// go_luck_gift_log_notify

// required uint64 src_role_uid = 1;
inline bool go_luck_gift_log_notify::has_src_role_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void go_luck_gift_log_notify::set_has_src_role_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void go_luck_gift_log_notify::clear_has_src_role_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void go_luck_gift_log_notify::clear_src_role_uid() {
  src_role_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_src_role_uid();
}
inline ::google::protobuf::uint64 go_luck_gift_log_notify::src_role_uid() const {
  return src_role_uid_;
}
inline void go_luck_gift_log_notify::set_src_role_uid(::google::protobuf::uint64 value) {
  set_has_src_role_uid();
  src_role_uid_ = value;
}

// optional uint64 grab_role_uid = 2;
inline bool go_luck_gift_log_notify::has_grab_role_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void go_luck_gift_log_notify::set_has_grab_role_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void go_luck_gift_log_notify::clear_has_grab_role_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void go_luck_gift_log_notify::clear_grab_role_uid() {
  grab_role_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_grab_role_uid();
}
inline ::google::protobuf::uint64 go_luck_gift_log_notify::grab_role_uid() const {
  return grab_role_uid_;
}
inline void go_luck_gift_log_notify::set_grab_role_uid(::google::protobuf::uint64 value) {
  set_has_grab_role_uid();
  grab_role_uid_ = value;
}

// required uint64 luck_gift_uid = 3;
inline bool go_luck_gift_log_notify::has_luck_gift_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void go_luck_gift_log_notify::set_has_luck_gift_uid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void go_luck_gift_log_notify::clear_has_luck_gift_uid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void go_luck_gift_log_notify::clear_luck_gift_uid() {
  luck_gift_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_luck_gift_uid();
}
inline ::google::protobuf::uint64 go_luck_gift_log_notify::luck_gift_uid() const {
  return luck_gift_uid_;
}
inline void go_luck_gift_log_notify::set_luck_gift_uid(::google::protobuf::uint64 value) {
  set_has_luck_gift_uid();
  luck_gift_uid_ = value;
}

// optional uint32 old_num = 4;
inline bool go_luck_gift_log_notify::has_old_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void go_luck_gift_log_notify::set_has_old_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void go_luck_gift_log_notify::clear_has_old_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void go_luck_gift_log_notify::clear_old_num() {
  old_num_ = 0u;
  clear_has_old_num();
}
inline ::google::protobuf::uint32 go_luck_gift_log_notify::old_num() const {
  return old_num_;
}
inline void go_luck_gift_log_notify::set_old_num(::google::protobuf::uint32 value) {
  set_has_old_num();
  old_num_ = value;
}

// optional uint32 up_num = 5;
inline bool go_luck_gift_log_notify::has_up_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void go_luck_gift_log_notify::set_has_up_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void go_luck_gift_log_notify::clear_has_up_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void go_luck_gift_log_notify::clear_up_num() {
  up_num_ = 0u;
  clear_has_up_num();
}
inline ::google::protobuf::uint32 go_luck_gift_log_notify::up_num() const {
  return up_num_;
}
inline void go_luck_gift_log_notify::set_up_num(::google::protobuf::uint32 value) {
  set_has_up_num();
  up_num_ = value;
}

// optional uint32 new_num = 6;
inline bool go_luck_gift_log_notify::has_new_num() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void go_luck_gift_log_notify::set_has_new_num() {
  _has_bits_[0] |= 0x00000020u;
}
inline void go_luck_gift_log_notify::clear_has_new_num() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void go_luck_gift_log_notify::clear_new_num() {
  new_num_ = 0u;
  clear_has_new_num();
}
inline ::google::protobuf::uint32 go_luck_gift_log_notify::new_num() const {
  return new_num_;
}
inline void go_luck_gift_log_notify::set_new_num(::google::protobuf::uint32 value) {
  set_has_new_num();
  new_num_ = value;
}

// required uint32 log_time = 7;
inline bool go_luck_gift_log_notify::has_log_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void go_luck_gift_log_notify::set_has_log_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void go_luck_gift_log_notify::clear_has_log_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void go_luck_gift_log_notify::clear_log_time() {
  log_time_ = 0u;
  clear_has_log_time();
}
inline ::google::protobuf::uint32 go_luck_gift_log_notify::log_time() const {
  return log_time_;
}
inline void go_luck_gift_log_notify::set_log_time(::google::protobuf::uint32 value) {
  set_has_log_time();
  log_time_ = value;
}

// -------------------------------------------------------------------

// go_hero_log_notify

// required uint64 role_uid = 1;
inline bool go_hero_log_notify::has_role_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void go_hero_log_notify::set_has_role_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void go_hero_log_notify::clear_has_role_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void go_hero_log_notify::clear_role_uid() {
  role_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_role_uid();
}
inline ::google::protobuf::uint64 go_hero_log_notify::role_uid() const {
  return role_uid_;
}
inline void go_hero_log_notify::set_role_uid(::google::protobuf::uint64 value) {
  set_has_role_uid();
  role_uid_ = value;
}

// required uint32 role_level = 2;
inline bool go_hero_log_notify::has_role_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void go_hero_log_notify::set_has_role_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void go_hero_log_notify::clear_has_role_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void go_hero_log_notify::clear_role_level() {
  role_level_ = 0u;
  clear_has_role_level();
}
inline ::google::protobuf::uint32 go_hero_log_notify::role_level() const {
  return role_level_;
}
inline void go_hero_log_notify::set_role_level(::google::protobuf::uint32 value) {
  set_has_role_level();
  role_level_ = value;
}

// required uint64 hero_uid = 3;
inline bool go_hero_log_notify::has_hero_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void go_hero_log_notify::set_has_hero_uid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void go_hero_log_notify::clear_has_hero_uid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void go_hero_log_notify::clear_hero_uid() {
  hero_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_hero_uid();
}
inline ::google::protobuf::uint64 go_hero_log_notify::hero_uid() const {
  return hero_uid_;
}
inline void go_hero_log_notify::set_hero_uid(::google::protobuf::uint64 value) {
  set_has_hero_uid();
  hero_uid_ = value;
}

// required uint32 hero_tid = 4;
inline bool go_hero_log_notify::has_hero_tid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void go_hero_log_notify::set_has_hero_tid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void go_hero_log_notify::clear_has_hero_tid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void go_hero_log_notify::clear_hero_tid() {
  hero_tid_ = 0u;
  clear_has_hero_tid();
}
inline ::google::protobuf::uint32 go_hero_log_notify::hero_tid() const {
  return hero_tid_;
}
inline void go_hero_log_notify::set_hero_tid(::google::protobuf::uint32 value) {
  set_has_hero_tid();
  hero_tid_ = value;
}

// required uint32 op_type = 5;
inline bool go_hero_log_notify::has_op_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void go_hero_log_notify::set_has_op_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void go_hero_log_notify::clear_has_op_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void go_hero_log_notify::clear_op_type() {
  op_type_ = 0u;
  clear_has_op_type();
}
inline ::google::protobuf::uint32 go_hero_log_notify::op_type() const {
  return op_type_;
}
inline void go_hero_log_notify::set_op_type(::google::protobuf::uint32 value) {
  set_has_op_type();
  op_type_ = value;
}

// required uint32 source_type = 6;
inline bool go_hero_log_notify::has_source_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void go_hero_log_notify::set_has_source_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void go_hero_log_notify::clear_has_source_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void go_hero_log_notify::clear_source_type() {
  source_type_ = 0u;
  clear_has_source_type();
}
inline ::google::protobuf::uint32 go_hero_log_notify::source_type() const {
  return source_type_;
}
inline void go_hero_log_notify::set_source_type(::google::protobuf::uint32 value) {
  set_has_source_type();
  source_type_ = value;
}

// required uint32 log_time = 7;
inline bool go_hero_log_notify::has_log_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void go_hero_log_notify::set_has_log_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void go_hero_log_notify::clear_has_log_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void go_hero_log_notify::clear_log_time() {
  log_time_ = 0u;
  clear_has_log_time();
}
inline ::google::protobuf::uint32 go_hero_log_notify::log_time() const {
  return log_time_;
}
inline void go_hero_log_notify::set_log_time(::google::protobuf::uint32 value) {
  set_has_log_time();
  log_time_ = value;
}

// optional uint32 old_num = 8;
inline bool go_hero_log_notify::has_old_num() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void go_hero_log_notify::set_has_old_num() {
  _has_bits_[0] |= 0x00000080u;
}
inline void go_hero_log_notify::clear_has_old_num() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void go_hero_log_notify::clear_old_num() {
  old_num_ = 0u;
  clear_has_old_num();
}
inline ::google::protobuf::uint32 go_hero_log_notify::old_num() const {
  return old_num_;
}
inline void go_hero_log_notify::set_old_num(::google::protobuf::uint32 value) {
  set_has_old_num();
  old_num_ = value;
}

// optional uint32 up_num = 9;
inline bool go_hero_log_notify::has_up_num() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void go_hero_log_notify::set_has_up_num() {
  _has_bits_[0] |= 0x00000100u;
}
inline void go_hero_log_notify::clear_has_up_num() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void go_hero_log_notify::clear_up_num() {
  up_num_ = 0u;
  clear_has_up_num();
}
inline ::google::protobuf::uint32 go_hero_log_notify::up_num() const {
  return up_num_;
}
inline void go_hero_log_notify::set_up_num(::google::protobuf::uint32 value) {
  set_has_up_num();
  up_num_ = value;
}

// optional uint32 new_num = 10;
inline bool go_hero_log_notify::has_new_num() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void go_hero_log_notify::set_has_new_num() {
  _has_bits_[0] |= 0x00000200u;
}
inline void go_hero_log_notify::clear_has_new_num() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void go_hero_log_notify::clear_new_num() {
  new_num_ = 0u;
  clear_has_new_num();
}
inline ::google::protobuf::uint32 go_hero_log_notify::new_num() const {
  return new_num_;
}
inline void go_hero_log_notify::set_new_num(::google::protobuf::uint32 value) {
  set_has_new_num();
  new_num_ = value;
}

// optional uint32 source_param = 11;
inline bool go_hero_log_notify::has_source_param() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void go_hero_log_notify::set_has_source_param() {
  _has_bits_[0] |= 0x00000400u;
}
inline void go_hero_log_notify::clear_has_source_param() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void go_hero_log_notify::clear_source_param() {
  source_param_ = 0u;
  clear_has_source_param();
}
inline ::google::protobuf::uint32 go_hero_log_notify::source_param() const {
  return source_param_;
}
inline void go_hero_log_notify::set_source_param(::google::protobuf::uint32 value) {
  set_has_source_param();
  source_param_ = value;
}

// -------------------------------------------------------------------

// go_task_log_notify

// required uint64 role_uid = 1;
inline bool go_task_log_notify::has_role_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void go_task_log_notify::set_has_role_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void go_task_log_notify::clear_has_role_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void go_task_log_notify::clear_role_uid() {
  role_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_role_uid();
}
inline ::google::protobuf::uint64 go_task_log_notify::role_uid() const {
  return role_uid_;
}
inline void go_task_log_notify::set_role_uid(::google::protobuf::uint64 value) {
  set_has_role_uid();
  role_uid_ = value;
}

// required uint32 task_id = 2;
inline bool go_task_log_notify::has_task_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void go_task_log_notify::set_has_task_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void go_task_log_notify::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void go_task_log_notify::clear_task_id() {
  task_id_ = 0u;
  clear_has_task_id();
}
inline ::google::protobuf::uint32 go_task_log_notify::task_id() const {
  return task_id_;
}
inline void go_task_log_notify::set_task_id(::google::protobuf::uint32 value) {
  set_has_task_id();
  task_id_ = value;
}

// required uint32 task_state = 3;
inline bool go_task_log_notify::has_task_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void go_task_log_notify::set_has_task_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void go_task_log_notify::clear_has_task_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void go_task_log_notify::clear_task_state() {
  task_state_ = 0u;
  clear_has_task_state();
}
inline ::google::protobuf::uint32 go_task_log_notify::task_state() const {
  return task_state_;
}
inline void go_task_log_notify::set_task_state(::google::protobuf::uint32 value) {
  set_has_task_state();
  task_state_ = value;
}

// required string task_progress = 4;
inline bool go_task_log_notify::has_task_progress() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void go_task_log_notify::set_has_task_progress() {
  _has_bits_[0] |= 0x00000008u;
}
inline void go_task_log_notify::clear_has_task_progress() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void go_task_log_notify::clear_task_progress() {
  if (task_progress_ != &::google::protobuf::internal::kEmptyString) {
    task_progress_->clear();
  }
  clear_has_task_progress();
}
inline const ::std::string& go_task_log_notify::task_progress() const {
  return *task_progress_;
}
inline void go_task_log_notify::set_task_progress(const ::std::string& value) {
  set_has_task_progress();
  if (task_progress_ == &::google::protobuf::internal::kEmptyString) {
    task_progress_ = new ::std::string;
  }
  task_progress_->assign(value);
}
inline void go_task_log_notify::set_task_progress(const char* value) {
  set_has_task_progress();
  if (task_progress_ == &::google::protobuf::internal::kEmptyString) {
    task_progress_ = new ::std::string;
  }
  task_progress_->assign(value);
}
inline void go_task_log_notify::set_task_progress(const char* value, size_t size) {
  set_has_task_progress();
  if (task_progress_ == &::google::protobuf::internal::kEmptyString) {
    task_progress_ = new ::std::string;
  }
  task_progress_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* go_task_log_notify::mutable_task_progress() {
  set_has_task_progress();
  if (task_progress_ == &::google::protobuf::internal::kEmptyString) {
    task_progress_ = new ::std::string;
  }
  return task_progress_;
}
inline ::std::string* go_task_log_notify::release_task_progress() {
  clear_has_task_progress();
  if (task_progress_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = task_progress_;
    task_progress_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void go_task_log_notify::set_allocated_task_progress(::std::string* task_progress) {
  if (task_progress_ != &::google::protobuf::internal::kEmptyString) {
    delete task_progress_;
  }
  if (task_progress) {
    set_has_task_progress();
    task_progress_ = task_progress;
  } else {
    clear_has_task_progress();
    task_progress_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 accept_time = 5;
inline bool go_task_log_notify::has_accept_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void go_task_log_notify::set_has_accept_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void go_task_log_notify::clear_has_accept_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void go_task_log_notify::clear_accept_time() {
  accept_time_ = 0u;
  clear_has_accept_time();
}
inline ::google::protobuf::uint32 go_task_log_notify::accept_time() const {
  return accept_time_;
}
inline void go_task_log_notify::set_accept_time(::google::protobuf::uint32 value) {
  set_has_accept_time();
  accept_time_ = value;
}

// required uint32 op_type = 6;
inline bool go_task_log_notify::has_op_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void go_task_log_notify::set_has_op_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void go_task_log_notify::clear_has_op_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void go_task_log_notify::clear_op_type() {
  op_type_ = 0u;
  clear_has_op_type();
}
inline ::google::protobuf::uint32 go_task_log_notify::op_type() const {
  return op_type_;
}
inline void go_task_log_notify::set_op_type(::google::protobuf::uint32 value) {
  set_has_op_type();
  op_type_ = value;
}

// required uint32 log_time = 7;
inline bool go_task_log_notify::has_log_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void go_task_log_notify::set_has_log_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void go_task_log_notify::clear_has_log_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void go_task_log_notify::clear_log_time() {
  log_time_ = 0u;
  clear_has_log_time();
}
inline ::google::protobuf::uint32 go_task_log_notify::log_time() const {
  return log_time_;
}
inline void go_task_log_notify::set_log_time(::google::protobuf::uint32 value) {
  set_has_log_time();
  log_time_ = value;
}

// required uint32 task_type = 8;
inline bool go_task_log_notify::has_task_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void go_task_log_notify::set_has_task_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void go_task_log_notify::clear_has_task_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void go_task_log_notify::clear_task_type() {
  task_type_ = 0u;
  clear_has_task_type();
}
inline ::google::protobuf::uint32 go_task_log_notify::task_type() const {
  return task_type_;
}
inline void go_task_log_notify::set_task_type(::google::protobuf::uint32 value) {
  set_has_task_type();
  task_type_ = value;
}

// -------------------------------------------------------------------

// go_exp_log_notify

// required uint64 role_uid = 1;
inline bool go_exp_log_notify::has_role_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void go_exp_log_notify::set_has_role_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void go_exp_log_notify::clear_has_role_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void go_exp_log_notify::clear_role_uid() {
  role_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_role_uid();
}
inline ::google::protobuf::uint64 go_exp_log_notify::role_uid() const {
  return role_uid_;
}
inline void go_exp_log_notify::set_role_uid(::google::protobuf::uint64 value) {
  set_has_role_uid();
  role_uid_ = value;
}

// required uint32 old_level = 2;
inline bool go_exp_log_notify::has_old_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void go_exp_log_notify::set_has_old_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void go_exp_log_notify::clear_has_old_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void go_exp_log_notify::clear_old_level() {
  old_level_ = 0u;
  clear_has_old_level();
}
inline ::google::protobuf::uint32 go_exp_log_notify::old_level() const {
  return old_level_;
}
inline void go_exp_log_notify::set_old_level(::google::protobuf::uint32 value) {
  set_has_old_level();
  old_level_ = value;
}

// required uint32 old_exp = 3;
inline bool go_exp_log_notify::has_old_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void go_exp_log_notify::set_has_old_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void go_exp_log_notify::clear_has_old_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void go_exp_log_notify::clear_old_exp() {
  old_exp_ = 0u;
  clear_has_old_exp();
}
inline ::google::protobuf::uint32 go_exp_log_notify::old_exp() const {
  return old_exp_;
}
inline void go_exp_log_notify::set_old_exp(::google::protobuf::uint32 value) {
  set_has_old_exp();
  old_exp_ = value;
}

// required uint32 up_exp = 4;
inline bool go_exp_log_notify::has_up_exp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void go_exp_log_notify::set_has_up_exp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void go_exp_log_notify::clear_has_up_exp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void go_exp_log_notify::clear_up_exp() {
  up_exp_ = 0u;
  clear_has_up_exp();
}
inline ::google::protobuf::uint32 go_exp_log_notify::up_exp() const {
  return up_exp_;
}
inline void go_exp_log_notify::set_up_exp(::google::protobuf::uint32 value) {
  set_has_up_exp();
  up_exp_ = value;
}

// required uint32 new_level = 5;
inline bool go_exp_log_notify::has_new_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void go_exp_log_notify::set_has_new_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void go_exp_log_notify::clear_has_new_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void go_exp_log_notify::clear_new_level() {
  new_level_ = 0u;
  clear_has_new_level();
}
inline ::google::protobuf::uint32 go_exp_log_notify::new_level() const {
  return new_level_;
}
inline void go_exp_log_notify::set_new_level(::google::protobuf::uint32 value) {
  set_has_new_level();
  new_level_ = value;
}

// required uint32 new_exp = 6;
inline bool go_exp_log_notify::has_new_exp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void go_exp_log_notify::set_has_new_exp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void go_exp_log_notify::clear_has_new_exp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void go_exp_log_notify::clear_new_exp() {
  new_exp_ = 0u;
  clear_has_new_exp();
}
inline ::google::protobuf::uint32 go_exp_log_notify::new_exp() const {
  return new_exp_;
}
inline void go_exp_log_notify::set_new_exp(::google::protobuf::uint32 value) {
  set_has_new_exp();
  new_exp_ = value;
}

// required uint32 source_type = 7;
inline bool go_exp_log_notify::has_source_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void go_exp_log_notify::set_has_source_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void go_exp_log_notify::clear_has_source_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void go_exp_log_notify::clear_source_type() {
  source_type_ = 0u;
  clear_has_source_type();
}
inline ::google::protobuf::uint32 go_exp_log_notify::source_type() const {
  return source_type_;
}
inline void go_exp_log_notify::set_source_type(::google::protobuf::uint32 value) {
  set_has_source_type();
  source_type_ = value;
}

// optional uint32 source_param = 8;
inline bool go_exp_log_notify::has_source_param() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void go_exp_log_notify::set_has_source_param() {
  _has_bits_[0] |= 0x00000080u;
}
inline void go_exp_log_notify::clear_has_source_param() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void go_exp_log_notify::clear_source_param() {
  source_param_ = 0u;
  clear_has_source_param();
}
inline ::google::protobuf::uint32 go_exp_log_notify::source_param() const {
  return source_param_;
}
inline void go_exp_log_notify::set_source_param(::google::protobuf::uint32 value) {
  set_has_source_param();
  source_param_ = value;
}

// required uint32 log_time = 9;
inline bool go_exp_log_notify::has_log_time() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void go_exp_log_notify::set_has_log_time() {
  _has_bits_[0] |= 0x00000100u;
}
inline void go_exp_log_notify::clear_has_log_time() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void go_exp_log_notify::clear_log_time() {
  log_time_ = 0u;
  clear_has_log_time();
}
inline ::google::protobuf::uint32 go_exp_log_notify::log_time() const {
  return log_time_;
}
inline void go_exp_log_notify::set_log_time(::google::protobuf::uint32 value) {
  set_has_log_time();
  log_time_ = value;
}

// -------------------------------------------------------------------

// go_prestige_log_notify

// required uint64 role_uid = 1;
inline bool go_prestige_log_notify::has_role_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void go_prestige_log_notify::set_has_role_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void go_prestige_log_notify::clear_has_role_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void go_prestige_log_notify::clear_role_uid() {
  role_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_role_uid();
}
inline ::google::protobuf::uint64 go_prestige_log_notify::role_uid() const {
  return role_uid_;
}
inline void go_prestige_log_notify::set_role_uid(::google::protobuf::uint64 value) {
  set_has_role_uid();
  role_uid_ = value;
}

// required uint32 role_level = 2;
inline bool go_prestige_log_notify::has_role_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void go_prestige_log_notify::set_has_role_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void go_prestige_log_notify::clear_has_role_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void go_prestige_log_notify::clear_role_level() {
  role_level_ = 0u;
  clear_has_role_level();
}
inline ::google::protobuf::uint32 go_prestige_log_notify::role_level() const {
  return role_level_;
}
inline void go_prestige_log_notify::set_role_level(::google::protobuf::uint32 value) {
  set_has_role_level();
  role_level_ = value;
}

// required uint32 old_prestige = 3;
inline bool go_prestige_log_notify::has_old_prestige() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void go_prestige_log_notify::set_has_old_prestige() {
  _has_bits_[0] |= 0x00000004u;
}
inline void go_prestige_log_notify::clear_has_old_prestige() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void go_prestige_log_notify::clear_old_prestige() {
  old_prestige_ = 0u;
  clear_has_old_prestige();
}
inline ::google::protobuf::uint32 go_prestige_log_notify::old_prestige() const {
  return old_prestige_;
}
inline void go_prestige_log_notify::set_old_prestige(::google::protobuf::uint32 value) {
  set_has_old_prestige();
  old_prestige_ = value;
}

// required uint32 old_prestige_total = 4;
inline bool go_prestige_log_notify::has_old_prestige_total() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void go_prestige_log_notify::set_has_old_prestige_total() {
  _has_bits_[0] |= 0x00000008u;
}
inline void go_prestige_log_notify::clear_has_old_prestige_total() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void go_prestige_log_notify::clear_old_prestige_total() {
  old_prestige_total_ = 0u;
  clear_has_old_prestige_total();
}
inline ::google::protobuf::uint32 go_prestige_log_notify::old_prestige_total() const {
  return old_prestige_total_;
}
inline void go_prestige_log_notify::set_old_prestige_total(::google::protobuf::uint32 value) {
  set_has_old_prestige_total();
  old_prestige_total_ = value;
}

// required uint32 old_prestige_level = 5;
inline bool go_prestige_log_notify::has_old_prestige_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void go_prestige_log_notify::set_has_old_prestige_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void go_prestige_log_notify::clear_has_old_prestige_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void go_prestige_log_notify::clear_old_prestige_level() {
  old_prestige_level_ = 0u;
  clear_has_old_prestige_level();
}
inline ::google::protobuf::uint32 go_prestige_log_notify::old_prestige_level() const {
  return old_prestige_level_;
}
inline void go_prestige_log_notify::set_old_prestige_level(::google::protobuf::uint32 value) {
  set_has_old_prestige_level();
  old_prestige_level_ = value;
}

// required uint32 up_prestige = 6;
inline bool go_prestige_log_notify::has_up_prestige() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void go_prestige_log_notify::set_has_up_prestige() {
  _has_bits_[0] |= 0x00000020u;
}
inline void go_prestige_log_notify::clear_has_up_prestige() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void go_prestige_log_notify::clear_up_prestige() {
  up_prestige_ = 0u;
  clear_has_up_prestige();
}
inline ::google::protobuf::uint32 go_prestige_log_notify::up_prestige() const {
  return up_prestige_;
}
inline void go_prestige_log_notify::set_up_prestige(::google::protobuf::uint32 value) {
  set_has_up_prestige();
  up_prestige_ = value;
}

// required uint32 new_prestige = 7;
inline bool go_prestige_log_notify::has_new_prestige() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void go_prestige_log_notify::set_has_new_prestige() {
  _has_bits_[0] |= 0x00000040u;
}
inline void go_prestige_log_notify::clear_has_new_prestige() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void go_prestige_log_notify::clear_new_prestige() {
  new_prestige_ = 0u;
  clear_has_new_prestige();
}
inline ::google::protobuf::uint32 go_prestige_log_notify::new_prestige() const {
  return new_prestige_;
}
inline void go_prestige_log_notify::set_new_prestige(::google::protobuf::uint32 value) {
  set_has_new_prestige();
  new_prestige_ = value;
}

// required uint32 new_prestige_total = 8;
inline bool go_prestige_log_notify::has_new_prestige_total() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void go_prestige_log_notify::set_has_new_prestige_total() {
  _has_bits_[0] |= 0x00000080u;
}
inline void go_prestige_log_notify::clear_has_new_prestige_total() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void go_prestige_log_notify::clear_new_prestige_total() {
  new_prestige_total_ = 0u;
  clear_has_new_prestige_total();
}
inline ::google::protobuf::uint32 go_prestige_log_notify::new_prestige_total() const {
  return new_prestige_total_;
}
inline void go_prestige_log_notify::set_new_prestige_total(::google::protobuf::uint32 value) {
  set_has_new_prestige_total();
  new_prestige_total_ = value;
}

// required uint32 new_prestige_level = 9;
inline bool go_prestige_log_notify::has_new_prestige_level() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void go_prestige_log_notify::set_has_new_prestige_level() {
  _has_bits_[0] |= 0x00000100u;
}
inline void go_prestige_log_notify::clear_has_new_prestige_level() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void go_prestige_log_notify::clear_new_prestige_level() {
  new_prestige_level_ = 0u;
  clear_has_new_prestige_level();
}
inline ::google::protobuf::uint32 go_prestige_log_notify::new_prestige_level() const {
  return new_prestige_level_;
}
inline void go_prestige_log_notify::set_new_prestige_level(::google::protobuf::uint32 value) {
  set_has_new_prestige_level();
  new_prestige_level_ = value;
}

// required uint32 op_type = 10;
inline bool go_prestige_log_notify::has_op_type() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void go_prestige_log_notify::set_has_op_type() {
  _has_bits_[0] |= 0x00000200u;
}
inline void go_prestige_log_notify::clear_has_op_type() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void go_prestige_log_notify::clear_op_type() {
  op_type_ = 0u;
  clear_has_op_type();
}
inline ::google::protobuf::uint32 go_prestige_log_notify::op_type() const {
  return op_type_;
}
inline void go_prestige_log_notify::set_op_type(::google::protobuf::uint32 value) {
  set_has_op_type();
  op_type_ = value;
}

// required uint32 source_type = 11;
inline bool go_prestige_log_notify::has_source_type() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void go_prestige_log_notify::set_has_source_type() {
  _has_bits_[0] |= 0x00000400u;
}
inline void go_prestige_log_notify::clear_has_source_type() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void go_prestige_log_notify::clear_source_type() {
  source_type_ = 0u;
  clear_has_source_type();
}
inline ::google::protobuf::uint32 go_prestige_log_notify::source_type() const {
  return source_type_;
}
inline void go_prestige_log_notify::set_source_type(::google::protobuf::uint32 value) {
  set_has_source_type();
  source_type_ = value;
}

// optional uint32 source_param = 12;
inline bool go_prestige_log_notify::has_source_param() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void go_prestige_log_notify::set_has_source_param() {
  _has_bits_[0] |= 0x00000800u;
}
inline void go_prestige_log_notify::clear_has_source_param() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void go_prestige_log_notify::clear_source_param() {
  source_param_ = 0u;
  clear_has_source_param();
}
inline ::google::protobuf::uint32 go_prestige_log_notify::source_param() const {
  return source_param_;
}
inline void go_prestige_log_notify::set_source_param(::google::protobuf::uint32 value) {
  set_has_source_param();
  source_param_ = value;
}

// required uint32 log_time = 13;
inline bool go_prestige_log_notify::has_log_time() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void go_prestige_log_notify::set_has_log_time() {
  _has_bits_[0] |= 0x00001000u;
}
inline void go_prestige_log_notify::clear_has_log_time() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void go_prestige_log_notify::clear_log_time() {
  log_time_ = 0u;
  clear_has_log_time();
}
inline ::google::protobuf::uint32 go_prestige_log_notify::log_time() const {
  return log_time_;
}
inline void go_prestige_log_notify::set_log_time(::google::protobuf::uint32 value) {
  set_has_log_time();
  log_time_ = value;
}

// -------------------------------------------------------------------

// go_user_times_log_notify

// required uint64 role_uid = 1;
inline bool go_user_times_log_notify::has_role_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void go_user_times_log_notify::set_has_role_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void go_user_times_log_notify::clear_has_role_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void go_user_times_log_notify::clear_role_uid() {
  role_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_role_uid();
}
inline ::google::protobuf::uint64 go_user_times_log_notify::role_uid() const {
  return role_uid_;
}
inline void go_user_times_log_notify::set_role_uid(::google::protobuf::uint64 value) {
  set_has_role_uid();
  role_uid_ = value;
}

// required uint32 role_level = 2;
inline bool go_user_times_log_notify::has_role_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void go_user_times_log_notify::set_has_role_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void go_user_times_log_notify::clear_has_role_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void go_user_times_log_notify::clear_role_level() {
  role_level_ = 0u;
  clear_has_role_level();
}
inline ::google::protobuf::uint32 go_user_times_log_notify::role_level() const {
  return role_level_;
}
inline void go_user_times_log_notify::set_role_level(::google::protobuf::uint32 value) {
  set_has_role_level();
  role_level_ = value;
}

// optional uint32 old_num = 3;
inline bool go_user_times_log_notify::has_old_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void go_user_times_log_notify::set_has_old_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void go_user_times_log_notify::clear_has_old_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void go_user_times_log_notify::clear_old_num() {
  old_num_ = 0u;
  clear_has_old_num();
}
inline ::google::protobuf::uint32 go_user_times_log_notify::old_num() const {
  return old_num_;
}
inline void go_user_times_log_notify::set_old_num(::google::protobuf::uint32 value) {
  set_has_old_num();
  old_num_ = value;
}

// optional uint32 up_num = 4;
inline bool go_user_times_log_notify::has_up_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void go_user_times_log_notify::set_has_up_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void go_user_times_log_notify::clear_has_up_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void go_user_times_log_notify::clear_up_num() {
  up_num_ = 0u;
  clear_has_up_num();
}
inline ::google::protobuf::uint32 go_user_times_log_notify::up_num() const {
  return up_num_;
}
inline void go_user_times_log_notify::set_up_num(::google::protobuf::uint32 value) {
  set_has_up_num();
  up_num_ = value;
}

// optional uint32 new_num = 5;
inline bool go_user_times_log_notify::has_new_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void go_user_times_log_notify::set_has_new_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void go_user_times_log_notify::clear_has_new_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void go_user_times_log_notify::clear_new_num() {
  new_num_ = 0u;
  clear_has_new_num();
}
inline ::google::protobuf::uint32 go_user_times_log_notify::new_num() const {
  return new_num_;
}
inline void go_user_times_log_notify::set_new_num(::google::protobuf::uint32 value) {
  set_has_new_num();
  new_num_ = value;
}

// required uint32 event_id = 6;
inline bool go_user_times_log_notify::has_event_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void go_user_times_log_notify::set_has_event_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void go_user_times_log_notify::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void go_user_times_log_notify::clear_event_id() {
  event_id_ = 0u;
  clear_has_event_id();
}
inline ::google::protobuf::uint32 go_user_times_log_notify::event_id() const {
  return event_id_;
}
inline void go_user_times_log_notify::set_event_id(::google::protobuf::uint32 value) {
  set_has_event_id();
  event_id_ = value;
}

// required uint32 sec_event_id = 7;
inline bool go_user_times_log_notify::has_sec_event_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void go_user_times_log_notify::set_has_sec_event_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void go_user_times_log_notify::clear_has_sec_event_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void go_user_times_log_notify::clear_sec_event_id() {
  sec_event_id_ = 0u;
  clear_has_sec_event_id();
}
inline ::google::protobuf::uint32 go_user_times_log_notify::sec_event_id() const {
  return sec_event_id_;
}
inline void go_user_times_log_notify::set_sec_event_id(::google::protobuf::uint32 value) {
  set_has_sec_event_id();
  sec_event_id_ = value;
}

// optional uint32 op_type = 8;
inline bool go_user_times_log_notify::has_op_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void go_user_times_log_notify::set_has_op_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void go_user_times_log_notify::clear_has_op_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void go_user_times_log_notify::clear_op_type() {
  op_type_ = 0u;
  clear_has_op_type();
}
inline ::google::protobuf::uint32 go_user_times_log_notify::op_type() const {
  return op_type_;
}
inline void go_user_times_log_notify::set_op_type(::google::protobuf::uint32 value) {
  set_has_op_type();
  op_type_ = value;
}

// required uint32 source_type = 9;
inline bool go_user_times_log_notify::has_source_type() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void go_user_times_log_notify::set_has_source_type() {
  _has_bits_[0] |= 0x00000100u;
}
inline void go_user_times_log_notify::clear_has_source_type() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void go_user_times_log_notify::clear_source_type() {
  source_type_ = 0u;
  clear_has_source_type();
}
inline ::google::protobuf::uint32 go_user_times_log_notify::source_type() const {
  return source_type_;
}
inline void go_user_times_log_notify::set_source_type(::google::protobuf::uint32 value) {
  set_has_source_type();
  source_type_ = value;
}

// optional uint32 source_param = 10;
inline bool go_user_times_log_notify::has_source_param() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void go_user_times_log_notify::set_has_source_param() {
  _has_bits_[0] |= 0x00000200u;
}
inline void go_user_times_log_notify::clear_has_source_param() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void go_user_times_log_notify::clear_source_param() {
  source_param_ = 0u;
  clear_has_source_param();
}
inline ::google::protobuf::uint32 go_user_times_log_notify::source_param() const {
  return source_param_;
}
inline void go_user_times_log_notify::set_source_param(::google::protobuf::uint32 value) {
  set_has_source_param();
  source_param_ = value;
}

// required uint32 log_time = 11;
inline bool go_user_times_log_notify::has_log_time() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void go_user_times_log_notify::set_has_log_time() {
  _has_bits_[0] |= 0x00000400u;
}
inline void go_user_times_log_notify::clear_has_log_time() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void go_user_times_log_notify::clear_log_time() {
  log_time_ = 0u;
  clear_has_log_time();
}
inline ::google::protobuf::uint32 go_user_times_log_notify::log_time() const {
  return log_time_;
}
inline void go_user_times_log_notify::set_log_time(::google::protobuf::uint32 value) {
  set_has_log_time();
  log_time_ = value;
}

// -------------------------------------------------------------------

// eo_country_log_notify

// optional uint32 country_id = 1;
inline bool eo_country_log_notify::has_country_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void eo_country_log_notify::set_has_country_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void eo_country_log_notify::clear_has_country_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void eo_country_log_notify::clear_country_id() {
  country_id_ = 0u;
  clear_has_country_id();
}
inline ::google::protobuf::uint32 eo_country_log_notify::country_id() const {
  return country_id_;
}
inline void eo_country_log_notify::set_country_id(::google::protobuf::uint32 value) {
  set_has_country_id();
  country_id_ = value;
}

// optional uint32 source_type = 2;
inline bool eo_country_log_notify::has_source_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void eo_country_log_notify::set_has_source_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void eo_country_log_notify::clear_has_source_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void eo_country_log_notify::clear_source_type() {
  source_type_ = 0u;
  clear_has_source_type();
}
inline ::google::protobuf::uint32 eo_country_log_notify::source_type() const {
  return source_type_;
}
inline void eo_country_log_notify::set_source_type(::google::protobuf::uint32 value) {
  set_has_source_type();
  source_type_ = value;
}

// optional uint64 source_param = 3;
inline bool eo_country_log_notify::has_source_param() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void eo_country_log_notify::set_has_source_param() {
  _has_bits_[0] |= 0x00000004u;
}
inline void eo_country_log_notify::clear_has_source_param() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void eo_country_log_notify::clear_source_param() {
  source_param_ = GOOGLE_ULONGLONG(0);
  clear_has_source_param();
}
inline ::google::protobuf::uint64 eo_country_log_notify::source_param() const {
  return source_param_;
}
inline void eo_country_log_notify::set_source_param(::google::protobuf::uint64 value) {
  set_has_source_param();
  source_param_ = value;
}

// optional uint32 source_param2 = 4;
inline bool eo_country_log_notify::has_source_param2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void eo_country_log_notify::set_has_source_param2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void eo_country_log_notify::clear_has_source_param2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void eo_country_log_notify::clear_source_param2() {
  source_param2_ = 0u;
  clear_has_source_param2();
}
inline ::google::protobuf::uint32 eo_country_log_notify::source_param2() const {
  return source_param2_;
}
inline void eo_country_log_notify::set_source_param2(::google::protobuf::uint32 value) {
  set_has_source_param2();
  source_param2_ = value;
}

// optional uint32 source_param3 = 5;
inline bool eo_country_log_notify::has_source_param3() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void eo_country_log_notify::set_has_source_param3() {
  _has_bits_[0] |= 0x00000010u;
}
inline void eo_country_log_notify::clear_has_source_param3() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void eo_country_log_notify::clear_source_param3() {
  source_param3_ = 0u;
  clear_has_source_param3();
}
inline ::google::protobuf::uint32 eo_country_log_notify::source_param3() const {
  return source_param3_;
}
inline void eo_country_log_notify::set_source_param3(::google::protobuf::uint32 value) {
  set_has_source_param3();
  source_param3_ = value;
}

// optional uint32 log_time = 6;
inline bool eo_country_log_notify::has_log_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void eo_country_log_notify::set_has_log_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void eo_country_log_notify::clear_has_log_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void eo_country_log_notify::clear_log_time() {
  log_time_ = 0u;
  clear_has_log_time();
}
inline ::google::protobuf::uint32 eo_country_log_notify::log_time() const {
  return log_time_;
}
inline void eo_country_log_notify::set_log_time(::google::protobuf::uint32 value) {
  set_has_log_time();
  log_time_ = value;
}

// -------------------------------------------------------------------

// eo_family_log_notify

// optional uint64 family_uid = 1;
inline bool eo_family_log_notify::has_family_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void eo_family_log_notify::set_has_family_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void eo_family_log_notify::clear_has_family_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void eo_family_log_notify::clear_family_uid() {
  family_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_family_uid();
}
inline ::google::protobuf::uint64 eo_family_log_notify::family_uid() const {
  return family_uid_;
}
inline void eo_family_log_notify::set_family_uid(::google::protobuf::uint64 value) {
  set_has_family_uid();
  family_uid_ = value;
}

// optional uint64 role_uid = 2;
inline bool eo_family_log_notify::has_role_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void eo_family_log_notify::set_has_role_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void eo_family_log_notify::clear_has_role_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void eo_family_log_notify::clear_role_uid() {
  role_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_role_uid();
}
inline ::google::protobuf::uint64 eo_family_log_notify::role_uid() const {
  return role_uid_;
}
inline void eo_family_log_notify::set_role_uid(::google::protobuf::uint64 value) {
  set_has_role_uid();
  role_uid_ = value;
}

// optional uint64 target_uid = 3;
inline bool eo_family_log_notify::has_target_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void eo_family_log_notify::set_has_target_uid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void eo_family_log_notify::clear_has_target_uid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void eo_family_log_notify::clear_target_uid() {
  target_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_target_uid();
}
inline ::google::protobuf::uint64 eo_family_log_notify::target_uid() const {
  return target_uid_;
}
inline void eo_family_log_notify::set_target_uid(::google::protobuf::uint64 value) {
  set_has_target_uid();
  target_uid_ = value;
}

// optional uint32 source_type = 4;
inline bool eo_family_log_notify::has_source_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void eo_family_log_notify::set_has_source_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void eo_family_log_notify::clear_has_source_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void eo_family_log_notify::clear_source_type() {
  source_type_ = 0u;
  clear_has_source_type();
}
inline ::google::protobuf::uint32 eo_family_log_notify::source_type() const {
  return source_type_;
}
inline void eo_family_log_notify::set_source_type(::google::protobuf::uint32 value) {
  set_has_source_type();
  source_type_ = value;
}

// optional uint32 source_param = 5;
inline bool eo_family_log_notify::has_source_param() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void eo_family_log_notify::set_has_source_param() {
  _has_bits_[0] |= 0x00000010u;
}
inline void eo_family_log_notify::clear_has_source_param() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void eo_family_log_notify::clear_source_param() {
  source_param_ = 0u;
  clear_has_source_param();
}
inline ::google::protobuf::uint32 eo_family_log_notify::source_param() const {
  return source_param_;
}
inline void eo_family_log_notify::set_source_param(::google::protobuf::uint32 value) {
  set_has_source_param();
  source_param_ = value;
}

// optional uint32 source_param2 = 6;
inline bool eo_family_log_notify::has_source_param2() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void eo_family_log_notify::set_has_source_param2() {
  _has_bits_[0] |= 0x00000020u;
}
inline void eo_family_log_notify::clear_has_source_param2() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void eo_family_log_notify::clear_source_param2() {
  source_param2_ = 0u;
  clear_has_source_param2();
}
inline ::google::protobuf::uint32 eo_family_log_notify::source_param2() const {
  return source_param2_;
}
inline void eo_family_log_notify::set_source_param2(::google::protobuf::uint32 value) {
  set_has_source_param2();
  source_param2_ = value;
}

// optional uint32 log_time = 7;
inline bool eo_family_log_notify::has_log_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void eo_family_log_notify::set_has_log_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void eo_family_log_notify::clear_has_log_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void eo_family_log_notify::clear_log_time() {
  log_time_ = 0u;
  clear_has_log_time();
}
inline ::google::protobuf::uint32 eo_family_log_notify::log_time() const {
  return log_time_;
}
inline void eo_family_log_notify::set_log_time(::google::protobuf::uint32 value) {
  set_has_log_time();
  log_time_ = value;
}

// -------------------------------------------------------------------

// eo_friend_log_notify

// optional uint64 role_uid = 1;
inline bool eo_friend_log_notify::has_role_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void eo_friend_log_notify::set_has_role_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void eo_friend_log_notify::clear_has_role_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void eo_friend_log_notify::clear_role_uid() {
  role_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_role_uid();
}
inline ::google::protobuf::uint64 eo_friend_log_notify::role_uid() const {
  return role_uid_;
}
inline void eo_friend_log_notify::set_role_uid(::google::protobuf::uint64 value) {
  set_has_role_uid();
  role_uid_ = value;
}

// optional uint64 friend_uid = 2;
inline bool eo_friend_log_notify::has_friend_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void eo_friend_log_notify::set_has_friend_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void eo_friend_log_notify::clear_has_friend_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void eo_friend_log_notify::clear_friend_uid() {
  friend_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_friend_uid();
}
inline ::google::protobuf::uint64 eo_friend_log_notify::friend_uid() const {
  return friend_uid_;
}
inline void eo_friend_log_notify::set_friend_uid(::google::protobuf::uint64 value) {
  set_has_friend_uid();
  friend_uid_ = value;
}

// optional uint32 old_type = 3;
inline bool eo_friend_log_notify::has_old_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void eo_friend_log_notify::set_has_old_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void eo_friend_log_notify::clear_has_old_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void eo_friend_log_notify::clear_old_type() {
  old_type_ = 0u;
  clear_has_old_type();
}
inline ::google::protobuf::uint32 eo_friend_log_notify::old_type() const {
  return old_type_;
}
inline void eo_friend_log_notify::set_old_type(::google::protobuf::uint32 value) {
  set_has_old_type();
  old_type_ = value;
}

// optional uint32 new_type = 4;
inline bool eo_friend_log_notify::has_new_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void eo_friend_log_notify::set_has_new_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void eo_friend_log_notify::clear_has_new_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void eo_friend_log_notify::clear_new_type() {
  new_type_ = 0u;
  clear_has_new_type();
}
inline ::google::protobuf::uint32 eo_friend_log_notify::new_type() const {
  return new_type_;
}
inline void eo_friend_log_notify::set_new_type(::google::protobuf::uint32 value) {
  set_has_new_type();
  new_type_ = value;
}

// optional uint32 source_type = 5;
inline bool eo_friend_log_notify::has_source_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void eo_friend_log_notify::set_has_source_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void eo_friend_log_notify::clear_has_source_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void eo_friend_log_notify::clear_source_type() {
  source_type_ = 0u;
  clear_has_source_type();
}
inline ::google::protobuf::uint32 eo_friend_log_notify::source_type() const {
  return source_type_;
}
inline void eo_friend_log_notify::set_source_type(::google::protobuf::uint32 value) {
  set_has_source_type();
  source_type_ = value;
}

// optional uint32 source_param = 6;
inline bool eo_friend_log_notify::has_source_param() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void eo_friend_log_notify::set_has_source_param() {
  _has_bits_[0] |= 0x00000020u;
}
inline void eo_friend_log_notify::clear_has_source_param() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void eo_friend_log_notify::clear_source_param() {
  source_param_ = 0u;
  clear_has_source_param();
}
inline ::google::protobuf::uint32 eo_friend_log_notify::source_param() const {
  return source_param_;
}
inline void eo_friend_log_notify::set_source_param(::google::protobuf::uint32 value) {
  set_has_source_param();
  source_param_ = value;
}

// optional uint32 log_time = 7;
inline bool eo_friend_log_notify::has_log_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void eo_friend_log_notify::set_has_log_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void eo_friend_log_notify::clear_has_log_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void eo_friend_log_notify::clear_log_time() {
  log_time_ = 0u;
  clear_has_log_time();
}
inline ::google::protobuf::uint32 eo_friend_log_notify::log_time() const {
  return log_time_;
}
inline void eo_friend_log_notify::set_log_time(::google::protobuf::uint32 value) {
  set_has_log_time();
  log_time_ = value;
}

// -------------------------------------------------------------------

// eo_mail_log_notify

// optional uint64 role_uid = 1;
inline bool eo_mail_log_notify::has_role_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void eo_mail_log_notify::set_has_role_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void eo_mail_log_notify::clear_has_role_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void eo_mail_log_notify::clear_role_uid() {
  role_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_role_uid();
}
inline ::google::protobuf::uint64 eo_mail_log_notify::role_uid() const {
  return role_uid_;
}
inline void eo_mail_log_notify::set_role_uid(::google::protobuf::uint64 value) {
  set_has_role_uid();
  role_uid_ = value;
}

// optional uint64 mail_id = 2;
inline bool eo_mail_log_notify::has_mail_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void eo_mail_log_notify::set_has_mail_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void eo_mail_log_notify::clear_has_mail_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void eo_mail_log_notify::clear_mail_id() {
  mail_id_ = GOOGLE_ULONGLONG(0);
  clear_has_mail_id();
}
inline ::google::protobuf::uint64 eo_mail_log_notify::mail_id() const {
  return mail_id_;
}
inline void eo_mail_log_notify::set_mail_id(::google::protobuf::uint64 value) {
  set_has_mail_id();
  mail_id_ = value;
}

// optional uint32 mail_type = 3;
inline bool eo_mail_log_notify::has_mail_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void eo_mail_log_notify::set_has_mail_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void eo_mail_log_notify::clear_has_mail_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void eo_mail_log_notify::clear_mail_type() {
  mail_type_ = 0u;
  clear_has_mail_type();
}
inline ::google::protobuf::uint32 eo_mail_log_notify::mail_type() const {
  return mail_type_;
}
inline void eo_mail_log_notify::set_mail_type(::google::protobuf::uint32 value) {
  set_has_mail_type();
  mail_type_ = value;
}

// optional uint32 item_type = 4;
inline bool eo_mail_log_notify::has_item_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void eo_mail_log_notify::set_has_item_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void eo_mail_log_notify::clear_has_item_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void eo_mail_log_notify::clear_item_type() {
  item_type_ = 0u;
  clear_has_item_type();
}
inline ::google::protobuf::uint32 eo_mail_log_notify::item_type() const {
  return item_type_;
}
inline void eo_mail_log_notify::set_item_type(::google::protobuf::uint32 value) {
  set_has_item_type();
  item_type_ = value;
}

// optional string items = 5;
inline bool eo_mail_log_notify::has_items() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void eo_mail_log_notify::set_has_items() {
  _has_bits_[0] |= 0x00000010u;
}
inline void eo_mail_log_notify::clear_has_items() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void eo_mail_log_notify::clear_items() {
  if (items_ != &::google::protobuf::internal::kEmptyString) {
    items_->clear();
  }
  clear_has_items();
}
inline const ::std::string& eo_mail_log_notify::items() const {
  return *items_;
}
inline void eo_mail_log_notify::set_items(const ::std::string& value) {
  set_has_items();
  if (items_ == &::google::protobuf::internal::kEmptyString) {
    items_ = new ::std::string;
  }
  items_->assign(value);
}
inline void eo_mail_log_notify::set_items(const char* value) {
  set_has_items();
  if (items_ == &::google::protobuf::internal::kEmptyString) {
    items_ = new ::std::string;
  }
  items_->assign(value);
}
inline void eo_mail_log_notify::set_items(const char* value, size_t size) {
  set_has_items();
  if (items_ == &::google::protobuf::internal::kEmptyString) {
    items_ = new ::std::string;
  }
  items_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* eo_mail_log_notify::mutable_items() {
  set_has_items();
  if (items_ == &::google::protobuf::internal::kEmptyString) {
    items_ = new ::std::string;
  }
  return items_;
}
inline ::std::string* eo_mail_log_notify::release_items() {
  clear_has_items();
  if (items_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = items_;
    items_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void eo_mail_log_notify::set_allocated_items(::std::string* items) {
  if (items_ != &::google::protobuf::internal::kEmptyString) {
    delete items_;
  }
  if (items) {
    set_has_items();
    items_ = items;
  } else {
    clear_has_items();
    items_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 item_state = 6;
inline bool eo_mail_log_notify::has_item_state() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void eo_mail_log_notify::set_has_item_state() {
  _has_bits_[0] |= 0x00000020u;
}
inline void eo_mail_log_notify::clear_has_item_state() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void eo_mail_log_notify::clear_item_state() {
  item_state_ = 0u;
  clear_has_item_state();
}
inline ::google::protobuf::uint32 eo_mail_log_notify::item_state() const {
  return item_state_;
}
inline void eo_mail_log_notify::set_item_state(::google::protobuf::uint32 value) {
  set_has_item_state();
  item_state_ = value;
}

// optional uint32 source_type = 7;
inline bool eo_mail_log_notify::has_source_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void eo_mail_log_notify::set_has_source_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void eo_mail_log_notify::clear_has_source_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void eo_mail_log_notify::clear_source_type() {
  source_type_ = 0u;
  clear_has_source_type();
}
inline ::google::protobuf::uint32 eo_mail_log_notify::source_type() const {
  return source_type_;
}
inline void eo_mail_log_notify::set_source_type(::google::protobuf::uint32 value) {
  set_has_source_type();
  source_type_ = value;
}

// optional uint32 source_param = 8;
inline bool eo_mail_log_notify::has_source_param() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void eo_mail_log_notify::set_has_source_param() {
  _has_bits_[0] |= 0x00000080u;
}
inline void eo_mail_log_notify::clear_has_source_param() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void eo_mail_log_notify::clear_source_param() {
  source_param_ = 0u;
  clear_has_source_param();
}
inline ::google::protobuf::uint32 eo_mail_log_notify::source_param() const {
  return source_param_;
}
inline void eo_mail_log_notify::set_source_param(::google::protobuf::uint32 value) {
  set_has_source_param();
  source_param_ = value;
}

// optional uint32 log_time = 9;
inline bool eo_mail_log_notify::has_log_time() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void eo_mail_log_notify::set_has_log_time() {
  _has_bits_[0] |= 0x00000100u;
}
inline void eo_mail_log_notify::clear_has_log_time() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void eo_mail_log_notify::clear_log_time() {
  log_time_ = 0u;
  clear_has_log_time();
}
inline ::google::protobuf::uint32 eo_mail_log_notify::log_time() const {
  return log_time_;
}
inline void eo_mail_log_notify::set_log_time(::google::protobuf::uint32 value) {
  set_has_log_time();
  log_time_ = value;
}

// -------------------------------------------------------------------

// go_pk_log_notify

// required uint64 role_uid = 1;
inline bool go_pk_log_notify::has_role_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void go_pk_log_notify::set_has_role_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void go_pk_log_notify::clear_has_role_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void go_pk_log_notify::clear_role_uid() {
  role_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_role_uid();
}
inline ::google::protobuf::uint64 go_pk_log_notify::role_uid() const {
  return role_uid_;
}
inline void go_pk_log_notify::set_role_uid(::google::protobuf::uint64 value) {
  set_has_role_uid();
  role_uid_ = value;
}

// required uint32 role_level = 2;
inline bool go_pk_log_notify::has_role_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void go_pk_log_notify::set_has_role_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void go_pk_log_notify::clear_has_role_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void go_pk_log_notify::clear_role_level() {
  role_level_ = 0u;
  clear_has_role_level();
}
inline ::google::protobuf::uint32 go_pk_log_notify::role_level() const {
  return role_level_;
}
inline void go_pk_log_notify::set_role_level(::google::protobuf::uint32 value) {
  set_has_role_level();
  role_level_ = value;
}

// optional uint32 old_num = 3;
inline bool go_pk_log_notify::has_old_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void go_pk_log_notify::set_has_old_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void go_pk_log_notify::clear_has_old_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void go_pk_log_notify::clear_old_num() {
  old_num_ = 0u;
  clear_has_old_num();
}
inline ::google::protobuf::uint32 go_pk_log_notify::old_num() const {
  return old_num_;
}
inline void go_pk_log_notify::set_old_num(::google::protobuf::uint32 value) {
  set_has_old_num();
  old_num_ = value;
}

// optional uint32 up_num = 4;
inline bool go_pk_log_notify::has_up_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void go_pk_log_notify::set_has_up_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void go_pk_log_notify::clear_has_up_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void go_pk_log_notify::clear_up_num() {
  up_num_ = 0u;
  clear_has_up_num();
}
inline ::google::protobuf::uint32 go_pk_log_notify::up_num() const {
  return up_num_;
}
inline void go_pk_log_notify::set_up_num(::google::protobuf::uint32 value) {
  set_has_up_num();
  up_num_ = value;
}

// optional uint32 new_num = 5;
inline bool go_pk_log_notify::has_new_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void go_pk_log_notify::set_has_new_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void go_pk_log_notify::clear_has_new_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void go_pk_log_notify::clear_new_num() {
  new_num_ = 0u;
  clear_has_new_num();
}
inline ::google::protobuf::uint32 go_pk_log_notify::new_num() const {
  return new_num_;
}
inline void go_pk_log_notify::set_new_num(::google::protobuf::uint32 value) {
  set_has_new_num();
  new_num_ = value;
}

// optional uint32 value_type = 6;
inline bool go_pk_log_notify::has_value_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void go_pk_log_notify::set_has_value_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void go_pk_log_notify::clear_has_value_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void go_pk_log_notify::clear_value_type() {
  value_type_ = 0u;
  clear_has_value_type();
}
inline ::google::protobuf::uint32 go_pk_log_notify::value_type() const {
  return value_type_;
}
inline void go_pk_log_notify::set_value_type(::google::protobuf::uint32 value) {
  set_has_value_type();
  value_type_ = value;
}

// optional uint32 op_type = 7;
inline bool go_pk_log_notify::has_op_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void go_pk_log_notify::set_has_op_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void go_pk_log_notify::clear_has_op_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void go_pk_log_notify::clear_op_type() {
  op_type_ = 0u;
  clear_has_op_type();
}
inline ::google::protobuf::uint32 go_pk_log_notify::op_type() const {
  return op_type_;
}
inline void go_pk_log_notify::set_op_type(::google::protobuf::uint32 value) {
  set_has_op_type();
  op_type_ = value;
}

// optional uint32 source_type = 8;
inline bool go_pk_log_notify::has_source_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void go_pk_log_notify::set_has_source_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void go_pk_log_notify::clear_has_source_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void go_pk_log_notify::clear_source_type() {
  source_type_ = 0u;
  clear_has_source_type();
}
inline ::google::protobuf::uint32 go_pk_log_notify::source_type() const {
  return source_type_;
}
inline void go_pk_log_notify::set_source_type(::google::protobuf::uint32 value) {
  set_has_source_type();
  source_type_ = value;
}

// optional uint32 source_param = 9;
inline bool go_pk_log_notify::has_source_param() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void go_pk_log_notify::set_has_source_param() {
  _has_bits_[0] |= 0x00000100u;
}
inline void go_pk_log_notify::clear_has_source_param() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void go_pk_log_notify::clear_source_param() {
  source_param_ = 0u;
  clear_has_source_param();
}
inline ::google::protobuf::uint32 go_pk_log_notify::source_param() const {
  return source_param_;
}
inline void go_pk_log_notify::set_source_param(::google::protobuf::uint32 value) {
  set_has_source_param();
  source_param_ = value;
}

// optional uint32 log_time = 10;
inline bool go_pk_log_notify::has_log_time() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void go_pk_log_notify::set_has_log_time() {
  _has_bits_[0] |= 0x00000200u;
}
inline void go_pk_log_notify::clear_has_log_time() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void go_pk_log_notify::clear_log_time() {
  log_time_ = 0u;
  clear_has_log_time();
}
inline ::google::protobuf::uint32 go_pk_log_notify::log_time() const {
  return log_time_;
}
inline void go_pk_log_notify::set_log_time(::google::protobuf::uint32 value) {
  set_has_log_time();
  log_time_ = value;
}

// -------------------------------------------------------------------

// go_shop_log_notify

// required uint64 role_uid = 1;
inline bool go_shop_log_notify::has_role_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void go_shop_log_notify::set_has_role_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void go_shop_log_notify::clear_has_role_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void go_shop_log_notify::clear_role_uid() {
  role_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_role_uid();
}
inline ::google::protobuf::uint64 go_shop_log_notify::role_uid() const {
  return role_uid_;
}
inline void go_shop_log_notify::set_role_uid(::google::protobuf::uint64 value) {
  set_has_role_uid();
  role_uid_ = value;
}

// optional uint32 goods_tid = 2;
inline bool go_shop_log_notify::has_goods_tid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void go_shop_log_notify::set_has_goods_tid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void go_shop_log_notify::clear_has_goods_tid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void go_shop_log_notify::clear_goods_tid() {
  goods_tid_ = 0u;
  clear_has_goods_tid();
}
inline ::google::protobuf::uint32 go_shop_log_notify::goods_tid() const {
  return goods_tid_;
}
inline void go_shop_log_notify::set_goods_tid(::google::protobuf::uint32 value) {
  set_has_goods_tid();
  goods_tid_ = value;
}

// optional uint32 goods_num = 3;
inline bool go_shop_log_notify::has_goods_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void go_shop_log_notify::set_has_goods_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void go_shop_log_notify::clear_has_goods_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void go_shop_log_notify::clear_goods_num() {
  goods_num_ = 0u;
  clear_has_goods_num();
}
inline ::google::protobuf::uint32 go_shop_log_notify::goods_num() const {
  return goods_num_;
}
inline void go_shop_log_notify::set_goods_num(::google::protobuf::uint32 value) {
  set_has_goods_num();
  goods_num_ = value;
}

// optional uint32 cost_type = 4;
inline bool go_shop_log_notify::has_cost_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void go_shop_log_notify::set_has_cost_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void go_shop_log_notify::clear_has_cost_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void go_shop_log_notify::clear_cost_type() {
  cost_type_ = 0u;
  clear_has_cost_type();
}
inline ::google::protobuf::uint32 go_shop_log_notify::cost_type() const {
  return cost_type_;
}
inline void go_shop_log_notify::set_cost_type(::google::protobuf::uint32 value) {
  set_has_cost_type();
  cost_type_ = value;
}

// optional uint32 cost_value = 5;
inline bool go_shop_log_notify::has_cost_value() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void go_shop_log_notify::set_has_cost_value() {
  _has_bits_[0] |= 0x00000010u;
}
inline void go_shop_log_notify::clear_has_cost_value() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void go_shop_log_notify::clear_cost_value() {
  cost_value_ = 0u;
  clear_has_cost_value();
}
inline ::google::protobuf::uint32 go_shop_log_notify::cost_value() const {
  return cost_value_;
}
inline void go_shop_log_notify::set_cost_value(::google::protobuf::uint32 value) {
  set_has_cost_value();
  cost_value_ = value;
}

// optional uint32 item_id = 6;
inline bool go_shop_log_notify::has_item_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void go_shop_log_notify::set_has_item_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void go_shop_log_notify::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void go_shop_log_notify::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 go_shop_log_notify::item_id() const {
  return item_id_;
}
inline void go_shop_log_notify::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// optional uint32 item_num = 7;
inline bool go_shop_log_notify::has_item_num() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void go_shop_log_notify::set_has_item_num() {
  _has_bits_[0] |= 0x00000040u;
}
inline void go_shop_log_notify::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void go_shop_log_notify::clear_item_num() {
  item_num_ = 0u;
  clear_has_item_num();
}
inline ::google::protobuf::uint32 go_shop_log_notify::item_num() const {
  return item_num_;
}
inline void go_shop_log_notify::set_item_num(::google::protobuf::uint32 value) {
  set_has_item_num();
  item_num_ = value;
}

// optional uint32 source_type = 8;
inline bool go_shop_log_notify::has_source_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void go_shop_log_notify::set_has_source_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void go_shop_log_notify::clear_has_source_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void go_shop_log_notify::clear_source_type() {
  source_type_ = 0u;
  clear_has_source_type();
}
inline ::google::protobuf::uint32 go_shop_log_notify::source_type() const {
  return source_type_;
}
inline void go_shop_log_notify::set_source_type(::google::protobuf::uint32 value) {
  set_has_source_type();
  source_type_ = value;
}

// optional uint32 source_param = 9;
inline bool go_shop_log_notify::has_source_param() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void go_shop_log_notify::set_has_source_param() {
  _has_bits_[0] |= 0x00000100u;
}
inline void go_shop_log_notify::clear_has_source_param() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void go_shop_log_notify::clear_source_param() {
  source_param_ = 0u;
  clear_has_source_param();
}
inline ::google::protobuf::uint32 go_shop_log_notify::source_param() const {
  return source_param_;
}
inline void go_shop_log_notify::set_source_param(::google::protobuf::uint32 value) {
  set_has_source_param();
  source_param_ = value;
}

// optional uint32 log_time = 10;
inline bool go_shop_log_notify::has_log_time() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void go_shop_log_notify::set_has_log_time() {
  _has_bits_[0] |= 0x00000200u;
}
inline void go_shop_log_notify::clear_has_log_time() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void go_shop_log_notify::clear_log_time() {
  log_time_ = 0u;
  clear_has_log_time();
}
inline ::google::protobuf::uint32 go_shop_log_notify::log_time() const {
  return log_time_;
}
inline void go_shop_log_notify::set_log_time(::google::protobuf::uint32 value) {
  set_has_log_time();
  log_time_ = value;
}

// -------------------------------------------------------------------

// go_random_shop_log_notify

// optional uint64 role_uid = 1;
inline bool go_random_shop_log_notify::has_role_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void go_random_shop_log_notify::set_has_role_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void go_random_shop_log_notify::clear_has_role_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void go_random_shop_log_notify::clear_role_uid() {
  role_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_role_uid();
}
inline ::google::protobuf::uint64 go_random_shop_log_notify::role_uid() const {
  return role_uid_;
}
inline void go_random_shop_log_notify::set_role_uid(::google::protobuf::uint64 value) {
  set_has_role_uid();
  role_uid_ = value;
}

// optional uint32 shop_tid = 2;
inline bool go_random_shop_log_notify::has_shop_tid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void go_random_shop_log_notify::set_has_shop_tid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void go_random_shop_log_notify::clear_has_shop_tid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void go_random_shop_log_notify::clear_shop_tid() {
  shop_tid_ = 0u;
  clear_has_shop_tid();
}
inline ::google::protobuf::uint32 go_random_shop_log_notify::shop_tid() const {
  return shop_tid_;
}
inline void go_random_shop_log_notify::set_shop_tid(::google::protobuf::uint32 value) {
  set_has_shop_tid();
  shop_tid_ = value;
}

// optional uint32 goods_tid = 3;
inline bool go_random_shop_log_notify::has_goods_tid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void go_random_shop_log_notify::set_has_goods_tid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void go_random_shop_log_notify::clear_has_goods_tid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void go_random_shop_log_notify::clear_goods_tid() {
  goods_tid_ = 0u;
  clear_has_goods_tid();
}
inline ::google::protobuf::uint32 go_random_shop_log_notify::goods_tid() const {
  return goods_tid_;
}
inline void go_random_shop_log_notify::set_goods_tid(::google::protobuf::uint32 value) {
  set_has_goods_tid();
  goods_tid_ = value;
}

// optional uint32 cost_type = 4;
inline bool go_random_shop_log_notify::has_cost_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void go_random_shop_log_notify::set_has_cost_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void go_random_shop_log_notify::clear_has_cost_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void go_random_shop_log_notify::clear_cost_type() {
  cost_type_ = 0u;
  clear_has_cost_type();
}
inline ::google::protobuf::uint32 go_random_shop_log_notify::cost_type() const {
  return cost_type_;
}
inline void go_random_shop_log_notify::set_cost_type(::google::protobuf::uint32 value) {
  set_has_cost_type();
  cost_type_ = value;
}

// optional uint32 cost_value = 5;
inline bool go_random_shop_log_notify::has_cost_value() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void go_random_shop_log_notify::set_has_cost_value() {
  _has_bits_[0] |= 0x00000010u;
}
inline void go_random_shop_log_notify::clear_has_cost_value() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void go_random_shop_log_notify::clear_cost_value() {
  cost_value_ = 0u;
  clear_has_cost_value();
}
inline ::google::protobuf::uint32 go_random_shop_log_notify::cost_value() const {
  return cost_value_;
}
inline void go_random_shop_log_notify::set_cost_value(::google::protobuf::uint32 value) {
  set_has_cost_value();
  cost_value_ = value;
}

// optional uint32 cost_item = 6;
inline bool go_random_shop_log_notify::has_cost_item() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void go_random_shop_log_notify::set_has_cost_item() {
  _has_bits_[0] |= 0x00000020u;
}
inline void go_random_shop_log_notify::clear_has_cost_item() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void go_random_shop_log_notify::clear_cost_item() {
  cost_item_ = 0u;
  clear_has_cost_item();
}
inline ::google::protobuf::uint32 go_random_shop_log_notify::cost_item() const {
  return cost_item_;
}
inline void go_random_shop_log_notify::set_cost_item(::google::protobuf::uint32 value) {
  set_has_cost_item();
  cost_item_ = value;
}

// optional uint32 cost_item_value = 7;
inline bool go_random_shop_log_notify::has_cost_item_value() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void go_random_shop_log_notify::set_has_cost_item_value() {
  _has_bits_[0] |= 0x00000040u;
}
inline void go_random_shop_log_notify::clear_has_cost_item_value() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void go_random_shop_log_notify::clear_cost_item_value() {
  cost_item_value_ = 0u;
  clear_has_cost_item_value();
}
inline ::google::protobuf::uint32 go_random_shop_log_notify::cost_item_value() const {
  return cost_item_value_;
}
inline void go_random_shop_log_notify::set_cost_item_value(::google::protobuf::uint32 value) {
  set_has_cost_item_value();
  cost_item_value_ = value;
}

// optional uint32 old_num = 8;
inline bool go_random_shop_log_notify::has_old_num() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void go_random_shop_log_notify::set_has_old_num() {
  _has_bits_[0] |= 0x00000080u;
}
inline void go_random_shop_log_notify::clear_has_old_num() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void go_random_shop_log_notify::clear_old_num() {
  old_num_ = 0u;
  clear_has_old_num();
}
inline ::google::protobuf::uint32 go_random_shop_log_notify::old_num() const {
  return old_num_;
}
inline void go_random_shop_log_notify::set_old_num(::google::protobuf::uint32 value) {
  set_has_old_num();
  old_num_ = value;
}

// optional uint32 new_num = 9;
inline bool go_random_shop_log_notify::has_new_num() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void go_random_shop_log_notify::set_has_new_num() {
  _has_bits_[0] |= 0x00000100u;
}
inline void go_random_shop_log_notify::clear_has_new_num() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void go_random_shop_log_notify::clear_new_num() {
  new_num_ = 0u;
  clear_has_new_num();
}
inline ::google::protobuf::uint32 go_random_shop_log_notify::new_num() const {
  return new_num_;
}
inline void go_random_shop_log_notify::set_new_num(::google::protobuf::uint32 value) {
  set_has_new_num();
  new_num_ = value;
}

// optional uint32 source_type = 10;
inline bool go_random_shop_log_notify::has_source_type() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void go_random_shop_log_notify::set_has_source_type() {
  _has_bits_[0] |= 0x00000200u;
}
inline void go_random_shop_log_notify::clear_has_source_type() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void go_random_shop_log_notify::clear_source_type() {
  source_type_ = 0u;
  clear_has_source_type();
}
inline ::google::protobuf::uint32 go_random_shop_log_notify::source_type() const {
  return source_type_;
}
inline void go_random_shop_log_notify::set_source_type(::google::protobuf::uint32 value) {
  set_has_source_type();
  source_type_ = value;
}

// optional uint32 log_time = 11;
inline bool go_random_shop_log_notify::has_log_time() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void go_random_shop_log_notify::set_has_log_time() {
  _has_bits_[0] |= 0x00000400u;
}
inline void go_random_shop_log_notify::clear_has_log_time() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void go_random_shop_log_notify::clear_log_time() {
  log_time_ = 0u;
  clear_has_log_time();
}
inline ::google::protobuf::uint32 go_random_shop_log_notify::log_time() const {
  return log_time_;
}
inline void go_random_shop_log_notify::set_log_time(::google::protobuf::uint32 value) {
  set_has_log_time();
  log_time_ = value;
}

// -------------------------------------------------------------------

// go_equip_log_notify

// required uint64 role_uid = 1;
inline bool go_equip_log_notify::has_role_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void go_equip_log_notify::set_has_role_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void go_equip_log_notify::clear_has_role_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void go_equip_log_notify::clear_role_uid() {
  role_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_role_uid();
}
inline ::google::protobuf::uint64 go_equip_log_notify::role_uid() const {
  return role_uid_;
}
inline void go_equip_log_notify::set_role_uid(::google::protobuf::uint64 value) {
  set_has_role_uid();
  role_uid_ = value;
}

// required uint32 role_level = 2;
inline bool go_equip_log_notify::has_role_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void go_equip_log_notify::set_has_role_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void go_equip_log_notify::clear_has_role_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void go_equip_log_notify::clear_role_level() {
  role_level_ = 0u;
  clear_has_role_level();
}
inline ::google::protobuf::uint32 go_equip_log_notify::role_level() const {
  return role_level_;
}
inline void go_equip_log_notify::set_role_level(::google::protobuf::uint32 value) {
  set_has_role_level();
  role_level_ = value;
}

// required uint64 item_uid = 3;
inline bool go_equip_log_notify::has_item_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void go_equip_log_notify::set_has_item_uid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void go_equip_log_notify::clear_has_item_uid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void go_equip_log_notify::clear_item_uid() {
  item_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_item_uid();
}
inline ::google::protobuf::uint64 go_equip_log_notify::item_uid() const {
  return item_uid_;
}
inline void go_equip_log_notify::set_item_uid(::google::protobuf::uint64 value) {
  set_has_item_uid();
  item_uid_ = value;
}

// required uint32 item_tid = 4;
inline bool go_equip_log_notify::has_item_tid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void go_equip_log_notify::set_has_item_tid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void go_equip_log_notify::clear_has_item_tid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void go_equip_log_notify::clear_item_tid() {
  item_tid_ = 0u;
  clear_has_item_tid();
}
inline ::google::protobuf::uint32 go_equip_log_notify::item_tid() const {
  return item_tid_;
}
inline void go_equip_log_notify::set_item_tid(::google::protobuf::uint32 value) {
  set_has_item_tid();
  item_tid_ = value;
}

// optional uint64 hero_uid = 5;
inline bool go_equip_log_notify::has_hero_uid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void go_equip_log_notify::set_has_hero_uid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void go_equip_log_notify::clear_has_hero_uid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void go_equip_log_notify::clear_hero_uid() {
  hero_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_hero_uid();
}
inline ::google::protobuf::uint64 go_equip_log_notify::hero_uid() const {
  return hero_uid_;
}
inline void go_equip_log_notify::set_hero_uid(::google::protobuf::uint64 value) {
  set_has_hero_uid();
  hero_uid_ = value;
}

// repeated .proto.common.equip_attr attr = 6;
inline int go_equip_log_notify::attr_size() const {
  return attr_.size();
}
inline void go_equip_log_notify::clear_attr() {
  attr_.Clear();
}
inline const ::proto::common::equip_attr& go_equip_log_notify::attr(int index) const {
  return attr_.Get(index);
}
inline ::proto::common::equip_attr* go_equip_log_notify::mutable_attr(int index) {
  return attr_.Mutable(index);
}
inline ::proto::common::equip_attr* go_equip_log_notify::add_attr() {
  return attr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::common::equip_attr >&
go_equip_log_notify::attr() const {
  return attr_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::common::equip_attr >*
go_equip_log_notify::mutable_attr() {
  return &attr_;
}

// repeated uint32 exattr = 7;
inline int go_equip_log_notify::exattr_size() const {
  return exattr_.size();
}
inline void go_equip_log_notify::clear_exattr() {
  exattr_.Clear();
}
inline ::google::protobuf::uint32 go_equip_log_notify::exattr(int index) const {
  return exattr_.Get(index);
}
inline void go_equip_log_notify::set_exattr(int index, ::google::protobuf::uint32 value) {
  exattr_.Set(index, value);
}
inline void go_equip_log_notify::add_exattr(::google::protobuf::uint32 value) {
  exattr_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
go_equip_log_notify::exattr() const {
  return exattr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
go_equip_log_notify::mutable_exattr() {
  return &exattr_;
}

// repeated uint32 remake_exattr = 8;
inline int go_equip_log_notify::remake_exattr_size() const {
  return remake_exattr_.size();
}
inline void go_equip_log_notify::clear_remake_exattr() {
  remake_exattr_.Clear();
}
inline ::google::protobuf::uint32 go_equip_log_notify::remake_exattr(int index) const {
  return remake_exattr_.Get(index);
}
inline void go_equip_log_notify::set_remake_exattr(int index, ::google::protobuf::uint32 value) {
  remake_exattr_.Set(index, value);
}
inline void go_equip_log_notify::add_remake_exattr(::google::protobuf::uint32 value) {
  remake_exattr_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
go_equip_log_notify::remake_exattr() const {
  return remake_exattr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
go_equip_log_notify::mutable_remake_exattr() {
  return &remake_exattr_;
}

// required uint32 op_type = 9;
inline bool go_equip_log_notify::has_op_type() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void go_equip_log_notify::set_has_op_type() {
  _has_bits_[0] |= 0x00000100u;
}
inline void go_equip_log_notify::clear_has_op_type() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void go_equip_log_notify::clear_op_type() {
  op_type_ = 0u;
  clear_has_op_type();
}
inline ::google::protobuf::uint32 go_equip_log_notify::op_type() const {
  return op_type_;
}
inline void go_equip_log_notify::set_op_type(::google::protobuf::uint32 value) {
  set_has_op_type();
  op_type_ = value;
}

// required uint32 source_type = 11;
inline bool go_equip_log_notify::has_source_type() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void go_equip_log_notify::set_has_source_type() {
  _has_bits_[0] |= 0x00000200u;
}
inline void go_equip_log_notify::clear_has_source_type() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void go_equip_log_notify::clear_source_type() {
  source_type_ = 0u;
  clear_has_source_type();
}
inline ::google::protobuf::uint32 go_equip_log_notify::source_type() const {
  return source_type_;
}
inline void go_equip_log_notify::set_source_type(::google::protobuf::uint32 value) {
  set_has_source_type();
  source_type_ = value;
}

// optional uint32 source_param = 12;
inline bool go_equip_log_notify::has_source_param() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void go_equip_log_notify::set_has_source_param() {
  _has_bits_[0] |= 0x00000400u;
}
inline void go_equip_log_notify::clear_has_source_param() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void go_equip_log_notify::clear_source_param() {
  source_param_ = 0u;
  clear_has_source_param();
}
inline ::google::protobuf::uint32 go_equip_log_notify::source_param() const {
  return source_param_;
}
inline void go_equip_log_notify::set_source_param(::google::protobuf::uint32 value) {
  set_has_source_param();
  source_param_ = value;
}

// required uint32 log_time = 13;
inline bool go_equip_log_notify::has_log_time() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void go_equip_log_notify::set_has_log_time() {
  _has_bits_[0] |= 0x00000800u;
}
inline void go_equip_log_notify::clear_has_log_time() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void go_equip_log_notify::clear_log_time() {
  log_time_ = 0u;
  clear_has_log_time();
}
inline ::google::protobuf::uint32 go_equip_log_notify::log_time() const {
  return log_time_;
}
inline void go_equip_log_notify::set_log_time(::google::protobuf::uint32 value) {
  set_has_log_time();
  log_time_ = value;
}

// -------------------------------------------------------------------

// go_achieve_log_notify

// required uint64 role_uid = 1;
inline bool go_achieve_log_notify::has_role_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void go_achieve_log_notify::set_has_role_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void go_achieve_log_notify::clear_has_role_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void go_achieve_log_notify::clear_role_uid() {
  role_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_role_uid();
}
inline ::google::protobuf::uint64 go_achieve_log_notify::role_uid() const {
  return role_uid_;
}
inline void go_achieve_log_notify::set_role_uid(::google::protobuf::uint64 value) {
  set_has_role_uid();
  role_uid_ = value;
}

// required uint32 achieve_id = 2;
inline bool go_achieve_log_notify::has_achieve_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void go_achieve_log_notify::set_has_achieve_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void go_achieve_log_notify::clear_has_achieve_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void go_achieve_log_notify::clear_achieve_id() {
  achieve_id_ = 0u;
  clear_has_achieve_id();
}
inline ::google::protobuf::uint32 go_achieve_log_notify::achieve_id() const {
  return achieve_id_;
}
inline void go_achieve_log_notify::set_achieve_id(::google::protobuf::uint32 value) {
  set_has_achieve_id();
  achieve_id_ = value;
}

// required uint32 old_level = 3;
inline bool go_achieve_log_notify::has_old_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void go_achieve_log_notify::set_has_old_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void go_achieve_log_notify::clear_has_old_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void go_achieve_log_notify::clear_old_level() {
  old_level_ = 0u;
  clear_has_old_level();
}
inline ::google::protobuf::uint32 go_achieve_log_notify::old_level() const {
  return old_level_;
}
inline void go_achieve_log_notify::set_old_level(::google::protobuf::uint32 value) {
  set_has_old_level();
  old_level_ = value;
}

// required uint32 up_level = 4;
inline bool go_achieve_log_notify::has_up_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void go_achieve_log_notify::set_has_up_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void go_achieve_log_notify::clear_has_up_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void go_achieve_log_notify::clear_up_level() {
  up_level_ = 0u;
  clear_has_up_level();
}
inline ::google::protobuf::uint32 go_achieve_log_notify::up_level() const {
  return up_level_;
}
inline void go_achieve_log_notify::set_up_level(::google::protobuf::uint32 value) {
  set_has_up_level();
  up_level_ = value;
}

// required uint32 new_level = 5;
inline bool go_achieve_log_notify::has_new_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void go_achieve_log_notify::set_has_new_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void go_achieve_log_notify::clear_has_new_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void go_achieve_log_notify::clear_new_level() {
  new_level_ = 0u;
  clear_has_new_level();
}
inline ::google::protobuf::uint32 go_achieve_log_notify::new_level() const {
  return new_level_;
}
inline void go_achieve_log_notify::set_new_level(::google::protobuf::uint32 value) {
  set_has_new_level();
  new_level_ = value;
}

// required uint32 old_count = 6;
inline bool go_achieve_log_notify::has_old_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void go_achieve_log_notify::set_has_old_count() {
  _has_bits_[0] |= 0x00000020u;
}
inline void go_achieve_log_notify::clear_has_old_count() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void go_achieve_log_notify::clear_old_count() {
  old_count_ = 0u;
  clear_has_old_count();
}
inline ::google::protobuf::uint32 go_achieve_log_notify::old_count() const {
  return old_count_;
}
inline void go_achieve_log_notify::set_old_count(::google::protobuf::uint32 value) {
  set_has_old_count();
  old_count_ = value;
}

// required uint32 up_count = 7;
inline bool go_achieve_log_notify::has_up_count() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void go_achieve_log_notify::set_has_up_count() {
  _has_bits_[0] |= 0x00000040u;
}
inline void go_achieve_log_notify::clear_has_up_count() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void go_achieve_log_notify::clear_up_count() {
  up_count_ = 0u;
  clear_has_up_count();
}
inline ::google::protobuf::uint32 go_achieve_log_notify::up_count() const {
  return up_count_;
}
inline void go_achieve_log_notify::set_up_count(::google::protobuf::uint32 value) {
  set_has_up_count();
  up_count_ = value;
}

// required uint32 new_count = 8;
inline bool go_achieve_log_notify::has_new_count() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void go_achieve_log_notify::set_has_new_count() {
  _has_bits_[0] |= 0x00000080u;
}
inline void go_achieve_log_notify::clear_has_new_count() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void go_achieve_log_notify::clear_new_count() {
  new_count_ = 0u;
  clear_has_new_count();
}
inline ::google::protobuf::uint32 go_achieve_log_notify::new_count() const {
  return new_count_;
}
inline void go_achieve_log_notify::set_new_count(::google::protobuf::uint32 value) {
  set_has_new_count();
  new_count_ = value;
}

// required uint32 old_achieve_point = 9;
inline bool go_achieve_log_notify::has_old_achieve_point() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void go_achieve_log_notify::set_has_old_achieve_point() {
  _has_bits_[0] |= 0x00000100u;
}
inline void go_achieve_log_notify::clear_has_old_achieve_point() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void go_achieve_log_notify::clear_old_achieve_point() {
  old_achieve_point_ = 0u;
  clear_has_old_achieve_point();
}
inline ::google::protobuf::uint32 go_achieve_log_notify::old_achieve_point() const {
  return old_achieve_point_;
}
inline void go_achieve_log_notify::set_old_achieve_point(::google::protobuf::uint32 value) {
  set_has_old_achieve_point();
  old_achieve_point_ = value;
}

// required uint32 add_achieve_point = 10;
inline bool go_achieve_log_notify::has_add_achieve_point() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void go_achieve_log_notify::set_has_add_achieve_point() {
  _has_bits_[0] |= 0x00000200u;
}
inline void go_achieve_log_notify::clear_has_add_achieve_point() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void go_achieve_log_notify::clear_add_achieve_point() {
  add_achieve_point_ = 0u;
  clear_has_add_achieve_point();
}
inline ::google::protobuf::uint32 go_achieve_log_notify::add_achieve_point() const {
  return add_achieve_point_;
}
inline void go_achieve_log_notify::set_add_achieve_point(::google::protobuf::uint32 value) {
  set_has_add_achieve_point();
  add_achieve_point_ = value;
}

// required uint32 new_achieve_point = 11;
inline bool go_achieve_log_notify::has_new_achieve_point() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void go_achieve_log_notify::set_has_new_achieve_point() {
  _has_bits_[0] |= 0x00000400u;
}
inline void go_achieve_log_notify::clear_has_new_achieve_point() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void go_achieve_log_notify::clear_new_achieve_point() {
  new_achieve_point_ = 0u;
  clear_has_new_achieve_point();
}
inline ::google::protobuf::uint32 go_achieve_log_notify::new_achieve_point() const {
  return new_achieve_point_;
}
inline void go_achieve_log_notify::set_new_achieve_point(::google::protobuf::uint32 value) {
  set_has_new_achieve_point();
  new_achieve_point_ = value;
}

// required uint32 old_achieve_level = 12;
inline bool go_achieve_log_notify::has_old_achieve_level() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void go_achieve_log_notify::set_has_old_achieve_level() {
  _has_bits_[0] |= 0x00000800u;
}
inline void go_achieve_log_notify::clear_has_old_achieve_level() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void go_achieve_log_notify::clear_old_achieve_level() {
  old_achieve_level_ = 0u;
  clear_has_old_achieve_level();
}
inline ::google::protobuf::uint32 go_achieve_log_notify::old_achieve_level() const {
  return old_achieve_level_;
}
inline void go_achieve_log_notify::set_old_achieve_level(::google::protobuf::uint32 value) {
  set_has_old_achieve_level();
  old_achieve_level_ = value;
}

// required uint32 up_achieve_level = 13;
inline bool go_achieve_log_notify::has_up_achieve_level() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void go_achieve_log_notify::set_has_up_achieve_level() {
  _has_bits_[0] |= 0x00001000u;
}
inline void go_achieve_log_notify::clear_has_up_achieve_level() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void go_achieve_log_notify::clear_up_achieve_level() {
  up_achieve_level_ = 0u;
  clear_has_up_achieve_level();
}
inline ::google::protobuf::uint32 go_achieve_log_notify::up_achieve_level() const {
  return up_achieve_level_;
}
inline void go_achieve_log_notify::set_up_achieve_level(::google::protobuf::uint32 value) {
  set_has_up_achieve_level();
  up_achieve_level_ = value;
}

// required uint32 new_achieve_level = 14;
inline bool go_achieve_log_notify::has_new_achieve_level() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void go_achieve_log_notify::set_has_new_achieve_level() {
  _has_bits_[0] |= 0x00002000u;
}
inline void go_achieve_log_notify::clear_has_new_achieve_level() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void go_achieve_log_notify::clear_new_achieve_level() {
  new_achieve_level_ = 0u;
  clear_has_new_achieve_level();
}
inline ::google::protobuf::uint32 go_achieve_log_notify::new_achieve_level() const {
  return new_achieve_level_;
}
inline void go_achieve_log_notify::set_new_achieve_level(::google::protobuf::uint32 value) {
  set_has_new_achieve_level();
  new_achieve_level_ = value;
}

// required uint32 old_reward_get_level = 15;
inline bool go_achieve_log_notify::has_old_reward_get_level() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void go_achieve_log_notify::set_has_old_reward_get_level() {
  _has_bits_[0] |= 0x00004000u;
}
inline void go_achieve_log_notify::clear_has_old_reward_get_level() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void go_achieve_log_notify::clear_old_reward_get_level() {
  old_reward_get_level_ = 0u;
  clear_has_old_reward_get_level();
}
inline ::google::protobuf::uint32 go_achieve_log_notify::old_reward_get_level() const {
  return old_reward_get_level_;
}
inline void go_achieve_log_notify::set_old_reward_get_level(::google::protobuf::uint32 value) {
  set_has_old_reward_get_level();
  old_reward_get_level_ = value;
}

// required uint32 new_reward_get_level = 16;
inline bool go_achieve_log_notify::has_new_reward_get_level() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void go_achieve_log_notify::set_has_new_reward_get_level() {
  _has_bits_[0] |= 0x00008000u;
}
inline void go_achieve_log_notify::clear_has_new_reward_get_level() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void go_achieve_log_notify::clear_new_reward_get_level() {
  new_reward_get_level_ = 0u;
  clear_has_new_reward_get_level();
}
inline ::google::protobuf::uint32 go_achieve_log_notify::new_reward_get_level() const {
  return new_reward_get_level_;
}
inline void go_achieve_log_notify::set_new_reward_get_level(::google::protobuf::uint32 value) {
  set_has_new_reward_get_level();
  new_reward_get_level_ = value;
}

// required uint32 source_type = 17;
inline bool go_achieve_log_notify::has_source_type() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void go_achieve_log_notify::set_has_source_type() {
  _has_bits_[0] |= 0x00010000u;
}
inline void go_achieve_log_notify::clear_has_source_type() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void go_achieve_log_notify::clear_source_type() {
  source_type_ = 0u;
  clear_has_source_type();
}
inline ::google::protobuf::uint32 go_achieve_log_notify::source_type() const {
  return source_type_;
}
inline void go_achieve_log_notify::set_source_type(::google::protobuf::uint32 value) {
  set_has_source_type();
  source_type_ = value;
}

// optional uint32 source_param = 18;
inline bool go_achieve_log_notify::has_source_param() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void go_achieve_log_notify::set_has_source_param() {
  _has_bits_[0] |= 0x00020000u;
}
inline void go_achieve_log_notify::clear_has_source_param() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void go_achieve_log_notify::clear_source_param() {
  source_param_ = 0u;
  clear_has_source_param();
}
inline ::google::protobuf::uint32 go_achieve_log_notify::source_param() const {
  return source_param_;
}
inline void go_achieve_log_notify::set_source_param(::google::protobuf::uint32 value) {
  set_has_source_param();
  source_param_ = value;
}

// required uint32 log_time = 19;
inline bool go_achieve_log_notify::has_log_time() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void go_achieve_log_notify::set_has_log_time() {
  _has_bits_[0] |= 0x00040000u;
}
inline void go_achieve_log_notify::clear_has_log_time() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void go_achieve_log_notify::clear_log_time() {
  log_time_ = 0u;
  clear_has_log_time();
}
inline ::google::protobuf::uint32 go_achieve_log_notify::log_time() const {
  return log_time_;
}
inline void go_achieve_log_notify::set_log_time(::google::protobuf::uint32 value) {
  set_has_log_time();
  log_time_ = value;
}

// optional string sourec_type_str = 20;
inline bool go_achieve_log_notify::has_sourec_type_str() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void go_achieve_log_notify::set_has_sourec_type_str() {
  _has_bits_[0] |= 0x00080000u;
}
inline void go_achieve_log_notify::clear_has_sourec_type_str() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void go_achieve_log_notify::clear_sourec_type_str() {
  if (sourec_type_str_ != &::google::protobuf::internal::kEmptyString) {
    sourec_type_str_->clear();
  }
  clear_has_sourec_type_str();
}
inline const ::std::string& go_achieve_log_notify::sourec_type_str() const {
  return *sourec_type_str_;
}
inline void go_achieve_log_notify::set_sourec_type_str(const ::std::string& value) {
  set_has_sourec_type_str();
  if (sourec_type_str_ == &::google::protobuf::internal::kEmptyString) {
    sourec_type_str_ = new ::std::string;
  }
  sourec_type_str_->assign(value);
}
inline void go_achieve_log_notify::set_sourec_type_str(const char* value) {
  set_has_sourec_type_str();
  if (sourec_type_str_ == &::google::protobuf::internal::kEmptyString) {
    sourec_type_str_ = new ::std::string;
  }
  sourec_type_str_->assign(value);
}
inline void go_achieve_log_notify::set_sourec_type_str(const char* value, size_t size) {
  set_has_sourec_type_str();
  if (sourec_type_str_ == &::google::protobuf::internal::kEmptyString) {
    sourec_type_str_ = new ::std::string;
  }
  sourec_type_str_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* go_achieve_log_notify::mutable_sourec_type_str() {
  set_has_sourec_type_str();
  if (sourec_type_str_ == &::google::protobuf::internal::kEmptyString) {
    sourec_type_str_ = new ::std::string;
  }
  return sourec_type_str_;
}
inline ::std::string* go_achieve_log_notify::release_sourec_type_str() {
  clear_has_sourec_type_str();
  if (sourec_type_str_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sourec_type_str_;
    sourec_type_str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void go_achieve_log_notify::set_allocated_sourec_type_str(::std::string* sourec_type_str) {
  if (sourec_type_str_ != &::google::protobuf::internal::kEmptyString) {
    delete sourec_type_str_;
  }
  if (sourec_type_str) {
    set_has_sourec_type_str();
    sourec_type_str_ = sourec_type_str;
  } else {
    clear_has_sourec_type_str();
    sourec_type_str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// go_lifeforce_log_notify

// required uint64 role_uid = 1;
inline bool go_lifeforce_log_notify::has_role_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void go_lifeforce_log_notify::set_has_role_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void go_lifeforce_log_notify::clear_has_role_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void go_lifeforce_log_notify::clear_role_uid() {
  role_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_role_uid();
}
inline ::google::protobuf::uint64 go_lifeforce_log_notify::role_uid() const {
  return role_uid_;
}
inline void go_lifeforce_log_notify::set_role_uid(::google::protobuf::uint64 value) {
  set_has_role_uid();
  role_uid_ = value;
}

// required uint32 old_lifestate_level = 2;
inline bool go_lifeforce_log_notify::has_old_lifestate_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void go_lifeforce_log_notify::set_has_old_lifestate_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void go_lifeforce_log_notify::clear_has_old_lifestate_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void go_lifeforce_log_notify::clear_old_lifestate_level() {
  old_lifestate_level_ = 0u;
  clear_has_old_lifestate_level();
}
inline ::google::protobuf::uint32 go_lifeforce_log_notify::old_lifestate_level() const {
  return old_lifestate_level_;
}
inline void go_lifeforce_log_notify::set_old_lifestate_level(::google::protobuf::uint32 value) {
  set_has_old_lifestate_level();
  old_lifestate_level_ = value;
}

// required uint32 old_lifestar_level = 3;
inline bool go_lifeforce_log_notify::has_old_lifestar_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void go_lifeforce_log_notify::set_has_old_lifestar_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void go_lifeforce_log_notify::clear_has_old_lifestar_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void go_lifeforce_log_notify::clear_old_lifestar_level() {
  old_lifestar_level_ = 0u;
  clear_has_old_lifestar_level();
}
inline ::google::protobuf::uint32 go_lifeforce_log_notify::old_lifestar_level() const {
  return old_lifestar_level_;
}
inline void go_lifeforce_log_notify::set_old_lifestar_level(::google::protobuf::uint32 value) {
  set_has_old_lifestar_level();
  old_lifestar_level_ = value;
}

// required uint32 up_lifestate = 4;
inline bool go_lifeforce_log_notify::has_up_lifestate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void go_lifeforce_log_notify::set_has_up_lifestate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void go_lifeforce_log_notify::clear_has_up_lifestate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void go_lifeforce_log_notify::clear_up_lifestate() {
  up_lifestate_ = 0u;
  clear_has_up_lifestate();
}
inline ::google::protobuf::uint32 go_lifeforce_log_notify::up_lifestate() const {
  return up_lifestate_;
}
inline void go_lifeforce_log_notify::set_up_lifestate(::google::protobuf::uint32 value) {
  set_has_up_lifestate();
  up_lifestate_ = value;
}

// required uint32 up_lifestar = 5;
inline bool go_lifeforce_log_notify::has_up_lifestar() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void go_lifeforce_log_notify::set_has_up_lifestar() {
  _has_bits_[0] |= 0x00000010u;
}
inline void go_lifeforce_log_notify::clear_has_up_lifestar() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void go_lifeforce_log_notify::clear_up_lifestar() {
  up_lifestar_ = 0u;
  clear_has_up_lifestar();
}
inline ::google::protobuf::uint32 go_lifeforce_log_notify::up_lifestar() const {
  return up_lifestar_;
}
inline void go_lifeforce_log_notify::set_up_lifestar(::google::protobuf::uint32 value) {
  set_has_up_lifestar();
  up_lifestar_ = value;
}

// required uint32 new_lifestate_level = 6;
inline bool go_lifeforce_log_notify::has_new_lifestate_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void go_lifeforce_log_notify::set_has_new_lifestate_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void go_lifeforce_log_notify::clear_has_new_lifestate_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void go_lifeforce_log_notify::clear_new_lifestate_level() {
  new_lifestate_level_ = 0u;
  clear_has_new_lifestate_level();
}
inline ::google::protobuf::uint32 go_lifeforce_log_notify::new_lifestate_level() const {
  return new_lifestate_level_;
}
inline void go_lifeforce_log_notify::set_new_lifestate_level(::google::protobuf::uint32 value) {
  set_has_new_lifestate_level();
  new_lifestate_level_ = value;
}

// required uint32 new_lifestar_level = 7;
inline bool go_lifeforce_log_notify::has_new_lifestar_level() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void go_lifeforce_log_notify::set_has_new_lifestar_level() {
  _has_bits_[0] |= 0x00000040u;
}
inline void go_lifeforce_log_notify::clear_has_new_lifestar_level() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void go_lifeforce_log_notify::clear_new_lifestar_level() {
  new_lifestar_level_ = 0u;
  clear_has_new_lifestar_level();
}
inline ::google::protobuf::uint32 go_lifeforce_log_notify::new_lifestar_level() const {
  return new_lifestar_level_;
}
inline void go_lifeforce_log_notify::set_new_lifestar_level(::google::protobuf::uint32 value) {
  set_has_new_lifestar_level();
  new_lifestar_level_ = value;
}

// optional uint32 source_type = 8;
inline bool go_lifeforce_log_notify::has_source_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void go_lifeforce_log_notify::set_has_source_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void go_lifeforce_log_notify::clear_has_source_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void go_lifeforce_log_notify::clear_source_type() {
  source_type_ = 0u;
  clear_has_source_type();
}
inline ::google::protobuf::uint32 go_lifeforce_log_notify::source_type() const {
  return source_type_;
}
inline void go_lifeforce_log_notify::set_source_type(::google::protobuf::uint32 value) {
  set_has_source_type();
  source_type_ = value;
}

// optional uint32 source_param = 9;
inline bool go_lifeforce_log_notify::has_source_param() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void go_lifeforce_log_notify::set_has_source_param() {
  _has_bits_[0] |= 0x00000100u;
}
inline void go_lifeforce_log_notify::clear_has_source_param() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void go_lifeforce_log_notify::clear_source_param() {
  source_param_ = 0u;
  clear_has_source_param();
}
inline ::google::protobuf::uint32 go_lifeforce_log_notify::source_param() const {
  return source_param_;
}
inline void go_lifeforce_log_notify::set_source_param(::google::protobuf::uint32 value) {
  set_has_source_param();
  source_param_ = value;
}

// required uint32 log_time = 10;
inline bool go_lifeforce_log_notify::has_log_time() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void go_lifeforce_log_notify::set_has_log_time() {
  _has_bits_[0] |= 0x00000200u;
}
inline void go_lifeforce_log_notify::clear_has_log_time() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void go_lifeforce_log_notify::clear_log_time() {
  log_time_ = 0u;
  clear_has_log_time();
}
inline ::google::protobuf::uint32 go_lifeforce_log_notify::log_time() const {
  return log_time_;
}
inline void go_lifeforce_log_notify::set_log_time(::google::protobuf::uint32 value) {
  set_has_log_time();
  log_time_ = value;
}

// -------------------------------------------------------------------

// go_dungeon_log_notify

// required uint64 role_uid = 1;
inline bool go_dungeon_log_notify::has_role_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void go_dungeon_log_notify::set_has_role_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void go_dungeon_log_notify::clear_has_role_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void go_dungeon_log_notify::clear_role_uid() {
  role_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_role_uid();
}
inline ::google::protobuf::uint64 go_dungeon_log_notify::role_uid() const {
  return role_uid_;
}
inline void go_dungeon_log_notify::set_role_uid(::google::protobuf::uint64 value) {
  set_has_role_uid();
  role_uid_ = value;
}

// optional uint32 dungeon_id = 2;
inline bool go_dungeon_log_notify::has_dungeon_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void go_dungeon_log_notify::set_has_dungeon_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void go_dungeon_log_notify::clear_has_dungeon_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void go_dungeon_log_notify::clear_dungeon_id() {
  dungeon_id_ = 0u;
  clear_has_dungeon_id();
}
inline ::google::protobuf::uint32 go_dungeon_log_notify::dungeon_id() const {
  return dungeon_id_;
}
inline void go_dungeon_log_notify::set_dungeon_id(::google::protobuf::uint32 value) {
  set_has_dungeon_id();
  dungeon_id_ = value;
}

// optional uint32 create_type = 3;
inline bool go_dungeon_log_notify::has_create_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void go_dungeon_log_notify::set_has_create_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void go_dungeon_log_notify::clear_has_create_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void go_dungeon_log_notify::clear_create_type() {
  create_type_ = 0u;
  clear_has_create_type();
}
inline ::google::protobuf::uint32 go_dungeon_log_notify::create_type() const {
  return create_type_;
}
inline void go_dungeon_log_notify::set_create_type(::google::protobuf::uint32 value) {
  set_has_create_type();
  create_type_ = value;
}

// optional uint64 create_id = 4;
inline bool go_dungeon_log_notify::has_create_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void go_dungeon_log_notify::set_has_create_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void go_dungeon_log_notify::clear_has_create_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void go_dungeon_log_notify::clear_create_id() {
  create_id_ = GOOGLE_ULONGLONG(0);
  clear_has_create_id();
}
inline ::google::protobuf::uint64 go_dungeon_log_notify::create_id() const {
  return create_id_;
}
inline void go_dungeon_log_notify::set_create_id(::google::protobuf::uint64 value) {
  set_has_create_id();
  create_id_ = value;
}

// optional uint32 source_type = 5;
inline bool go_dungeon_log_notify::has_source_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void go_dungeon_log_notify::set_has_source_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void go_dungeon_log_notify::clear_has_source_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void go_dungeon_log_notify::clear_source_type() {
  source_type_ = 0u;
  clear_has_source_type();
}
inline ::google::protobuf::uint32 go_dungeon_log_notify::source_type() const {
  return source_type_;
}
inline void go_dungeon_log_notify::set_source_type(::google::protobuf::uint32 value) {
  set_has_source_type();
  source_type_ = value;
}

// optional uint32 source_param = 6;
inline bool go_dungeon_log_notify::has_source_param() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void go_dungeon_log_notify::set_has_source_param() {
  _has_bits_[0] |= 0x00000020u;
}
inline void go_dungeon_log_notify::clear_has_source_param() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void go_dungeon_log_notify::clear_source_param() {
  source_param_ = 0u;
  clear_has_source_param();
}
inline ::google::protobuf::uint32 go_dungeon_log_notify::source_param() const {
  return source_param_;
}
inline void go_dungeon_log_notify::set_source_param(::google::protobuf::uint32 value) {
  set_has_source_param();
  source_param_ = value;
}

// optional uint32 log_time = 7;
inline bool go_dungeon_log_notify::has_log_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void go_dungeon_log_notify::set_has_log_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void go_dungeon_log_notify::clear_has_log_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void go_dungeon_log_notify::clear_log_time() {
  log_time_ = 0u;
  clear_has_log_time();
}
inline ::google::protobuf::uint32 go_dungeon_log_notify::log_time() const {
  return log_time_;
}
inline void go_dungeon_log_notify::set_log_time(::google::protobuf::uint32 value) {
  set_has_log_time();
  log_time_ = value;
}

// -------------------------------------------------------------------

// go_role_buff_log_notify

// required uint64 role_uid = 1;
inline bool go_role_buff_log_notify::has_role_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void go_role_buff_log_notify::set_has_role_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void go_role_buff_log_notify::clear_has_role_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void go_role_buff_log_notify::clear_role_uid() {
  role_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_role_uid();
}
inline ::google::protobuf::uint64 go_role_buff_log_notify::role_uid() const {
  return role_uid_;
}
inline void go_role_buff_log_notify::set_role_uid(::google::protobuf::uint64 value) {
  set_has_role_uid();
  role_uid_ = value;
}

// optional uint32 buff_id = 2;
inline bool go_role_buff_log_notify::has_buff_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void go_role_buff_log_notify::set_has_buff_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void go_role_buff_log_notify::clear_has_buff_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void go_role_buff_log_notify::clear_buff_id() {
  buff_id_ = 0u;
  clear_has_buff_id();
}
inline ::google::protobuf::uint32 go_role_buff_log_notify::buff_id() const {
  return buff_id_;
}
inline void go_role_buff_log_notify::set_buff_id(::google::protobuf::uint32 value) {
  set_has_buff_id();
  buff_id_ = value;
}

// optional uint32 op_type = 3;
inline bool go_role_buff_log_notify::has_op_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void go_role_buff_log_notify::set_has_op_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void go_role_buff_log_notify::clear_has_op_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void go_role_buff_log_notify::clear_op_type() {
  op_type_ = 0u;
  clear_has_op_type();
}
inline ::google::protobuf::uint32 go_role_buff_log_notify::op_type() const {
  return op_type_;
}
inline void go_role_buff_log_notify::set_op_type(::google::protobuf::uint32 value) {
  set_has_op_type();
  op_type_ = value;
}

// optional uint32 speed = 4;
inline bool go_role_buff_log_notify::has_speed() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void go_role_buff_log_notify::set_has_speed() {
  _has_bits_[0] |= 0x00000008u;
}
inline void go_role_buff_log_notify::clear_has_speed() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void go_role_buff_log_notify::clear_speed() {
  speed_ = 0u;
  clear_has_speed();
}
inline ::google::protobuf::uint32 go_role_buff_log_notify::speed() const {
  return speed_;
}
inline void go_role_buff_log_notify::set_speed(::google::protobuf::uint32 value) {
  set_has_speed();
  speed_ = value;
}

// optional uint32 source_type = 5;
inline bool go_role_buff_log_notify::has_source_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void go_role_buff_log_notify::set_has_source_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void go_role_buff_log_notify::clear_has_source_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void go_role_buff_log_notify::clear_source_type() {
  source_type_ = 0u;
  clear_has_source_type();
}
inline ::google::protobuf::uint32 go_role_buff_log_notify::source_type() const {
  return source_type_;
}
inline void go_role_buff_log_notify::set_source_type(::google::protobuf::uint32 value) {
  set_has_source_type();
  source_type_ = value;
}

// optional uint32 source_param = 6;
inline bool go_role_buff_log_notify::has_source_param() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void go_role_buff_log_notify::set_has_source_param() {
  _has_bits_[0] |= 0x00000020u;
}
inline void go_role_buff_log_notify::clear_has_source_param() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void go_role_buff_log_notify::clear_source_param() {
  source_param_ = 0u;
  clear_has_source_param();
}
inline ::google::protobuf::uint32 go_role_buff_log_notify::source_param() const {
  return source_param_;
}
inline void go_role_buff_log_notify::set_source_param(::google::protobuf::uint32 value) {
  set_has_source_param();
  source_param_ = value;
}

// optional uint32 log_time = 7;
inline bool go_role_buff_log_notify::has_log_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void go_role_buff_log_notify::set_has_log_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void go_role_buff_log_notify::clear_has_log_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void go_role_buff_log_notify::clear_log_time() {
  log_time_ = 0u;
  clear_has_log_time();
}
inline ::google::protobuf::uint32 go_role_buff_log_notify::log_time() const {
  return log_time_;
}
inline void go_role_buff_log_notify::set_log_time(::google::protobuf::uint32 value) {
  set_has_log_time();
  log_time_ = value;
}

// -------------------------------------------------------------------

// eo_goods_log_notify

// optional uint64 role_uid = 1;
inline bool eo_goods_log_notify::has_role_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void eo_goods_log_notify::set_has_role_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void eo_goods_log_notify::clear_has_role_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void eo_goods_log_notify::clear_role_uid() {
  role_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_role_uid();
}
inline ::google::protobuf::uint64 eo_goods_log_notify::role_uid() const {
  return role_uid_;
}
inline void eo_goods_log_notify::set_role_uid(::google::protobuf::uint64 value) {
  set_has_role_uid();
  role_uid_ = value;
}

// optional string role_name = 2;
inline bool eo_goods_log_notify::has_role_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void eo_goods_log_notify::set_has_role_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void eo_goods_log_notify::clear_has_role_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void eo_goods_log_notify::clear_role_name() {
  if (role_name_ != &::google::protobuf::internal::kEmptyString) {
    role_name_->clear();
  }
  clear_has_role_name();
}
inline const ::std::string& eo_goods_log_notify::role_name() const {
  return *role_name_;
}
inline void eo_goods_log_notify::set_role_name(const ::std::string& value) {
  set_has_role_name();
  if (role_name_ == &::google::protobuf::internal::kEmptyString) {
    role_name_ = new ::std::string;
  }
  role_name_->assign(value);
}
inline void eo_goods_log_notify::set_role_name(const char* value) {
  set_has_role_name();
  if (role_name_ == &::google::protobuf::internal::kEmptyString) {
    role_name_ = new ::std::string;
  }
  role_name_->assign(value);
}
inline void eo_goods_log_notify::set_role_name(const char* value, size_t size) {
  set_has_role_name();
  if (role_name_ == &::google::protobuf::internal::kEmptyString) {
    role_name_ = new ::std::string;
  }
  role_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* eo_goods_log_notify::mutable_role_name() {
  set_has_role_name();
  if (role_name_ == &::google::protobuf::internal::kEmptyString) {
    role_name_ = new ::std::string;
  }
  return role_name_;
}
inline ::std::string* eo_goods_log_notify::release_role_name() {
  clear_has_role_name();
  if (role_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = role_name_;
    role_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void eo_goods_log_notify::set_allocated_role_name(::std::string* role_name) {
  if (role_name_ != &::google::protobuf::internal::kEmptyString) {
    delete role_name_;
  }
  if (role_name) {
    set_has_role_name();
    role_name_ = role_name;
  } else {
    clear_has_role_name();
    role_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 goods_uid = 3;
inline bool eo_goods_log_notify::has_goods_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void eo_goods_log_notify::set_has_goods_uid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void eo_goods_log_notify::clear_has_goods_uid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void eo_goods_log_notify::clear_goods_uid() {
  goods_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_goods_uid();
}
inline ::google::protobuf::uint64 eo_goods_log_notify::goods_uid() const {
  return goods_uid_;
}
inline void eo_goods_log_notify::set_goods_uid(::google::protobuf::uint64 value) {
  set_has_goods_uid();
  goods_uid_ = value;
}

// optional uint32 item_tid = 4;
inline bool eo_goods_log_notify::has_item_tid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void eo_goods_log_notify::set_has_item_tid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void eo_goods_log_notify::clear_has_item_tid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void eo_goods_log_notify::clear_item_tid() {
  item_tid_ = 0u;
  clear_has_item_tid();
}
inline ::google::protobuf::uint32 eo_goods_log_notify::item_tid() const {
  return item_tid_;
}
inline void eo_goods_log_notify::set_item_tid(::google::protobuf::uint32 value) {
  set_has_item_tid();
  item_tid_ = value;
}

// optional uint32 item_num = 5;
inline bool eo_goods_log_notify::has_item_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void eo_goods_log_notify::set_has_item_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void eo_goods_log_notify::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void eo_goods_log_notify::clear_item_num() {
  item_num_ = 0u;
  clear_has_item_num();
}
inline ::google::protobuf::uint32 eo_goods_log_notify::item_num() const {
  return item_num_;
}
inline void eo_goods_log_notify::set_item_num(::google::protobuf::uint32 value) {
  set_has_item_num();
  item_num_ = value;
}

// optional uint32 price = 6;
inline bool eo_goods_log_notify::has_price() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void eo_goods_log_notify::set_has_price() {
  _has_bits_[0] |= 0x00000020u;
}
inline void eo_goods_log_notify::clear_has_price() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void eo_goods_log_notify::clear_price() {
  price_ = 0u;
  clear_has_price();
}
inline ::google::protobuf::uint32 eo_goods_log_notify::price() const {
  return price_;
}
inline void eo_goods_log_notify::set_price(::google::protobuf::uint32 value) {
  set_has_price();
  price_ = value;
}

// optional uint32 selled_num = 7;
inline bool eo_goods_log_notify::has_selled_num() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void eo_goods_log_notify::set_has_selled_num() {
  _has_bits_[0] |= 0x00000040u;
}
inline void eo_goods_log_notify::clear_has_selled_num() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void eo_goods_log_notify::clear_selled_num() {
  selled_num_ = 0u;
  clear_has_selled_num();
}
inline ::google::protobuf::uint32 eo_goods_log_notify::selled_num() const {
  return selled_num_;
}
inline void eo_goods_log_notify::set_selled_num(::google::protobuf::uint32 value) {
  set_has_selled_num();
  selled_num_ = value;
}

// optional uint32 profit = 8;
inline bool eo_goods_log_notify::has_profit() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void eo_goods_log_notify::set_has_profit() {
  _has_bits_[0] |= 0x00000080u;
}
inline void eo_goods_log_notify::clear_has_profit() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void eo_goods_log_notify::clear_profit() {
  profit_ = 0u;
  clear_has_profit();
}
inline ::google::protobuf::uint32 eo_goods_log_notify::profit() const {
  return profit_;
}
inline void eo_goods_log_notify::set_profit(::google::protobuf::uint32 value) {
  set_has_profit();
  profit_ = value;
}

// optional uint32 state = 9;
inline bool eo_goods_log_notify::has_state() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void eo_goods_log_notify::set_has_state() {
  _has_bits_[0] |= 0x00000100u;
}
inline void eo_goods_log_notify::clear_has_state() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void eo_goods_log_notify::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 eo_goods_log_notify::state() const {
  return state_;
}
inline void eo_goods_log_notify::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
}

// optional uint32 source_type = 11;
inline bool eo_goods_log_notify::has_source_type() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void eo_goods_log_notify::set_has_source_type() {
  _has_bits_[0] |= 0x00000200u;
}
inline void eo_goods_log_notify::clear_has_source_type() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void eo_goods_log_notify::clear_source_type() {
  source_type_ = 0u;
  clear_has_source_type();
}
inline ::google::protobuf::uint32 eo_goods_log_notify::source_type() const {
  return source_type_;
}
inline void eo_goods_log_notify::set_source_type(::google::protobuf::uint32 value) {
  set_has_source_type();
  source_type_ = value;
}

// optional uint32 log_time = 13;
inline bool eo_goods_log_notify::has_log_time() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void eo_goods_log_notify::set_has_log_time() {
  _has_bits_[0] |= 0x00000400u;
}
inline void eo_goods_log_notify::clear_has_log_time() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void eo_goods_log_notify::clear_log_time() {
  log_time_ = 0u;
  clear_has_log_time();
}
inline ::google::protobuf::uint32 eo_goods_log_notify::log_time() const {
  return log_time_;
}
inline void eo_goods_log_notify::set_log_time(::google::protobuf::uint32 value) {
  set_has_log_time();
  log_time_ = value;
}

// -------------------------------------------------------------------

// go_role_new_guide_log_notify

// required uint64 role_uid = 1;
inline bool go_role_new_guide_log_notify::has_role_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void go_role_new_guide_log_notify::set_has_role_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void go_role_new_guide_log_notify::clear_has_role_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void go_role_new_guide_log_notify::clear_role_uid() {
  role_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_role_uid();
}
inline ::google::protobuf::uint64 go_role_new_guide_log_notify::role_uid() const {
  return role_uid_;
}
inline void go_role_new_guide_log_notify::set_role_uid(::google::protobuf::uint64 value) {
  set_has_role_uid();
  role_uid_ = value;
}

// optional uint32 new_guide_id = 2;
inline bool go_role_new_guide_log_notify::has_new_guide_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void go_role_new_guide_log_notify::set_has_new_guide_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void go_role_new_guide_log_notify::clear_has_new_guide_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void go_role_new_guide_log_notify::clear_new_guide_id() {
  new_guide_id_ = 0u;
  clear_has_new_guide_id();
}
inline ::google::protobuf::uint32 go_role_new_guide_log_notify::new_guide_id() const {
  return new_guide_id_;
}
inline void go_role_new_guide_log_notify::set_new_guide_id(::google::protobuf::uint32 value) {
  set_has_new_guide_id();
  new_guide_id_ = value;
}

// optional uint32 source_type = 3;
inline bool go_role_new_guide_log_notify::has_source_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void go_role_new_guide_log_notify::set_has_source_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void go_role_new_guide_log_notify::clear_has_source_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void go_role_new_guide_log_notify::clear_source_type() {
  source_type_ = 0u;
  clear_has_source_type();
}
inline ::google::protobuf::uint32 go_role_new_guide_log_notify::source_type() const {
  return source_type_;
}
inline void go_role_new_guide_log_notify::set_source_type(::google::protobuf::uint32 value) {
  set_has_source_type();
  source_type_ = value;
}

// optional uint32 source_param = 4;
inline bool go_role_new_guide_log_notify::has_source_param() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void go_role_new_guide_log_notify::set_has_source_param() {
  _has_bits_[0] |= 0x00000008u;
}
inline void go_role_new_guide_log_notify::clear_has_source_param() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void go_role_new_guide_log_notify::clear_source_param() {
  source_param_ = 0u;
  clear_has_source_param();
}
inline ::google::protobuf::uint32 go_role_new_guide_log_notify::source_param() const {
  return source_param_;
}
inline void go_role_new_guide_log_notify::set_source_param(::google::protobuf::uint32 value) {
  set_has_source_param();
  source_param_ = value;
}

// optional uint32 log_time = 5;
inline bool go_role_new_guide_log_notify::has_log_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void go_role_new_guide_log_notify::set_has_log_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void go_role_new_guide_log_notify::clear_has_log_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void go_role_new_guide_log_notify::clear_log_time() {
  log_time_ = 0u;
  clear_has_log_time();
}
inline ::google::protobuf::uint32 go_role_new_guide_log_notify::log_time() const {
  return log_time_;
}
inline void go_role_new_guide_log_notify::set_log_time(::google::protobuf::uint32 value) {
  set_has_log_time();
  log_time_ = value;
}

// -------------------------------------------------------------------

// go_role_trade_log_notify

// required uint64 role_uid = 1;
inline bool go_role_trade_log_notify::has_role_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void go_role_trade_log_notify::set_has_role_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void go_role_trade_log_notify::clear_has_role_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void go_role_trade_log_notify::clear_role_uid() {
  role_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_role_uid();
}
inline ::google::protobuf::uint64 go_role_trade_log_notify::role_uid() const {
  return role_uid_;
}
inline void go_role_trade_log_notify::set_role_uid(::google::protobuf::uint64 value) {
  set_has_role_uid();
  role_uid_ = value;
}

// optional uint32 item_tid = 2;
inline bool go_role_trade_log_notify::has_item_tid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void go_role_trade_log_notify::set_has_item_tid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void go_role_trade_log_notify::clear_has_item_tid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void go_role_trade_log_notify::clear_item_tid() {
  item_tid_ = 0u;
  clear_has_item_tid();
}
inline ::google::protobuf::uint32 go_role_trade_log_notify::item_tid() const {
  return item_tid_;
}
inline void go_role_trade_log_notify::set_item_tid(::google::protobuf::uint32 value) {
  set_has_item_tid();
  item_tid_ = value;
}

// optional uint32 price = 3;
inline bool go_role_trade_log_notify::has_price() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void go_role_trade_log_notify::set_has_price() {
  _has_bits_[0] |= 0x00000004u;
}
inline void go_role_trade_log_notify::clear_has_price() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void go_role_trade_log_notify::clear_price() {
  price_ = 0u;
  clear_has_price();
}
inline ::google::protobuf::uint32 go_role_trade_log_notify::price() const {
  return price_;
}
inline void go_role_trade_log_notify::set_price(::google::protobuf::uint32 value) {
  set_has_price();
  price_ = value;
}

// optional uint32 num = 4;
inline bool go_role_trade_log_notify::has_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void go_role_trade_log_notify::set_has_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void go_role_trade_log_notify::clear_has_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void go_role_trade_log_notify::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 go_role_trade_log_notify::num() const {
  return num_;
}
inline void go_role_trade_log_notify::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
}

// optional uint32 tax = 5;
inline bool go_role_trade_log_notify::has_tax() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void go_role_trade_log_notify::set_has_tax() {
  _has_bits_[0] |= 0x00000010u;
}
inline void go_role_trade_log_notify::clear_has_tax() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void go_role_trade_log_notify::clear_tax() {
  tax_ = 0u;
  clear_has_tax();
}
inline ::google::protobuf::uint32 go_role_trade_log_notify::tax() const {
  return tax_;
}
inline void go_role_trade_log_notify::set_tax(::google::protobuf::uint32 value) {
  set_has_tax();
  tax_ = value;
}

// optional uint32 total_num = 6;
inline bool go_role_trade_log_notify::has_total_num() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void go_role_trade_log_notify::set_has_total_num() {
  _has_bits_[0] |= 0x00000020u;
}
inline void go_role_trade_log_notify::clear_has_total_num() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void go_role_trade_log_notify::clear_total_num() {
  total_num_ = 0u;
  clear_has_total_num();
}
inline ::google::protobuf::uint32 go_role_trade_log_notify::total_num() const {
  return total_num_;
}
inline void go_role_trade_log_notify::set_total_num(::google::protobuf::uint32 value) {
  set_has_total_num();
  total_num_ = value;
}

// optional uint32 total_cost = 7;
inline bool go_role_trade_log_notify::has_total_cost() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void go_role_trade_log_notify::set_has_total_cost() {
  _has_bits_[0] |= 0x00000040u;
}
inline void go_role_trade_log_notify::clear_has_total_cost() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void go_role_trade_log_notify::clear_total_cost() {
  total_cost_ = 0u;
  clear_has_total_cost();
}
inline ::google::protobuf::uint32 go_role_trade_log_notify::total_cost() const {
  return total_cost_;
}
inline void go_role_trade_log_notify::set_total_cost(::google::protobuf::uint32 value) {
  set_has_total_cost();
  total_cost_ = value;
}

// optional uint32 gain = 8;
inline bool go_role_trade_log_notify::has_gain() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void go_role_trade_log_notify::set_has_gain() {
  _has_bits_[0] |= 0x00000080u;
}
inline void go_role_trade_log_notify::clear_has_gain() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void go_role_trade_log_notify::clear_gain() {
  gain_ = 0u;
  clear_has_gain();
}
inline ::google::protobuf::uint32 go_role_trade_log_notify::gain() const {
  return gain_;
}
inline void go_role_trade_log_notify::set_gain(::google::protobuf::uint32 value) {
  set_has_gain();
  gain_ = value;
}

// optional uint32 trade_id = 9;
inline bool go_role_trade_log_notify::has_trade_id() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void go_role_trade_log_notify::set_has_trade_id() {
  _has_bits_[0] |= 0x00000100u;
}
inline void go_role_trade_log_notify::clear_has_trade_id() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void go_role_trade_log_notify::clear_trade_id() {
  trade_id_ = 0u;
  clear_has_trade_id();
}
inline ::google::protobuf::uint32 go_role_trade_log_notify::trade_id() const {
  return trade_id_;
}
inline void go_role_trade_log_notify::set_trade_id(::google::protobuf::uint32 value) {
  set_has_trade_id();
  trade_id_ = value;
}

// optional uint32 op_type = 10;
inline bool go_role_trade_log_notify::has_op_type() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void go_role_trade_log_notify::set_has_op_type() {
  _has_bits_[0] |= 0x00000200u;
}
inline void go_role_trade_log_notify::clear_has_op_type() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void go_role_trade_log_notify::clear_op_type() {
  op_type_ = 0u;
  clear_has_op_type();
}
inline ::google::protobuf::uint32 go_role_trade_log_notify::op_type() const {
  return op_type_;
}
inline void go_role_trade_log_notify::set_op_type(::google::protobuf::uint32 value) {
  set_has_op_type();
  op_type_ = value;
}

// optional uint32 source_type = 11;
inline bool go_role_trade_log_notify::has_source_type() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void go_role_trade_log_notify::set_has_source_type() {
  _has_bits_[0] |= 0x00000400u;
}
inline void go_role_trade_log_notify::clear_has_source_type() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void go_role_trade_log_notify::clear_source_type() {
  source_type_ = 0u;
  clear_has_source_type();
}
inline ::google::protobuf::uint32 go_role_trade_log_notify::source_type() const {
  return source_type_;
}
inline void go_role_trade_log_notify::set_source_type(::google::protobuf::uint32 value) {
  set_has_source_type();
  source_type_ = value;
}

// optional uint32 log_time = 12;
inline bool go_role_trade_log_notify::has_log_time() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void go_role_trade_log_notify::set_has_log_time() {
  _has_bits_[0] |= 0x00000800u;
}
inline void go_role_trade_log_notify::clear_has_log_time() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void go_role_trade_log_notify::clear_log_time() {
  log_time_ = 0u;
  clear_has_log_time();
}
inline ::google::protobuf::uint32 go_role_trade_log_notify::log_time() const {
  return log_time_;
}
inline void go_role_trade_log_notify::set_log_time(::google::protobuf::uint32 value) {
  set_has_log_time();
  log_time_ = value;
}

// -------------------------------------------------------------------

// go_role_recharge_log_notify

// required uint64 role_uid = 1;
inline bool go_role_recharge_log_notify::has_role_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void go_role_recharge_log_notify::set_has_role_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void go_role_recharge_log_notify::clear_has_role_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void go_role_recharge_log_notify::clear_role_uid() {
  role_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_role_uid();
}
inline ::google::protobuf::uint64 go_role_recharge_log_notify::role_uid() const {
  return role_uid_;
}
inline void go_role_recharge_log_notify::set_role_uid(::google::protobuf::uint64 value) {
  set_has_role_uid();
  role_uid_ = value;
}

// optional string order_id = 2;
inline bool go_role_recharge_log_notify::has_order_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void go_role_recharge_log_notify::set_has_order_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void go_role_recharge_log_notify::clear_has_order_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void go_role_recharge_log_notify::clear_order_id() {
  if (order_id_ != &::google::protobuf::internal::kEmptyString) {
    order_id_->clear();
  }
  clear_has_order_id();
}
inline const ::std::string& go_role_recharge_log_notify::order_id() const {
  return *order_id_;
}
inline void go_role_recharge_log_notify::set_order_id(const ::std::string& value) {
  set_has_order_id();
  if (order_id_ == &::google::protobuf::internal::kEmptyString) {
    order_id_ = new ::std::string;
  }
  order_id_->assign(value);
}
inline void go_role_recharge_log_notify::set_order_id(const char* value) {
  set_has_order_id();
  if (order_id_ == &::google::protobuf::internal::kEmptyString) {
    order_id_ = new ::std::string;
  }
  order_id_->assign(value);
}
inline void go_role_recharge_log_notify::set_order_id(const char* value, size_t size) {
  set_has_order_id();
  if (order_id_ == &::google::protobuf::internal::kEmptyString) {
    order_id_ = new ::std::string;
  }
  order_id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* go_role_recharge_log_notify::mutable_order_id() {
  set_has_order_id();
  if (order_id_ == &::google::protobuf::internal::kEmptyString) {
    order_id_ = new ::std::string;
  }
  return order_id_;
}
inline ::std::string* go_role_recharge_log_notify::release_order_id() {
  clear_has_order_id();
  if (order_id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = order_id_;
    order_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void go_role_recharge_log_notify::set_allocated_order_id(::std::string* order_id) {
  if (order_id_ != &::google::protobuf::internal::kEmptyString) {
    delete order_id_;
  }
  if (order_id) {
    set_has_order_id();
    order_id_ = order_id;
  } else {
    clear_has_order_id();
    order_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 recharge_tid = 3;
inline bool go_role_recharge_log_notify::has_recharge_tid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void go_role_recharge_log_notify::set_has_recharge_tid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void go_role_recharge_log_notify::clear_has_recharge_tid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void go_role_recharge_log_notify::clear_recharge_tid() {
  recharge_tid_ = 0u;
  clear_has_recharge_tid();
}
inline ::google::protobuf::uint32 go_role_recharge_log_notify::recharge_tid() const {
  return recharge_tid_;
}
inline void go_role_recharge_log_notify::set_recharge_tid(::google::protobuf::uint32 value) {
  set_has_recharge_tid();
  recharge_tid_ = value;
}

// optional uint32 recharge_rmb = 4;
inline bool go_role_recharge_log_notify::has_recharge_rmb() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void go_role_recharge_log_notify::set_has_recharge_rmb() {
  _has_bits_[0] |= 0x00000008u;
}
inline void go_role_recharge_log_notify::clear_has_recharge_rmb() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void go_role_recharge_log_notify::clear_recharge_rmb() {
  recharge_rmb_ = 0u;
  clear_has_recharge_rmb();
}
inline ::google::protobuf::uint32 go_role_recharge_log_notify::recharge_rmb() const {
  return recharge_rmb_;
}
inline void go_role_recharge_log_notify::set_recharge_rmb(::google::protobuf::uint32 value) {
  set_has_recharge_rmb();
  recharge_rmb_ = value;
}

// optional uint32 channel_id = 5;
inline bool go_role_recharge_log_notify::has_channel_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void go_role_recharge_log_notify::set_has_channel_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void go_role_recharge_log_notify::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void go_role_recharge_log_notify::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 go_role_recharge_log_notify::channel_id() const {
  return channel_id_;
}
inline void go_role_recharge_log_notify::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// optional uint32 log_time = 6;
inline bool go_role_recharge_log_notify::has_log_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void go_role_recharge_log_notify::set_has_log_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void go_role_recharge_log_notify::clear_has_log_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void go_role_recharge_log_notify::clear_log_time() {
  log_time_ = 0u;
  clear_has_log_time();
}
inline ::google::protobuf::uint32 go_role_recharge_log_notify::log_time() const {
  return log_time_;
}
inline void go_role_recharge_log_notify::set_log_time(::google::protobuf::uint32 value) {
  set_has_log_time();
  log_time_ = value;
}

// -------------------------------------------------------------------

// go_rmb_log_notify

// optional uint64 role_uid = 1;
inline bool go_rmb_log_notify::has_role_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void go_rmb_log_notify::set_has_role_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void go_rmb_log_notify::clear_has_role_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void go_rmb_log_notify::clear_role_uid() {
  role_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_role_uid();
}
inline ::google::protobuf::uint64 go_rmb_log_notify::role_uid() const {
  return role_uid_;
}
inline void go_rmb_log_notify::set_role_uid(::google::protobuf::uint64 value) {
  set_has_role_uid();
  role_uid_ = value;
}

// optional uint32 role_level = 2;
inline bool go_rmb_log_notify::has_role_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void go_rmb_log_notify::set_has_role_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void go_rmb_log_notify::clear_has_role_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void go_rmb_log_notify::clear_role_level() {
  role_level_ = 0u;
  clear_has_role_level();
}
inline ::google::protobuf::uint32 go_rmb_log_notify::role_level() const {
  return role_level_;
}
inline void go_rmb_log_notify::set_role_level(::google::protobuf::uint32 value) {
  set_has_role_level();
  role_level_ = value;
}

// optional uint32 old_num = 3;
inline bool go_rmb_log_notify::has_old_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void go_rmb_log_notify::set_has_old_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void go_rmb_log_notify::clear_has_old_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void go_rmb_log_notify::clear_old_num() {
  old_num_ = 0u;
  clear_has_old_num();
}
inline ::google::protobuf::uint32 go_rmb_log_notify::old_num() const {
  return old_num_;
}
inline void go_rmb_log_notify::set_old_num(::google::protobuf::uint32 value) {
  set_has_old_num();
  old_num_ = value;
}

// optional uint32 up_num = 4;
inline bool go_rmb_log_notify::has_up_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void go_rmb_log_notify::set_has_up_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void go_rmb_log_notify::clear_has_up_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void go_rmb_log_notify::clear_up_num() {
  up_num_ = 0u;
  clear_has_up_num();
}
inline ::google::protobuf::uint32 go_rmb_log_notify::up_num() const {
  return up_num_;
}
inline void go_rmb_log_notify::set_up_num(::google::protobuf::uint32 value) {
  set_has_up_num();
  up_num_ = value;
}

// optional uint32 new_num = 5;
inline bool go_rmb_log_notify::has_new_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void go_rmb_log_notify::set_has_new_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void go_rmb_log_notify::clear_has_new_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void go_rmb_log_notify::clear_new_num() {
  new_num_ = 0u;
  clear_has_new_num();
}
inline ::google::protobuf::uint32 go_rmb_log_notify::new_num() const {
  return new_num_;
}
inline void go_rmb_log_notify::set_new_num(::google::protobuf::uint32 value) {
  set_has_new_num();
  new_num_ = value;
}

// optional uint32 op_type = 6;
inline bool go_rmb_log_notify::has_op_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void go_rmb_log_notify::set_has_op_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void go_rmb_log_notify::clear_has_op_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void go_rmb_log_notify::clear_op_type() {
  op_type_ = 0u;
  clear_has_op_type();
}
inline ::google::protobuf::uint32 go_rmb_log_notify::op_type() const {
  return op_type_;
}
inline void go_rmb_log_notify::set_op_type(::google::protobuf::uint32 value) {
  set_has_op_type();
  op_type_ = value;
}

// optional uint32 source_type = 7;
inline bool go_rmb_log_notify::has_source_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void go_rmb_log_notify::set_has_source_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void go_rmb_log_notify::clear_has_source_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void go_rmb_log_notify::clear_source_type() {
  source_type_ = 0u;
  clear_has_source_type();
}
inline ::google::protobuf::uint32 go_rmb_log_notify::source_type() const {
  return source_type_;
}
inline void go_rmb_log_notify::set_source_type(::google::protobuf::uint32 value) {
  set_has_source_type();
  source_type_ = value;
}

// optional uint32 source_param = 8;
inline bool go_rmb_log_notify::has_source_param() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void go_rmb_log_notify::set_has_source_param() {
  _has_bits_[0] |= 0x00000080u;
}
inline void go_rmb_log_notify::clear_has_source_param() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void go_rmb_log_notify::clear_source_param() {
  source_param_ = 0u;
  clear_has_source_param();
}
inline ::google::protobuf::uint32 go_rmb_log_notify::source_param() const {
  return source_param_;
}
inline void go_rmb_log_notify::set_source_param(::google::protobuf::uint32 value) {
  set_has_source_param();
  source_param_ = value;
}

// optional uint32 log_time = 9;
inline bool go_rmb_log_notify::has_log_time() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void go_rmb_log_notify::set_has_log_time() {
  _has_bits_[0] |= 0x00000100u;
}
inline void go_rmb_log_notify::clear_has_log_time() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void go_rmb_log_notify::clear_log_time() {
  log_time_ = 0u;
  clear_has_log_time();
}
inline ::google::protobuf::uint32 go_rmb_log_notify::log_time() const {
  return log_time_;
}
inline void go_rmb_log_notify::set_log_time(::google::protobuf::uint32 value) {
  set_has_log_time();
  log_time_ = value;
}

// -------------------------------------------------------------------

// go_expedition_log_notify

// required uint64 role_uid = 1;
inline bool go_expedition_log_notify::has_role_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void go_expedition_log_notify::set_has_role_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void go_expedition_log_notify::clear_has_role_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void go_expedition_log_notify::clear_role_uid() {
  role_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_role_uid();
}
inline ::google::protobuf::uint64 go_expedition_log_notify::role_uid() const {
  return role_uid_;
}
inline void go_expedition_log_notify::set_role_uid(::google::protobuf::uint64 value) {
  set_has_role_uid();
  role_uid_ = value;
}

// required uint32 role_level = 2;
inline bool go_expedition_log_notify::has_role_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void go_expedition_log_notify::set_has_role_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void go_expedition_log_notify::clear_has_role_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void go_expedition_log_notify::clear_role_level() {
  role_level_ = 0u;
  clear_has_role_level();
}
inline ::google::protobuf::uint32 go_expedition_log_notify::role_level() const {
  return role_level_;
}
inline void go_expedition_log_notify::set_role_level(::google::protobuf::uint32 value) {
  set_has_role_level();
  role_level_ = value;
}

// required uint32 source_type = 3;
inline bool go_expedition_log_notify::has_source_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void go_expedition_log_notify::set_has_source_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void go_expedition_log_notify::clear_has_source_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void go_expedition_log_notify::clear_source_type() {
  source_type_ = 0u;
  clear_has_source_type();
}
inline ::google::protobuf::uint32 go_expedition_log_notify::source_type() const {
  return source_type_;
}
inline void go_expedition_log_notify::set_source_type(::google::protobuf::uint32 value) {
  set_has_source_type();
  source_type_ = value;
}

// required uint32 source_param = 4;
inline bool go_expedition_log_notify::has_source_param() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void go_expedition_log_notify::set_has_source_param() {
  _has_bits_[0] |= 0x00000008u;
}
inline void go_expedition_log_notify::clear_has_source_param() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void go_expedition_log_notify::clear_source_param() {
  source_param_ = 0u;
  clear_has_source_param();
}
inline ::google::protobuf::uint32 go_expedition_log_notify::source_param() const {
  return source_param_;
}
inline void go_expedition_log_notify::set_source_param(::google::protobuf::uint32 value) {
  set_has_source_param();
  source_param_ = value;
}

// required uint32 log_time = 5;
inline bool go_expedition_log_notify::has_log_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void go_expedition_log_notify::set_has_log_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void go_expedition_log_notify::clear_has_log_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void go_expedition_log_notify::clear_log_time() {
  log_time_ = 0u;
  clear_has_log_time();
}
inline ::google::protobuf::uint32 go_expedition_log_notify::log_time() const {
  return log_time_;
}
inline void go_expedition_log_notify::set_log_time(::google::protobuf::uint32 value) {
  set_has_log_time();
  log_time_ = value;
}

// -------------------------------------------------------------------

// eo_scene_log_notify

// optional uint64 role_uid = 1;
inline bool eo_scene_log_notify::has_role_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void eo_scene_log_notify::set_has_role_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void eo_scene_log_notify::clear_has_role_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void eo_scene_log_notify::clear_role_uid() {
  role_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_role_uid();
}
inline ::google::protobuf::uint64 eo_scene_log_notify::role_uid() const {
  return role_uid_;
}
inline void eo_scene_log_notify::set_role_uid(::google::protobuf::uint64 value) {
  set_has_role_uid();
  role_uid_ = value;
}

// optional uint32 old_map_tid = 2;
inline bool eo_scene_log_notify::has_old_map_tid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void eo_scene_log_notify::set_has_old_map_tid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void eo_scene_log_notify::clear_has_old_map_tid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void eo_scene_log_notify::clear_old_map_tid() {
  old_map_tid_ = 0u;
  clear_has_old_map_tid();
}
inline ::google::protobuf::uint32 eo_scene_log_notify::old_map_tid() const {
  return old_map_tid_;
}
inline void eo_scene_log_notify::set_old_map_tid(::google::protobuf::uint32 value) {
  set_has_old_map_tid();
  old_map_tid_ = value;
}

// optional uint32 new_map_tid = 3;
inline bool eo_scene_log_notify::has_new_map_tid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void eo_scene_log_notify::set_has_new_map_tid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void eo_scene_log_notify::clear_has_new_map_tid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void eo_scene_log_notify::clear_new_map_tid() {
  new_map_tid_ = 0u;
  clear_has_new_map_tid();
}
inline ::google::protobuf::uint32 eo_scene_log_notify::new_map_tid() const {
  return new_map_tid_;
}
inline void eo_scene_log_notify::set_new_map_tid(::google::protobuf::uint32 value) {
  set_has_new_map_tid();
  new_map_tid_ = value;
}

// optional uint32 source_type = 4;
inline bool eo_scene_log_notify::has_source_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void eo_scene_log_notify::set_has_source_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void eo_scene_log_notify::clear_has_source_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void eo_scene_log_notify::clear_source_type() {
  source_type_ = 0u;
  clear_has_source_type();
}
inline ::google::protobuf::uint32 eo_scene_log_notify::source_type() const {
  return source_type_;
}
inline void eo_scene_log_notify::set_source_type(::google::protobuf::uint32 value) {
  set_has_source_type();
  source_type_ = value;
}

// optional uint32 log_time = 5;
inline bool eo_scene_log_notify::has_log_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void eo_scene_log_notify::set_has_log_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void eo_scene_log_notify::clear_has_log_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void eo_scene_log_notify::clear_log_time() {
  log_time_ = 0u;
  clear_has_log_time();
}
inline ::google::protobuf::uint32 eo_scene_log_notify::log_time() const {
  return log_time_;
}
inline void eo_scene_log_notify::set_log_time(::google::protobuf::uint32 value) {
  set_has_log_time();
  log_time_ = value;
}

// -------------------------------------------------------------------

// go_combat_log_notify

// optional uint64 role_uid = 1;
inline bool go_combat_log_notify::has_role_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void go_combat_log_notify::set_has_role_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void go_combat_log_notify::clear_has_role_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void go_combat_log_notify::clear_role_uid() {
  role_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_role_uid();
}
inline ::google::protobuf::uint64 go_combat_log_notify::role_uid() const {
  return role_uid_;
}
inline void go_combat_log_notify::set_role_uid(::google::protobuf::uint64 value) {
  set_has_role_uid();
  role_uid_ = value;
}

// optional uint32 role_level = 2;
inline bool go_combat_log_notify::has_role_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void go_combat_log_notify::set_has_role_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void go_combat_log_notify::clear_has_role_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void go_combat_log_notify::clear_role_level() {
  role_level_ = 0u;
  clear_has_role_level();
}
inline ::google::protobuf::uint32 go_combat_log_notify::role_level() const {
  return role_level_;
}
inline void go_combat_log_notify::set_role_level(::google::protobuf::uint32 value) {
  set_has_role_level();
  role_level_ = value;
}

// optional uint32 fight_type = 3;
inline bool go_combat_log_notify::has_fight_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void go_combat_log_notify::set_has_fight_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void go_combat_log_notify::clear_has_fight_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void go_combat_log_notify::clear_fight_type() {
  fight_type_ = 0u;
  clear_has_fight_type();
}
inline ::google::protobuf::uint32 go_combat_log_notify::fight_type() const {
  return fight_type_;
}
inline void go_combat_log_notify::set_fight_type(::google::protobuf::uint32 value) {
  set_has_fight_type();
  fight_type_ = value;
}

// optional uint32 combat_type = 4;
inline bool go_combat_log_notify::has_combat_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void go_combat_log_notify::set_has_combat_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void go_combat_log_notify::clear_has_combat_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void go_combat_log_notify::clear_combat_type() {
  combat_type_ = 0u;
  clear_has_combat_type();
}
inline ::google::protobuf::uint32 go_combat_log_notify::combat_type() const {
  return combat_type_;
}
inline void go_combat_log_notify::set_combat_type(::google::protobuf::uint32 value) {
  set_has_combat_type();
  combat_type_ = value;
}

// repeated uint64 team_members = 5;
inline int go_combat_log_notify::team_members_size() const {
  return team_members_.size();
}
inline void go_combat_log_notify::clear_team_members() {
  team_members_.Clear();
}
inline ::google::protobuf::uint64 go_combat_log_notify::team_members(int index) const {
  return team_members_.Get(index);
}
inline void go_combat_log_notify::set_team_members(int index, ::google::protobuf::uint64 value) {
  team_members_.Set(index, value);
}
inline void go_combat_log_notify::add_team_members(::google::protobuf::uint64 value) {
  team_members_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
go_combat_log_notify::team_members() const {
  return team_members_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
go_combat_log_notify::mutable_team_members() {
  return &team_members_;
}

// repeated uint64 targets = 6;
inline int go_combat_log_notify::targets_size() const {
  return targets_.size();
}
inline void go_combat_log_notify::clear_targets() {
  targets_.Clear();
}
inline ::google::protobuf::uint64 go_combat_log_notify::targets(int index) const {
  return targets_.Get(index);
}
inline void go_combat_log_notify::set_targets(int index, ::google::protobuf::uint64 value) {
  targets_.Set(index, value);
}
inline void go_combat_log_notify::add_targets(::google::protobuf::uint64 value) {
  targets_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
go_combat_log_notify::targets() const {
  return targets_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
go_combat_log_notify::mutable_targets() {
  return &targets_;
}

// optional uint64 fight_uid = 7;
inline bool go_combat_log_notify::has_fight_uid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void go_combat_log_notify::set_has_fight_uid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void go_combat_log_notify::clear_has_fight_uid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void go_combat_log_notify::clear_fight_uid() {
  fight_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_fight_uid();
}
inline ::google::protobuf::uint64 go_combat_log_notify::fight_uid() const {
  return fight_uid_;
}
inline void go_combat_log_notify::set_fight_uid(::google::protobuf::uint64 value) {
  set_has_fight_uid();
  fight_uid_ = value;
}

// optional uint32 is_win = 8;
inline bool go_combat_log_notify::has_is_win() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void go_combat_log_notify::set_has_is_win() {
  _has_bits_[0] |= 0x00000080u;
}
inline void go_combat_log_notify::clear_has_is_win() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void go_combat_log_notify::clear_is_win() {
  is_win_ = 0u;
  clear_has_is_win();
}
inline ::google::protobuf::uint32 go_combat_log_notify::is_win() const {
  return is_win_;
}
inline void go_combat_log_notify::set_is_win(::google::protobuf::uint32 value) {
  set_has_is_win();
  is_win_ = value;
}

// optional uint32 start_time = 9;
inline bool go_combat_log_notify::has_start_time() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void go_combat_log_notify::set_has_start_time() {
  _has_bits_[0] |= 0x00000100u;
}
inline void go_combat_log_notify::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void go_combat_log_notify::clear_start_time() {
  start_time_ = 0u;
  clear_has_start_time();
}
inline ::google::protobuf::uint32 go_combat_log_notify::start_time() const {
  return start_time_;
}
inline void go_combat_log_notify::set_start_time(::google::protobuf::uint32 value) {
  set_has_start_time();
  start_time_ = value;
}

// optional uint32 fight_time = 10;
inline bool go_combat_log_notify::has_fight_time() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void go_combat_log_notify::set_has_fight_time() {
  _has_bits_[0] |= 0x00000200u;
}
inline void go_combat_log_notify::clear_has_fight_time() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void go_combat_log_notify::clear_fight_time() {
  fight_time_ = 0u;
  clear_has_fight_time();
}
inline ::google::protobuf::uint32 go_combat_log_notify::fight_time() const {
  return fight_time_;
}
inline void go_combat_log_notify::set_fight_time(::google::protobuf::uint32 value) {
  set_has_fight_time();
  fight_time_ = value;
}

// optional uint32 finish_time = 11;
inline bool go_combat_log_notify::has_finish_time() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void go_combat_log_notify::set_has_finish_time() {
  _has_bits_[0] |= 0x00000400u;
}
inline void go_combat_log_notify::clear_has_finish_time() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void go_combat_log_notify::clear_finish_time() {
  finish_time_ = 0u;
  clear_has_finish_time();
}
inline ::google::protobuf::uint32 go_combat_log_notify::finish_time() const {
  return finish_time_;
}
inline void go_combat_log_notify::set_finish_time(::google::protobuf::uint32 value) {
  set_has_finish_time();
  finish_time_ = value;
}

// optional uint32 log_time = 12;
inline bool go_combat_log_notify::has_log_time() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void go_combat_log_notify::set_has_log_time() {
  _has_bits_[0] |= 0x00000800u;
}
inline void go_combat_log_notify::clear_has_log_time() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void go_combat_log_notify::clear_log_time() {
  log_time_ = 0u;
  clear_has_log_time();
}
inline ::google::protobuf::uint32 go_combat_log_notify::log_time() const {
  return log_time_;
}
inline void go_combat_log_notify::set_log_time(::google::protobuf::uint32 value) {
  set_has_log_time();
  log_time_ = value;
}

// -------------------------------------------------------------------

// go_hero_exp_log_notify

// required uint64 role_uid = 1;
inline bool go_hero_exp_log_notify::has_role_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void go_hero_exp_log_notify::set_has_role_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void go_hero_exp_log_notify::clear_has_role_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void go_hero_exp_log_notify::clear_role_uid() {
  role_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_role_uid();
}
inline ::google::protobuf::uint64 go_hero_exp_log_notify::role_uid() const {
  return role_uid_;
}
inline void go_hero_exp_log_notify::set_role_uid(::google::protobuf::uint64 value) {
  set_has_role_uid();
  role_uid_ = value;
}

// required uint32 role_level = 2;
inline bool go_hero_exp_log_notify::has_role_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void go_hero_exp_log_notify::set_has_role_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void go_hero_exp_log_notify::clear_has_role_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void go_hero_exp_log_notify::clear_role_level() {
  role_level_ = 0u;
  clear_has_role_level();
}
inline ::google::protobuf::uint32 go_hero_exp_log_notify::role_level() const {
  return role_level_;
}
inline void go_hero_exp_log_notify::set_role_level(::google::protobuf::uint32 value) {
  set_has_role_level();
  role_level_ = value;
}

// required uint64 hero_uid = 3;
inline bool go_hero_exp_log_notify::has_hero_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void go_hero_exp_log_notify::set_has_hero_uid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void go_hero_exp_log_notify::clear_has_hero_uid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void go_hero_exp_log_notify::clear_hero_uid() {
  hero_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_hero_uid();
}
inline ::google::protobuf::uint64 go_hero_exp_log_notify::hero_uid() const {
  return hero_uid_;
}
inline void go_hero_exp_log_notify::set_hero_uid(::google::protobuf::uint64 value) {
  set_has_hero_uid();
  hero_uid_ = value;
}

// required uint32 hero_tid = 4;
inline bool go_hero_exp_log_notify::has_hero_tid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void go_hero_exp_log_notify::set_has_hero_tid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void go_hero_exp_log_notify::clear_has_hero_tid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void go_hero_exp_log_notify::clear_hero_tid() {
  hero_tid_ = 0u;
  clear_has_hero_tid();
}
inline ::google::protobuf::uint32 go_hero_exp_log_notify::hero_tid() const {
  return hero_tid_;
}
inline void go_hero_exp_log_notify::set_hero_tid(::google::protobuf::uint32 value) {
  set_has_hero_tid();
  hero_tid_ = value;
}

// required uint32 old_level = 5;
inline bool go_hero_exp_log_notify::has_old_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void go_hero_exp_log_notify::set_has_old_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void go_hero_exp_log_notify::clear_has_old_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void go_hero_exp_log_notify::clear_old_level() {
  old_level_ = 0u;
  clear_has_old_level();
}
inline ::google::protobuf::uint32 go_hero_exp_log_notify::old_level() const {
  return old_level_;
}
inline void go_hero_exp_log_notify::set_old_level(::google::protobuf::uint32 value) {
  set_has_old_level();
  old_level_ = value;
}

// required uint32 old_exp = 6;
inline bool go_hero_exp_log_notify::has_old_exp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void go_hero_exp_log_notify::set_has_old_exp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void go_hero_exp_log_notify::clear_has_old_exp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void go_hero_exp_log_notify::clear_old_exp() {
  old_exp_ = 0u;
  clear_has_old_exp();
}
inline ::google::protobuf::uint32 go_hero_exp_log_notify::old_exp() const {
  return old_exp_;
}
inline void go_hero_exp_log_notify::set_old_exp(::google::protobuf::uint32 value) {
  set_has_old_exp();
  old_exp_ = value;
}

// required uint32 up_exp = 7;
inline bool go_hero_exp_log_notify::has_up_exp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void go_hero_exp_log_notify::set_has_up_exp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void go_hero_exp_log_notify::clear_has_up_exp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void go_hero_exp_log_notify::clear_up_exp() {
  up_exp_ = 0u;
  clear_has_up_exp();
}
inline ::google::protobuf::uint32 go_hero_exp_log_notify::up_exp() const {
  return up_exp_;
}
inline void go_hero_exp_log_notify::set_up_exp(::google::protobuf::uint32 value) {
  set_has_up_exp();
  up_exp_ = value;
}

// required uint32 new_level = 8;
inline bool go_hero_exp_log_notify::has_new_level() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void go_hero_exp_log_notify::set_has_new_level() {
  _has_bits_[0] |= 0x00000080u;
}
inline void go_hero_exp_log_notify::clear_has_new_level() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void go_hero_exp_log_notify::clear_new_level() {
  new_level_ = 0u;
  clear_has_new_level();
}
inline ::google::protobuf::uint32 go_hero_exp_log_notify::new_level() const {
  return new_level_;
}
inline void go_hero_exp_log_notify::set_new_level(::google::protobuf::uint32 value) {
  set_has_new_level();
  new_level_ = value;
}

// required uint32 new_exp = 9;
inline bool go_hero_exp_log_notify::has_new_exp() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void go_hero_exp_log_notify::set_has_new_exp() {
  _has_bits_[0] |= 0x00000100u;
}
inline void go_hero_exp_log_notify::clear_has_new_exp() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void go_hero_exp_log_notify::clear_new_exp() {
  new_exp_ = 0u;
  clear_has_new_exp();
}
inline ::google::protobuf::uint32 go_hero_exp_log_notify::new_exp() const {
  return new_exp_;
}
inline void go_hero_exp_log_notify::set_new_exp(::google::protobuf::uint32 value) {
  set_has_new_exp();
  new_exp_ = value;
}

// required uint32 source_type = 10;
inline bool go_hero_exp_log_notify::has_source_type() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void go_hero_exp_log_notify::set_has_source_type() {
  _has_bits_[0] |= 0x00000200u;
}
inline void go_hero_exp_log_notify::clear_has_source_type() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void go_hero_exp_log_notify::clear_source_type() {
  source_type_ = 0u;
  clear_has_source_type();
}
inline ::google::protobuf::uint32 go_hero_exp_log_notify::source_type() const {
  return source_type_;
}
inline void go_hero_exp_log_notify::set_source_type(::google::protobuf::uint32 value) {
  set_has_source_type();
  source_type_ = value;
}

// optional uint32 source_param = 11;
inline bool go_hero_exp_log_notify::has_source_param() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void go_hero_exp_log_notify::set_has_source_param() {
  _has_bits_[0] |= 0x00000400u;
}
inline void go_hero_exp_log_notify::clear_has_source_param() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void go_hero_exp_log_notify::clear_source_param() {
  source_param_ = 0u;
  clear_has_source_param();
}
inline ::google::protobuf::uint32 go_hero_exp_log_notify::source_param() const {
  return source_param_;
}
inline void go_hero_exp_log_notify::set_source_param(::google::protobuf::uint32 value) {
  set_has_source_param();
  source_param_ = value;
}

// required uint32 log_time = 12;
inline bool go_hero_exp_log_notify::has_log_time() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void go_hero_exp_log_notify::set_has_log_time() {
  _has_bits_[0] |= 0x00000800u;
}
inline void go_hero_exp_log_notify::clear_has_log_time() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void go_hero_exp_log_notify::clear_log_time() {
  log_time_ = 0u;
  clear_has_log_time();
}
inline ::google::protobuf::uint32 go_hero_exp_log_notify::log_time() const {
  return log_time_;
}
inline void go_hero_exp_log_notify::set_log_time(::google::protobuf::uint32 value) {
  set_has_log_time();
  log_time_ = value;
}

// -------------------------------------------------------------------

// eo_redbag_log_notify

// optional uint64 role_uid = 1;
inline bool eo_redbag_log_notify::has_role_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void eo_redbag_log_notify::set_has_role_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void eo_redbag_log_notify::clear_has_role_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void eo_redbag_log_notify::clear_role_uid() {
  role_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_role_uid();
}
inline ::google::protobuf::uint64 eo_redbag_log_notify::role_uid() const {
  return role_uid_;
}
inline void eo_redbag_log_notify::set_role_uid(::google::protobuf::uint64 value) {
  set_has_role_uid();
  role_uid_ = value;
}

// optional string role_name = 2;
inline bool eo_redbag_log_notify::has_role_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void eo_redbag_log_notify::set_has_role_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void eo_redbag_log_notify::clear_has_role_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void eo_redbag_log_notify::clear_role_name() {
  if (role_name_ != &::google::protobuf::internal::kEmptyString) {
    role_name_->clear();
  }
  clear_has_role_name();
}
inline const ::std::string& eo_redbag_log_notify::role_name() const {
  return *role_name_;
}
inline void eo_redbag_log_notify::set_role_name(const ::std::string& value) {
  set_has_role_name();
  if (role_name_ == &::google::protobuf::internal::kEmptyString) {
    role_name_ = new ::std::string;
  }
  role_name_->assign(value);
}
inline void eo_redbag_log_notify::set_role_name(const char* value) {
  set_has_role_name();
  if (role_name_ == &::google::protobuf::internal::kEmptyString) {
    role_name_ = new ::std::string;
  }
  role_name_->assign(value);
}
inline void eo_redbag_log_notify::set_role_name(const char* value, size_t size) {
  set_has_role_name();
  if (role_name_ == &::google::protobuf::internal::kEmptyString) {
    role_name_ = new ::std::string;
  }
  role_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* eo_redbag_log_notify::mutable_role_name() {
  set_has_role_name();
  if (role_name_ == &::google::protobuf::internal::kEmptyString) {
    role_name_ = new ::std::string;
  }
  return role_name_;
}
inline ::std::string* eo_redbag_log_notify::release_role_name() {
  clear_has_role_name();
  if (role_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = role_name_;
    role_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void eo_redbag_log_notify::set_allocated_role_name(::std::string* role_name) {
  if (role_name_ != &::google::protobuf::internal::kEmptyString) {
    delete role_name_;
  }
  if (role_name) {
    set_has_role_name();
    role_name_ = role_name;
  } else {
    clear_has_role_name();
    role_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 redbag_uid = 3;
inline bool eo_redbag_log_notify::has_redbag_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void eo_redbag_log_notify::set_has_redbag_uid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void eo_redbag_log_notify::clear_has_redbag_uid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void eo_redbag_log_notify::clear_redbag_uid() {
  redbag_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_redbag_uid();
}
inline ::google::protobuf::uint64 eo_redbag_log_notify::redbag_uid() const {
  return redbag_uid_;
}
inline void eo_redbag_log_notify::set_redbag_uid(::google::protobuf::uint64 value) {
  set_has_redbag_uid();
  redbag_uid_ = value;
}

// optional uint32 total_count = 4;
inline bool eo_redbag_log_notify::has_total_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void eo_redbag_log_notify::set_has_total_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void eo_redbag_log_notify::clear_has_total_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void eo_redbag_log_notify::clear_total_count() {
  total_count_ = 0u;
  clear_has_total_count();
}
inline ::google::protobuf::uint32 eo_redbag_log_notify::total_count() const {
  return total_count_;
}
inline void eo_redbag_log_notify::set_total_count(::google::protobuf::uint32 value) {
  set_has_total_count();
  total_count_ = value;
}

// optional uint32 total_money = 5;
inline bool eo_redbag_log_notify::has_total_money() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void eo_redbag_log_notify::set_has_total_money() {
  _has_bits_[0] |= 0x00000010u;
}
inline void eo_redbag_log_notify::clear_has_total_money() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void eo_redbag_log_notify::clear_total_money() {
  total_money_ = 0u;
  clear_has_total_money();
}
inline ::google::protobuf::uint32 eo_redbag_log_notify::total_money() const {
  return total_money_;
}
inline void eo_redbag_log_notify::set_total_money(::google::protobuf::uint32 value) {
  set_has_total_money();
  total_money_ = value;
}

// optional uint32 draw_money = 6;
inline bool eo_redbag_log_notify::has_draw_money() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void eo_redbag_log_notify::set_has_draw_money() {
  _has_bits_[0] |= 0x00000020u;
}
inline void eo_redbag_log_notify::clear_has_draw_money() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void eo_redbag_log_notify::clear_draw_money() {
  draw_money_ = 0u;
  clear_has_draw_money();
}
inline ::google::protobuf::uint32 eo_redbag_log_notify::draw_money() const {
  return draw_money_;
}
inline void eo_redbag_log_notify::set_draw_money(::google::protobuf::uint32 value) {
  set_has_draw_money();
  draw_money_ = value;
}

// optional uint32 rest_count = 7;
inline bool eo_redbag_log_notify::has_rest_count() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void eo_redbag_log_notify::set_has_rest_count() {
  _has_bits_[0] |= 0x00000040u;
}
inline void eo_redbag_log_notify::clear_has_rest_count() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void eo_redbag_log_notify::clear_rest_count() {
  rest_count_ = 0u;
  clear_has_rest_count();
}
inline ::google::protobuf::uint32 eo_redbag_log_notify::rest_count() const {
  return rest_count_;
}
inline void eo_redbag_log_notify::set_rest_count(::google::protobuf::uint32 value) {
  set_has_rest_count();
  rest_count_ = value;
}

// optional uint32 rest_money = 8;
inline bool eo_redbag_log_notify::has_rest_money() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void eo_redbag_log_notify::set_has_rest_money() {
  _has_bits_[0] |= 0x00000080u;
}
inline void eo_redbag_log_notify::clear_has_rest_money() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void eo_redbag_log_notify::clear_rest_money() {
  rest_money_ = 0u;
  clear_has_rest_money();
}
inline ::google::protobuf::uint32 eo_redbag_log_notify::rest_money() const {
  return rest_money_;
}
inline void eo_redbag_log_notify::set_rest_money(::google::protobuf::uint32 value) {
  set_has_rest_money();
  rest_money_ = value;
}

// optional uint32 source_type = 9;
inline bool eo_redbag_log_notify::has_source_type() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void eo_redbag_log_notify::set_has_source_type() {
  _has_bits_[0] |= 0x00000100u;
}
inline void eo_redbag_log_notify::clear_has_source_type() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void eo_redbag_log_notify::clear_source_type() {
  source_type_ = 0u;
  clear_has_source_type();
}
inline ::google::protobuf::uint32 eo_redbag_log_notify::source_type() const {
  return source_type_;
}
inline void eo_redbag_log_notify::set_source_type(::google::protobuf::uint32 value) {
  set_has_source_type();
  source_type_ = value;
}

// optional uint32 log_time = 10;
inline bool eo_redbag_log_notify::has_log_time() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void eo_redbag_log_notify::set_has_log_time() {
  _has_bits_[0] |= 0x00000200u;
}
inline void eo_redbag_log_notify::clear_has_log_time() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void eo_redbag_log_notify::clear_log_time() {
  log_time_ = 0u;
  clear_has_log_time();
}
inline ::google::protobuf::uint32 eo_redbag_log_notify::log_time() const {
  return log_time_;
}
inline void eo_redbag_log_notify::set_log_time(::google::protobuf::uint32 value) {
  set_has_log_time();
  log_time_ = value;
}

// -------------------------------------------------------------------

// go_patrol_hire_log_notify

// optional uint64 role_uid = 1;
inline bool go_patrol_hire_log_notify::has_role_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void go_patrol_hire_log_notify::set_has_role_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void go_patrol_hire_log_notify::clear_has_role_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void go_patrol_hire_log_notify::clear_role_uid() {
  role_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_role_uid();
}
inline ::google::protobuf::uint64 go_patrol_hire_log_notify::role_uid() const {
  return role_uid_;
}
inline void go_patrol_hire_log_notify::set_role_uid(::google::protobuf::uint64 value) {
  set_has_role_uid();
  role_uid_ = value;
}

// optional uint32 begin_time = 2;
inline bool go_patrol_hire_log_notify::has_begin_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void go_patrol_hire_log_notify::set_has_begin_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void go_patrol_hire_log_notify::clear_has_begin_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void go_patrol_hire_log_notify::clear_begin_time() {
  begin_time_ = 0u;
  clear_has_begin_time();
}
inline ::google::protobuf::uint32 go_patrol_hire_log_notify::begin_time() const {
  return begin_time_;
}
inline void go_patrol_hire_log_notify::set_begin_time(::google::protobuf::uint32 value) {
  set_has_begin_time();
  begin_time_ = value;
}

// optional uint32 end_time = 3;
inline bool go_patrol_hire_log_notify::has_end_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void go_patrol_hire_log_notify::set_has_end_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void go_patrol_hire_log_notify::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void go_patrol_hire_log_notify::clear_end_time() {
  end_time_ = 0u;
  clear_has_end_time();
}
inline ::google::protobuf::uint32 go_patrol_hire_log_notify::end_time() const {
  return end_time_;
}
inline void go_patrol_hire_log_notify::set_end_time(::google::protobuf::uint32 value) {
  set_has_end_time();
  end_time_ = value;
}

// optional uint32 count = 4;
inline bool go_patrol_hire_log_notify::has_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void go_patrol_hire_log_notify::set_has_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void go_patrol_hire_log_notify::clear_has_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void go_patrol_hire_log_notify::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 go_patrol_hire_log_notify::count() const {
  return count_;
}
inline void go_patrol_hire_log_notify::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// optional uint32 total_exp = 5;
inline bool go_patrol_hire_log_notify::has_total_exp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void go_patrol_hire_log_notify::set_has_total_exp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void go_patrol_hire_log_notify::clear_has_total_exp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void go_patrol_hire_log_notify::clear_total_exp() {
  total_exp_ = 0u;
  clear_has_total_exp();
}
inline ::google::protobuf::uint32 go_patrol_hire_log_notify::total_exp() const {
  return total_exp_;
}
inline void go_patrol_hire_log_notify::set_total_exp(::google::protobuf::uint32 value) {
  set_has_total_exp();
  total_exp_ = value;
}

// optional uint32 use_multi_point = 6;
inline bool go_patrol_hire_log_notify::has_use_multi_point() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void go_patrol_hire_log_notify::set_has_use_multi_point() {
  _has_bits_[0] |= 0x00000020u;
}
inline void go_patrol_hire_log_notify::clear_has_use_multi_point() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void go_patrol_hire_log_notify::clear_use_multi_point() {
  use_multi_point_ = 0u;
  clear_has_use_multi_point();
}
inline ::google::protobuf::uint32 go_patrol_hire_log_notify::use_multi_point() const {
  return use_multi_point_;
}
inline void go_patrol_hire_log_notify::set_use_multi_point(::google::protobuf::uint32 value) {
  set_has_use_multi_point();
  use_multi_point_ = value;
}

// optional uint32 map_id = 7;
inline bool go_patrol_hire_log_notify::has_map_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void go_patrol_hire_log_notify::set_has_map_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void go_patrol_hire_log_notify::clear_has_map_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void go_patrol_hire_log_notify::clear_map_id() {
  map_id_ = 0u;
  clear_has_map_id();
}
inline ::google::protobuf::uint32 go_patrol_hire_log_notify::map_id() const {
  return map_id_;
}
inline void go_patrol_hire_log_notify::set_map_id(::google::protobuf::uint32 value) {
  set_has_map_id();
  map_id_ = value;
}

// optional uint32 source_type = 8;
inline bool go_patrol_hire_log_notify::has_source_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void go_patrol_hire_log_notify::set_has_source_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void go_patrol_hire_log_notify::clear_has_source_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void go_patrol_hire_log_notify::clear_source_type() {
  source_type_ = 0u;
  clear_has_source_type();
}
inline ::google::protobuf::uint32 go_patrol_hire_log_notify::source_type() const {
  return source_type_;
}
inline void go_patrol_hire_log_notify::set_source_type(::google::protobuf::uint32 value) {
  set_has_source_type();
  source_type_ = value;
}

// optional uint32 log_time = 9;
inline bool go_patrol_hire_log_notify::has_log_time() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void go_patrol_hire_log_notify::set_has_log_time() {
  _has_bits_[0] |= 0x00000100u;
}
inline void go_patrol_hire_log_notify::clear_has_log_time() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void go_patrol_hire_log_notify::clear_log_time() {
  log_time_ = 0u;
  clear_has_log_time();
}
inline ::google::protobuf::uint32 go_patrol_hire_log_notify::log_time() const {
  return log_time_;
}
inline void go_patrol_hire_log_notify::set_log_time(::google::protobuf::uint32 value) {
  set_has_log_time();
  log_time_ = value;
}

// -------------------------------------------------------------------

// eo_offline_arena_rank_log_notify

// optional uint64 role_uid = 1;
inline bool eo_offline_arena_rank_log_notify::has_role_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void eo_offline_arena_rank_log_notify::set_has_role_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void eo_offline_arena_rank_log_notify::clear_has_role_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void eo_offline_arena_rank_log_notify::clear_role_uid() {
  role_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_role_uid();
}
inline ::google::protobuf::uint64 eo_offline_arena_rank_log_notify::role_uid() const {
  return role_uid_;
}
inline void eo_offline_arena_rank_log_notify::set_role_uid(::google::protobuf::uint64 value) {
  set_has_role_uid();
  role_uid_ = value;
}

// optional string role_name = 2;
inline bool eo_offline_arena_rank_log_notify::has_role_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void eo_offline_arena_rank_log_notify::set_has_role_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void eo_offline_arena_rank_log_notify::clear_has_role_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void eo_offline_arena_rank_log_notify::clear_role_name() {
  if (role_name_ != &::google::protobuf::internal::kEmptyString) {
    role_name_->clear();
  }
  clear_has_role_name();
}
inline const ::std::string& eo_offline_arena_rank_log_notify::role_name() const {
  return *role_name_;
}
inline void eo_offline_arena_rank_log_notify::set_role_name(const ::std::string& value) {
  set_has_role_name();
  if (role_name_ == &::google::protobuf::internal::kEmptyString) {
    role_name_ = new ::std::string;
  }
  role_name_->assign(value);
}
inline void eo_offline_arena_rank_log_notify::set_role_name(const char* value) {
  set_has_role_name();
  if (role_name_ == &::google::protobuf::internal::kEmptyString) {
    role_name_ = new ::std::string;
  }
  role_name_->assign(value);
}
inline void eo_offline_arena_rank_log_notify::set_role_name(const char* value, size_t size) {
  set_has_role_name();
  if (role_name_ == &::google::protobuf::internal::kEmptyString) {
    role_name_ = new ::std::string;
  }
  role_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* eo_offline_arena_rank_log_notify::mutable_role_name() {
  set_has_role_name();
  if (role_name_ == &::google::protobuf::internal::kEmptyString) {
    role_name_ = new ::std::string;
  }
  return role_name_;
}
inline ::std::string* eo_offline_arena_rank_log_notify::release_role_name() {
  clear_has_role_name();
  if (role_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = role_name_;
    role_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void eo_offline_arena_rank_log_notify::set_allocated_role_name(::std::string* role_name) {
  if (role_name_ != &::google::protobuf::internal::kEmptyString) {
    delete role_name_;
  }
  if (role_name) {
    set_has_role_name();
    role_name_ = role_name;
  } else {
    clear_has_role_name();
    role_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 role_level = 3;
inline bool eo_offline_arena_rank_log_notify::has_role_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void eo_offline_arena_rank_log_notify::set_has_role_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void eo_offline_arena_rank_log_notify::clear_has_role_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void eo_offline_arena_rank_log_notify::clear_role_level() {
  role_level_ = 0u;
  clear_has_role_level();
}
inline ::google::protobuf::uint32 eo_offline_arena_rank_log_notify::role_level() const {
  return role_level_;
}
inline void eo_offline_arena_rank_log_notify::set_role_level(::google::protobuf::uint32 value) {
  set_has_role_level();
  role_level_ = value;
}

// optional uint32 op_type = 4;
inline bool eo_offline_arena_rank_log_notify::has_op_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void eo_offline_arena_rank_log_notify::set_has_op_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void eo_offline_arena_rank_log_notify::clear_has_op_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void eo_offline_arena_rank_log_notify::clear_op_type() {
  op_type_ = 0u;
  clear_has_op_type();
}
inline ::google::protobuf::uint32 eo_offline_arena_rank_log_notify::op_type() const {
  return op_type_;
}
inline void eo_offline_arena_rank_log_notify::set_op_type(::google::protobuf::uint32 value) {
  set_has_op_type();
  op_type_ = value;
}

// optional uint32 old_class = 5;
inline bool eo_offline_arena_rank_log_notify::has_old_class() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void eo_offline_arena_rank_log_notify::set_has_old_class() {
  _has_bits_[0] |= 0x00000010u;
}
inline void eo_offline_arena_rank_log_notify::clear_has_old_class() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void eo_offline_arena_rank_log_notify::clear_old_class() {
  old_class_ = 0u;
  clear_has_old_class();
}
inline ::google::protobuf::uint32 eo_offline_arena_rank_log_notify::old_class() const {
  return old_class_;
}
inline void eo_offline_arena_rank_log_notify::set_old_class(::google::protobuf::uint32 value) {
  set_has_old_class();
  old_class_ = value;
}

// optional uint32 old_rank = 6;
inline bool eo_offline_arena_rank_log_notify::has_old_rank() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void eo_offline_arena_rank_log_notify::set_has_old_rank() {
  _has_bits_[0] |= 0x00000020u;
}
inline void eo_offline_arena_rank_log_notify::clear_has_old_rank() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void eo_offline_arena_rank_log_notify::clear_old_rank() {
  old_rank_ = 0u;
  clear_has_old_rank();
}
inline ::google::protobuf::uint32 eo_offline_arena_rank_log_notify::old_rank() const {
  return old_rank_;
}
inline void eo_offline_arena_rank_log_notify::set_old_rank(::google::protobuf::uint32 value) {
  set_has_old_rank();
  old_rank_ = value;
}

// optional uint32 new_class = 7;
inline bool eo_offline_arena_rank_log_notify::has_new_class() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void eo_offline_arena_rank_log_notify::set_has_new_class() {
  _has_bits_[0] |= 0x00000040u;
}
inline void eo_offline_arena_rank_log_notify::clear_has_new_class() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void eo_offline_arena_rank_log_notify::clear_new_class() {
  new_class_ = 0u;
  clear_has_new_class();
}
inline ::google::protobuf::uint32 eo_offline_arena_rank_log_notify::new_class() const {
  return new_class_;
}
inline void eo_offline_arena_rank_log_notify::set_new_class(::google::protobuf::uint32 value) {
  set_has_new_class();
  new_class_ = value;
}

// optional uint32 new_rank = 8;
inline bool eo_offline_arena_rank_log_notify::has_new_rank() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void eo_offline_arena_rank_log_notify::set_has_new_rank() {
  _has_bits_[0] |= 0x00000080u;
}
inline void eo_offline_arena_rank_log_notify::clear_has_new_rank() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void eo_offline_arena_rank_log_notify::clear_new_rank() {
  new_rank_ = 0u;
  clear_has_new_rank();
}
inline ::google::protobuf::uint32 eo_offline_arena_rank_log_notify::new_rank() const {
  return new_rank_;
}
inline void eo_offline_arena_rank_log_notify::set_new_rank(::google::protobuf::uint32 value) {
  set_has_new_rank();
  new_rank_ = value;
}

// optional uint32 log_time = 9;
inline bool eo_offline_arena_rank_log_notify::has_log_time() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void eo_offline_arena_rank_log_notify::set_has_log_time() {
  _has_bits_[0] |= 0x00000100u;
}
inline void eo_offline_arena_rank_log_notify::clear_has_log_time() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void eo_offline_arena_rank_log_notify::clear_log_time() {
  log_time_ = 0u;
  clear_has_log_time();
}
inline ::google::protobuf::uint32 eo_offline_arena_rank_log_notify::log_time() const {
  return log_time_;
}
inline void eo_offline_arena_rank_log_notify::set_log_time(::google::protobuf::uint32 value) {
  set_has_log_time();
  log_time_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace log
}  // namespace proto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_log_2eproto__INCLUDED
