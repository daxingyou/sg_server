// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GarrisonCitylist.proto

#ifndef PROTOBUF_GarrisonCitylist_2eproto__INCLUDED
#define PROTOBUF_GarrisonCitylist_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Hades {
namespace Data {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_GarrisonCitylist_2eproto();
void protobuf_AssignDesc_GarrisonCitylist_2eproto();
void protobuf_ShutdownFile_GarrisonCitylist_2eproto();

class GarrisonCitylist;
class MD5OfGarrisonCitylist;

// ===================================================================

class GarrisonCitylist : public ::google::protobuf::Message {
 public:
  GarrisonCitylist();
  virtual ~GarrisonCitylist();

  GarrisonCitylist(const GarrisonCitylist& from);

  inline GarrisonCitylist& operator=(const GarrisonCitylist& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GarrisonCitylist& default_instance();

  void Swap(GarrisonCitylist* other);

  // implements Message ----------------------------------------------

  GarrisonCitylist* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GarrisonCitylist& from);
  void MergeFrom(const GarrisonCitylist& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 mapid = 2;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 2;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // optional int32 area = 3;
  inline bool has_area() const;
  inline void clear_area();
  static const int kAreaFieldNumber = 3;
  inline ::google::protobuf::int32 area() const;
  inline void set_area(::google::protobuf::int32 value);

  // optional int32 fighting_enter = 4;
  inline bool has_fighting_enter() const;
  inline void clear_fighting_enter();
  static const int kFightingEnterFieldNumber = 4;
  inline ::google::protobuf::int32 fighting_enter() const;
  inline void set_fighting_enter(::google::protobuf::int32 value);

  // optional int32 Coin = 5;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 5;
  inline ::google::protobuf::int32 coin() const;
  inline void set_coin(::google::protobuf::int32 value);

  // optional int32 Exp = 6;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 6;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // repeated int32 Item = 7;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 7;
  inline ::google::protobuf::int32 item(int index) const;
  inline void set_item(int index, ::google::protobuf::int32 value);
  inline void add_item(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      item() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_item();

  // @@protoc_insertion_point(class_scope:Hades.Data.GarrisonCitylist)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_area();
  inline void clear_has_area();
  inline void set_has_fighting_enter();
  inline void clear_has_fighting_enter();
  inline void set_has_coin();
  inline void clear_has_coin();
  inline void set_has_exp();
  inline void clear_has_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 mapid_;
  ::google::protobuf::int32 area_;
  ::google::protobuf::int32 fighting_enter_;
  ::google::protobuf::int32 coin_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > item_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_GarrisonCitylist_2eproto();
  friend void protobuf_AssignDesc_GarrisonCitylist_2eproto();
  friend void protobuf_ShutdownFile_GarrisonCitylist_2eproto();

  void InitAsDefaultInstance();
  static GarrisonCitylist* default_instance_;
};
// -------------------------------------------------------------------

class MD5OfGarrisonCitylist : public ::google::protobuf::Message {
 public:
  MD5OfGarrisonCitylist();
  virtual ~MD5OfGarrisonCitylist();

  MD5OfGarrisonCitylist(const MD5OfGarrisonCitylist& from);

  inline MD5OfGarrisonCitylist& operator=(const MD5OfGarrisonCitylist& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MD5OfGarrisonCitylist& default_instance();

  void Swap(MD5OfGarrisonCitylist* other);

  // implements Message ----------------------------------------------

  MD5OfGarrisonCitylist* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MD5OfGarrisonCitylist& from);
  void MergeFrom(const MD5OfGarrisonCitylist& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string val = 1 [default = "B47FAA3A55A419C164ECD428C8DE9F6A"];
  inline bool has_val() const;
  inline void clear_val();
  static const int kValFieldNumber = 1;
  inline const ::std::string& val() const;
  inline void set_val(const ::std::string& value);
  inline void set_val(const char* value);
  inline void set_val(const char* value, size_t size);
  inline ::std::string* mutable_val();
  inline ::std::string* release_val();
  inline void set_allocated_val(::std::string* val);

  // @@protoc_insertion_point(class_scope:Hades.Data.MD5OfGarrisonCitylist)
 private:
  inline void set_has_val();
  inline void clear_has_val();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* val_;
  static ::std::string* _default_val_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GarrisonCitylist_2eproto();
  friend void protobuf_AssignDesc_GarrisonCitylist_2eproto();
  friend void protobuf_ShutdownFile_GarrisonCitylist_2eproto();

  void InitAsDefaultInstance();
  static MD5OfGarrisonCitylist* default_instance_;
};
// ===================================================================


// ===================================================================

// GarrisonCitylist

// optional int32 id = 1;
inline bool GarrisonCitylist::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GarrisonCitylist::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GarrisonCitylist::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GarrisonCitylist::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GarrisonCitylist::id() const {
  return id_;
}
inline void GarrisonCitylist::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 mapid = 2;
inline bool GarrisonCitylist::has_mapid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GarrisonCitylist::set_has_mapid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GarrisonCitylist::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GarrisonCitylist::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 GarrisonCitylist::mapid() const {
  return mapid_;
}
inline void GarrisonCitylist::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional int32 area = 3;
inline bool GarrisonCitylist::has_area() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GarrisonCitylist::set_has_area() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GarrisonCitylist::clear_has_area() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GarrisonCitylist::clear_area() {
  area_ = 0;
  clear_has_area();
}
inline ::google::protobuf::int32 GarrisonCitylist::area() const {
  return area_;
}
inline void GarrisonCitylist::set_area(::google::protobuf::int32 value) {
  set_has_area();
  area_ = value;
}

// optional int32 fighting_enter = 4;
inline bool GarrisonCitylist::has_fighting_enter() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GarrisonCitylist::set_has_fighting_enter() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GarrisonCitylist::clear_has_fighting_enter() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GarrisonCitylist::clear_fighting_enter() {
  fighting_enter_ = 0;
  clear_has_fighting_enter();
}
inline ::google::protobuf::int32 GarrisonCitylist::fighting_enter() const {
  return fighting_enter_;
}
inline void GarrisonCitylist::set_fighting_enter(::google::protobuf::int32 value) {
  set_has_fighting_enter();
  fighting_enter_ = value;
}

// optional int32 Coin = 5;
inline bool GarrisonCitylist::has_coin() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GarrisonCitylist::set_has_coin() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GarrisonCitylist::clear_has_coin() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GarrisonCitylist::clear_coin() {
  coin_ = 0;
  clear_has_coin();
}
inline ::google::protobuf::int32 GarrisonCitylist::coin() const {
  return coin_;
}
inline void GarrisonCitylist::set_coin(::google::protobuf::int32 value) {
  set_has_coin();
  coin_ = value;
}

// optional int32 Exp = 6;
inline bool GarrisonCitylist::has_exp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GarrisonCitylist::set_has_exp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GarrisonCitylist::clear_has_exp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GarrisonCitylist::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 GarrisonCitylist::exp() const {
  return exp_;
}
inline void GarrisonCitylist::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// repeated int32 Item = 7;
inline int GarrisonCitylist::item_size() const {
  return item_.size();
}
inline void GarrisonCitylist::clear_item() {
  item_.Clear();
}
inline ::google::protobuf::int32 GarrisonCitylist::item(int index) const {
  return item_.Get(index);
}
inline void GarrisonCitylist::set_item(int index, ::google::protobuf::int32 value) {
  item_.Set(index, value);
}
inline void GarrisonCitylist::add_item(::google::protobuf::int32 value) {
  item_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GarrisonCitylist::item() const {
  return item_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GarrisonCitylist::mutable_item() {
  return &item_;
}

// -------------------------------------------------------------------

// MD5OfGarrisonCitylist

// optional string val = 1 [default = "B47FAA3A55A419C164ECD428C8DE9F6A"];
inline bool MD5OfGarrisonCitylist::has_val() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MD5OfGarrisonCitylist::set_has_val() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MD5OfGarrisonCitylist::clear_has_val() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MD5OfGarrisonCitylist::clear_val() {
  if (val_ != _default_val_) {
    val_->assign(*_default_val_);
  }
  clear_has_val();
}
inline const ::std::string& MD5OfGarrisonCitylist::val() const {
  return *val_;
}
inline void MD5OfGarrisonCitylist::set_val(const ::std::string& value) {
  set_has_val();
  if (val_ == _default_val_) {
    val_ = new ::std::string;
  }
  val_->assign(value);
}
inline void MD5OfGarrisonCitylist::set_val(const char* value) {
  set_has_val();
  if (val_ == _default_val_) {
    val_ = new ::std::string;
  }
  val_->assign(value);
}
inline void MD5OfGarrisonCitylist::set_val(const char* value, size_t size) {
  set_has_val();
  if (val_ == _default_val_) {
    val_ = new ::std::string;
  }
  val_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MD5OfGarrisonCitylist::mutable_val() {
  set_has_val();
  if (val_ == _default_val_) {
    val_ = new ::std::string(*_default_val_);
  }
  return val_;
}
inline ::std::string* MD5OfGarrisonCitylist::release_val() {
  clear_has_val();
  if (val_ == _default_val_) {
    return NULL;
  } else {
    ::std::string* temp = val_;
    val_ = const_cast< ::std::string*>(_default_val_);
    return temp;
  }
}
inline void MD5OfGarrisonCitylist::set_allocated_val(::std::string* val) {
  if (val_ != _default_val_) {
    delete val_;
  }
  if (val) {
    set_has_val();
    val_ = val;
  } else {
    clear_has_val();
    val_ = const_cast< ::std::string*>(_default_val_);
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Data
}  // namespace Hades

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GarrisonCitylist_2eproto__INCLUDED
